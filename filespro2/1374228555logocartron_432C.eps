%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Sans titre - 1.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: geoffrey
%%CreationDate: 14/06/11
%%BoundingBox: 0 0 459 570
%%HiResBoundingBox: 0 0 458.0591 569.7242
%%CropBox: 0 0 458.0591 569.7242
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 104 128 8%%BeginData: 12642 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2DFFA8FFFFFFA8522EFD04FFA8FD56FFA8A8FFFFFF522753FFFF%A8272784FFFF7DF859FFFFFFA8A8FD50FF2728A8FFFF59057DFFFFFF7D53%FFFFFF592752FFFFA82752A8FD4AFFA8597DFFA82827A8FFFFA8527DFFFF%FF527DFFFFFFA828FFFFFF842727FFFF7E52AFFD46FF7D0052FFFFA852A8%FFFFFF2E7DFFFFFF5352FFFFFF5253FFFFFFAF2EFFFFFF272759FD44FFA8%FF842E52FFFFFF2E52FFFFFF5227FFFFFF2752FFFFA8282EFFFFFF2E52FF%FFFF5227A8FFA8A8FD40FF2E277EFFA852A8FFFF7D27A8FFFF28277DFFA8%2827FFFF7D2752FFFF7D2753FFFFA82EFFFFA82752FD3FFFA82EF87EFFFF%2E2EA8FF522727FFA82E272EFF8427277DFF272727FFA82E007DFFFF2752%FFFF592727FFFFA8FD3DFFA8A87DFFFF7E2759FF84272859FF282E27A87D%2827847D282752FF7D27287DFF52277DFFFF7E7DFFFFA87DFD3FFF7D52FF%7D2827847D27272859522727285227282E522727277D272727A87D2727A8%FF597DFFFFA92EA8FD37FFA8A8FD07FF527DFF272E287D2752272E275227%2E27527D847DA87D7E597D2E2E52522752FF7D52FFFFFFA8A8FD39FF28A8%FD06FF7E277D52272827282728272827282727275952535259527D59847D%7D2827527D05A8FFFFA82E53FD39FF7D7DFD07FF53282E52272E27522752%275227522752FD05FFAF7D7E535953A87E59277DFFFFFFA852FD3AFFA884%7DFD07FF2727272E2728272E2728272E272727FD09FFA88452597D2EA8FF%FFFFA8FD3CFF5352FD07FF84272E2752272E272E27282728272EFD0CFF7D%527DFFFFFF7D277DFD3BFF7E52FD07FFA85227282727272827525253527D%527D597D7D847EAFA8FD04FFA828FFFFFFA87D7DFD3EFF7DA8FD06FFA828%27527DA8A8FD07FF2728272827522752527EA8FF52A8FD04FF84A8FD3DFF%A8277DFD07FF5253FD0AFFA828272E2728272E272705282759FFFFFFAF27%277DFD3EFF52FFA8FD07FF527DA8FD09FF272E2752272E275227282752A8%FFFFFFA87D7DFD40FF7D2EA8FD07FF53522753537D7DA8A8A87D27272705%FD04272E527DA8FD05FFA8A8FD40FF5927AFFD0AFF847E597D5359527D52%59527D7D847EFD08FFA82728A8FD40FF537DA8A8FD1FFFAF285253FD43FF%7D52FD15FFA8A8FD0EFFA8FD3FFFA80528FD06FFA87DFD08FF84FD04FF52%52FD07FFA87D5253A8FFA87DFD3FFFA82E7DFD07FF287DFD07FF53A8FFFF%FF272EA8FD06FF7D272753FFFF7D59FD3CFFAFFFFFFF59FF7D7DFD04FFA8%2E27A8FFFFFFAF525927522EA8A8282752A8FD05FF7DFFA8FFFFFF277DFD%3CFFA8A8FFFFFF842852FD04FFA827287DFD04FFAF272E277DFFFF27522E%52A8FFFFFFAFA8A884FFFFA8277DFD3CFFA852FFFFFF7DF87DAFFFFFFF28%2E2752FD04FF532727272EAFA82E27522E52AFFFA82E052752FFFF5900A8%FD3DFF527DFFFF7D59FF847DFF7D522E5227FFFFFFA884A8527DA884FF52%28277D5259FF7E525953FFFFFF2752A8FD3DFF7D05A8FFFFA8FF2752FF59%522E2728A8FD05FF59FD04FF7D272727A827A8FD06FF592727FD3EFFAF2E%27FFFFFF522753FF527D272E27A8FD0AFFA85227277D7D52A87DA8A8FFA8%522752FD08FFA8FD2CFFA8FD09FF532752FFFF2E27FFFF52522827277DFD%07FFA8FFFFFF52272752A82E2727007DFF59052759FD05FFA8A85284FD2D%FF7DA8FD08FF27277DFF59A8FFFF52A8282E27A8FFA87DFFFFFF52522752%A8FF272E287D272E272E7DA82752277D7D7E84A8535252A8FD2EFFA82E52%7DFD06FFA827277DFFA8FFFF597D7D2727A8A82752FFFF5227285227277D%592728272E2728272E2727272E2727275227527DFD32FF53272752598484%FFFFFF7EA8FD04FF7E5952282EA8272752FFA82E52FFFFA827285952272E%2752272E272E527D272827272EA8FD04FFA9FD30FFA85927270027272E2E%535259537D5252272727522727057DFF8405527DFFFFA82728522E272827%2E27272752A8FF7D5927272752525953A9FD30FFA8A8FF7E7D2E2E272827%522728272E272E2752272E2752A8A8272E27272EFFFFA827525952275227%5252522752A8FFFFFFA8A87D7EA8FD32FFA87D5259522E2727277E2E2827%28272E2728272E272727A927277DA82E2727A8FF7D057D5227272752FFFF%5927287DFD38FFAFFFFFFF7D5227527DFF7D282728272E2752272E275227%52592859FFFFFF592727A8FF525352272E272E52847D52272853FD37FFA8%7D7D52525284FFFF5327277D7E842727272827282728277D275284FFFFFF%5927277D535227282728FD05272E2727277DA8FD3CFF522E2752A8FF7D52%2752272E2752277D522E27272EA8FFFF7D28287D2752272E275227522752%27522752272E2E7D7DA884FD35FF842727272EFD052728272E2728275352%272E7D2E270052A8FF52535227272E2728272E2728272E2728272EFD0427%05272EFD32FF7D52272E272E2752272E275227285252272859522EFFFFFF%A852052E53535352272E2E7D272E2752272E2752272E27522753A8A82E53%FD2DFF7D7D52522727272827282728272827282728277D2728277D2752A8%A9FFFFFF7D27275252272827597D27272827282728272827282727275252%2E59FD2CFF8428272E527D272E2752275227522752275227528452275259%52272727525284A8A82E7D28522728598427522752275227522752275252%52272827A8FD2DFF27277DA853282728272E2728272E2728272752A82728%5352275252522727002728525228272E277D7D272728272E2728272E2727%27FFA87D2752AFFD2DFF7E275227282752272E2752272E2752272E27FF7D%272E7D277DFD04FF847E5228277D272E272E52A8272E272E2752272E2752%272EA8FFFFFFA8FD2EFFA82E2728272727282728272827282728277DFF52%275252277DFFA8FD05FFA852522727282728A87D05FD0427282727272827%2E7DFD32FF7D28272E27A8522E2752272E272E277EFF7D2752277D285228%522E52527E7E7D5259275227522752A8A953522752272E2752272E27282E%FD32FF522727A8A82E2727272E272828A8FF592759272852522728272E27%27F827275252282728272E27277DFFFFA87EA884A87E7D2727277DFD33FF%7DFFA85227282EA8A8FFA8FFFFA827A87D275259277DFFFFA8FFA8A85259%532E2752272E277D5228A8FD08FFAF2728A8FD33FFA8522E272752FD07FF%5227A85205595227A8FD05FFA87D2E592728272827277D7E007DFD09FF59%27A8FD33FFA82E27287DFD07FFAF5252A82752527D277DA9A97D59282805%2859522752275227597E2827FD09FFA87D7DFD34FFA82E277EFD07FF7D00%7D5327272E5252272E2727052E527D7D525327272E272827A827272EFD09%FFA8A8FD35FF7D7DA8FD07FF28287D52272E2759522727527DA8FFFFFF7E%277D522827522727597D272753FD40FF7DFD07FF52275259272827285228%28A8FD04FF532E0527525227282728272E532827277DFD46FF7D2E277D27%52272E2E7D27A8FFFFFF7D2727277D7D59522E27522752277D522E272EA8%FD44FFA82727522E27272E272E522752FF7D52052752AFFF7D277D282727%2E272827592728272EA8FD42FFA852272E2852272E27522759522E272727%59A8FFA85227525352272E275227282E52272E2752A8FD40FFA82E272827%28272827282728277D27272EA8FFFF7D270052277D272827282728272727%2E272827287DFD3EFFA8522752272E2752275227522752595252FFFFFF7D%28277D7D2753592752275227522752275227522752FD3EFF7D0528272E27%28272E2728272E287D057DFFFF5227277DFF52277D272E2728272E272827%2E272827277DFD3FFF7D272E2752272E2752272E272E59522784522727A8%FF7D275952282752272E2752272E272E272E7DFD41FF7D27272728272827%28272827525228052727A8FFAF272E522727282728272727282728287DA8%FD43FFAF525227282752275227522759522852FFFFFF52275252272E2752%277D7DA8A8A9A8FD48FFA87E52522728FD0427525227FFFFFF7D272E5228%A8A85927A8FD52FFA97D7E597D52842E2EA8FFA85227597DFD04FFAFFD5A%FF7D002E522827527DFD61FF7D272E2E59A8FD64FF7D537DFD65FF7E27FD%66FF537DFD66FFA8A8FDFCFFFD85FF84A8AFFD08FFA87EAFFD09FFA87DFD%08FFAFA8A884FD07FFAFA8A8A8FD07FFA884A9FFA884FD2BFF522EFD07FF%A87D7DFF537DFD07FF8452847DFD07FF7D52A87D7EFD07FF527D5959FD06%FFA82E7EFF5252A8FD2AFF7D7DFD07FF8452FFFFFF28FD07FF7D52FD0AFF%52FF84FD08FF7E7DFF52FD07FF52A9FF7D53FD2BFF7D59FD07FF597DFFFF%FF5284FD07FF522EA8FD07FFA852527DFD08FF7D7D7DA8FD06FFA8525984%527DFD2BFF597DFD07FFA852FFFFFF52FD07FF7EFF5259FD08FF52FFFFA8%FD07FF7E52FD09FF52FFFFA852FD2BFF7D7DFD08FF7E59A87DA8FD07FF7D%7D7DA8FD07FF7D527D7D7DFD07FF5252A8FD07FF7D527DFF5253A8FD29FF%A852FD0BFFA8FD0BFFAFFD0BFFA8FD42FFA8FDC3FFA8FD0BFFA8FD21FFA8%FD17FFA8FD1DFFAF5959527D52537DFD07FFA8527DFD06FFA8537D537D7D%7D5284FD04FF7D5259FD047D7E7D7D597D537DA87D537D597E53597DFD0A%FFA8537D7D7D527DA8FD04FFA8527D59FD07FF7D7D527D537DFFFFFFA853%0559A8FFA8FF7D2727FD06FF59F852FD06FFA8A8270553FFA87D002EA8FF%FF7D0052597D7D2700597D7D52272EFFA852F852A8FF592727A8FD06FFA8%5228A8A8FFFFA827277DFFFFFFA8A827272EFD07FF7D28F87DA8FFFFA952%27A8FD06FFA852A8FD05FF595227A9FD07FFA80584FFFFFF842752FFFF59%7DFD04FF522EA8FFFFFFA852FFFFA82752FFFFFF842828FD05FFA82E2EFD%07FF522759FD05FF272752FD07FF7D52FD04FF52057DFD08FF52A8FD04FF%7DA87D2753FD07FF7D2759FFFFFFA82E27A8FF7EA9FD04FF5227A8FD04FF%7DFFFFA82752FD04FF28277EFFFFFFA92E27A9FD07FFAF27277DFD04FF52%272752FD06FFA82EFFFFFFA82752A9FD08FFA8A8FD04FF7DAFFF2752FD07%FFA8277DFD04FF272EA8FD07FF5228A8FD07FFA82852FD04FF5227A8FFFF%FF7E2759FD09FF7D2752FD04FF537E272752FD05FFA859FFFFFF2E2752FD%0EFFA852FFFF5200A8FD06FF7D277DFFFFFF842752FD07FFA85227A8FD07%FFA80553FD04FF2752A8FFFFFF2E277DFD09FF7D2727A8FFFFA859FF7D27%2752FD04FFA852FFFFFF52277EFD0EFF7DA8FFFF842752FD06FFA82784FF%FFA85252FD09FF522EA8FD07FFA82852FFFFFF5252A8FD04FF5227A8FD0A%FF27287EFFFFFF52FFFF7D27287DFFFFFFA859FFFFFF27277DFD0EFF527D%A8847E272EA8FD05FF7D27528452272EFD0AFF5227A8FD07FFA827527D53%272EFD06FF27277DFD09FFA8522784FFFFA959A8FFFF7D05277DFFFFA853%FFFFFF52277DFD0DFFAF2E59525952522784FD05FFA8277DFFA8272884FD%09FF2E2EA8FD07FFA82752FFA8522784FD05FF522784FD0AFF27287EFFFF%FF53FD04FF7D27287DFFA87DFFFFFF272752FD0DFF527DFD04FF7D2728FD%05FF7D2752FFFF7E0052A8FD08FF5227AFFD07FFA82752FFFFA82727FD05%FF2E2752FD09FFA82827A8FFFFA853A8FD04FF5905277DA952FFFFFF7D27%2EA8FD09FF7DFFFF53AFFD05FF272EA8FD04FFA8277DFFFFFF53277DFD08%FF2E2EA8FD07FFA82852FFFFFF522752FD04FF7E2752FD09FFA82752FD04%FF52FD06FF7D2752597EFFFFFFA82E2753FD08FF7D7DFF7E52FD06FF5900%7DFD04FF7D2752FFFFFFA8282784FD07FF5227A8FD07FFA82752FD04FF27%2759FFFFFFA82E007DFD08FF52277DFFFFFFA852A8FD06FF53272753FD04%FF842E277DFD07FF52A8FF5284FD06FF842727FD04FFA82753FD04FF7D27%27A8FD06FF282784FD07FFA8282EFD04FFA827287DFFFFFFA82727A8FD06%FF7D2759FD04FFA827FD08FF52277DFD05FF8452005284FFFFFFA82E27FF%522752FFA8FFFFFFA85905272EFFA8A82727277DA8FFFFFF5227057DA8FF%A8A852270552A8FD05FFA852002752A8A8FFFF7D052752AFFFFF842E057D%A8FFFFFF592759FFFFFFA8A82E2727A8A8FD05FFA82E52FD07FFA8525252%7D525959AF7D7D597D59A8FFFFFF84597D597D7D84597D597D527DA8FFFF%FFA87D527D84A8597D597D537D7DFFFFFFA87D537D597D59A8FFFFFFA959%5352A8FFFFFFA8527D7D84597DA8FD04FFAF597D597D53A8FD06FFA87DFD%09FFA8FFA8FD21FFA8FD1BFFA8FD05FFAFFFA8FD15FFA8FDFCFFFD06FFA9%FD07FFA8FD55FFA952A8FD04FFA85352522EFD04FF7D2E522784FFFFFFA8%2E272784FD49FFA87D2728A8FFFFFFAF5259FFFF5228FFFF7D28FFFFA827%A8FFA82EA8A85205A8FD48FF7D537D27A8FFFFFF7D27FFFFFFA827A8FF27%7EFFFFFF5252FF53A8FFFFA82752FD4AFFA82EA8FFFFFF592EFFFFFF8428%FFA8277DFFFFFF27A8FD06FF5253FD4AFFA827A8FFFFFFA82753FFFF28A8%FFFF2E2784FF5952FD07FF2E52FD4AFFA82884FD04FFA8275228A8FD04FF%52272E59FD07FFA827A9FD4AFFA827A8FD04FFA8522E2752FD04FF7E2E28%27A8FD06FF277DFD4BFFA82EA8FD04FF537DFF842E52FFFFA852FFFF5927%A8FD04FF5259FD4CFFA827A8FFFFFF7E28FFFFFF7D27A8FF27A8FFFFA828%59FFFFFF5252FD4DFFA82EA8FFFFFF5952FFFFFFA827FFFF2EA8FFFFFF28%7EFFFF537DFFFFFF7DA8FD48FFA87DF87DA8FFFFA82784FFFF527DFFFF2E%52A8FF7D52A8FF5227525952522EFD48FFA859537D5359A8FFFFA8527D53%84FD04FF5259597DA8FF8453597D527D28A8FD53FFA8FD07FFA8FDFCFFFD%16FFA8A884A884A884A884A884A884A884A884A884A884A884A884A884A8%84A884A884A884A884A884A884A884A884A884A884A884A884A884A884A8%84A884A884A884A87EFD26FFA9FFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFF%A8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FF%AFFFA8FFAFFFA8FFAFFFA8FFAFFFA8FFA9FD8EFFA8A8FFA8A8A8FFA8A8A8%FFA8A8A8AFFFA8A8FFFFFFA8FFFFFFA8FFA8A8A8FFFFFD06A8FFFFFFA8A9%FFFFA8A8A8FFA8A8FFFFA8A9FFFFA8A8A8FFA8A8A8FFA8A8FD25FF7D52FF%847D7DFFA87D7D7DA8597E7D7D7DA8FFFF7D8484FF7D7DFFA859A952FF7E%FD047DA8FFFF7DA87D84A87D84A8A87DA87EA87D7E7EA87D847EA8847D84%7E847DAFFD25FF527DA8FF59FFA8A97DA8FF7DA8FF597DA8A8A88452FFFF%7D52FFA87DFF7D52A8A8FF59FFA8A87D59FFFFA8FF52A8FF59A8FF7D7E7D%A87D7D7DFFA8FF7D7D84FF5284FD25FFA8FF7D59AF7DFFAFA8A8A8FF7DA9%FFFF7D7EFFFFAFA853FF7D7D84FF7DFFA8A852FFFF7EFFFFA8A953FFA87D%A87DA8FF52FFFFA8847E52A8847EFF847DA87DFFFFFF59A8FD24FF847DFF%52FF7D7D7DFF5284FF527DFF597D7DFFFF7E597D52FFA852597D7D7DFF7D%A8FF2EA8FFFFFFA87D7D7DA82E8459A859A87DFF52A852847DA852A85959%FD047D7EFD12FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (PANTONE 432 C)
%%CMYKCustomColor: 0.2300 0.0201 0 0.7701 (PANTONE 432 C)
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">RVB de base</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2011-06-14T16:56:16+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2011-06-14T16:56:16+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2011-06-14T16:56:16+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>208</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADQAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FUFrGt6Ro1k19qt5FZWikKZp3CKWPRRXqTToMaUlIvPXnqHy95Jn8zafEmqRAR/VjG4MLCZwiyGR&#xA;OXwDl269MICCW/y085zecfKkGtT2n1OZ3eGSMEsjNGaF4yQDxP4HbEilBtg/5b6x+Zkv5o65pXmS&#xA;55WcELzPasU4KHkAt2twvxcSv4fa+KmSNUxF2pf85B+WdT1S98sTW2praxz3iadFBIzqq3FwapOO&#xA;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&#xA;XVwAK7dTJjZTwhbL5Z8swgGXnGG+yXu51r8qyY2UUHDyz5ZMYlHMxE0Di7n41rSlfUp1xsrQTuNV&#xA;SNUT7CgBd67AbbnAyXYq7FXYq7FXYq7FXYq7FXnnnHS/rnni0uNEuobbzZYWElzaIzKPXVZVUwXC&#xA;/aaORCy1/Z+0OmSHJgeaU6Y+gw3nlPzDdadFo9rJd6yLp7mOOMW91LO3pxyyEBVYNEyIT4bYVa1G&#xA;z8qLqGiTNFaRJqnmWea3kPpo8tubSeIyI4Ibg04XgQd/hI7YqmNhonkyf8x9T0RLKzENlpNgsFsn&#xA;AOjxTzvzXjR1dAyVINem+CzS0LQnkBoV1qWy0aewuppLKW5g1f0XN1Ckl0jNbalCkiB5WLtwbmG+&#xA;FjTrUyWLvO0ltaeZory8ey1TUY4rCC40ieFopJq3TNFLpjc5ZElVz8abg0FTiFKlqvmCNPNll56j&#xA;ubZtAgvv0E92tyDW2kUo5aMJw4rdfvOfqboAaU3xralve1CSHyHqVl5qs7iezVLvzJaJbzQSRJKp&#xA;ljtFWSJ1NQQfWII8H/ysd12TXQdLW78z3tt5xsIZ7/RLOBv0tKiiK7iSSUxXLE+C/bVtlZa+FEnb&#xA;ZQN91f8ALXS9OuPK9lqmhtYxatC95ayXvpev+6e6aRonWGWCposbLybYdBvgkd1iNlIxaZb+Y/Mt&#xA;x5zWynuSkC6RJqSrDZPbrbAulu0wlCBp+XqqvJhtXlth9y+9jtxdaJLL5QKppmlTyaNe8LbVXSfj&#xA;AzWxt0maQRfEVEnAspAPL7W+FCe6U/lGTzPzvvRPllNLhi8qm83svTSSRLr02n+H1PhSm9THSnw4&#xA;N07MfuwFm0COKGyv/Vv9X/w9Y6owVZLFo2W2j/eB3KO9fRqNwVwoRnlVtCmuvL7avdC80HT9LkiR&#xA;r5QIbbVvrH72K5WQusUscZCRCQ9AeJOApCjfah5bk0zTmitdP0qyTzQYrVpZFuLVwsbLNLECsA+r&#xA;s3H7Jp8tsKG9Yfyumj6c1teaS93YxXj6hb3CltHu7toLc3qQuCAkh9T916Snq4pXlgCl61okgk0a&#xA;wkEDWoe2hYWzklo6oDwYtuSvQ1yJZhG4EuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:F87F11740720681192B09634CAA8F5B8</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F87F11740720681192B09634CAA8F5B8</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D07F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:10+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T14:51:08-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T15:15:38-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0CC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:07:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:03E540664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:24:35+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:6D6AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T20:31:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BCE4CD276D42DD11A0BEF9B17C50C624</stEvt:instanceID>
                  <stEvt:when>2008-06-25T06:28:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E6A2668D200711689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T05:52:17-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0F91C12D6B48DD1194DA8463B7D22218</stEvt:instanceID>
                  <stEvt:when>2008-07-02T12:20:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811ACAF9F0F41229DDF</stEvt:instanceID>
                  <stEvt:when>2008-07-21T13:59:19+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED0DFC627ABDD6119286AC08E167C812</stEvt:instanceID>
                  <stEvt:when>2002-09-01T14:19:17+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:234F4C2C7BBDD6119286AC08E167C812</stEvt:instanceID>
                  <stEvt:when>2002-09-01T14:19:37+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681192B09634CAA8F5B8</stEvt:instanceID>
                  <stEvt:when>2011-06-14T16:56:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:26839582-2c66-c849-8864-062ef6efdf17</stRef:instanceID>
            <stRef:documentID>xmp.did:234F4C2C7BBDD6119286AC08E167C812</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>210.001652</stDim:w>
            <stDim:h>296.999959</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
               <rdf:li>PANTONE 432 C</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Groupe de nuances par défaut</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Blanc</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Noir</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.546875</xmpG:cyan>
                           <xmpG:magenta>84.765625</xmpG:magenta>
                           <xmpG:yellow>78.515625</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Rouge</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>94.140625</xmpG:magenta>
                           <xmpG:yellow>93.359375</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Jaune</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>9.375000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>92.968750</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Vert</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>65.625000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>57.031250</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>13.281250</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Bleu</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>87.890625</xmpG:cyan>
                           <xmpG:magenta>76.562500</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RVB Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>33.203125</xmpG:cyan>
                           <xmpG:magenta>77.734375</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 V=39 B=45</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>17.187500</xmpG:cyan>
                           <xmpG:magenta>93.750000</xmpG:magenta>
                           <xmpG:yellow>85.156250</xmpG:yellow>
                           <xmpG:black>6.640625</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 V=28 B=36</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>93.750000</xmpG:magenta>
                           <xmpG:yellow>88.281250</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 V=90 B=36</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>75.781250</xmpG:magenta>
                           <xmpG:yellow>88.281250</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 V=147 B=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>51.171875</xmpG:magenta>
                           <xmpG:yellow>90.625000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 V=176 B=59</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>37.500000</xmpG:magenta>
                           <xmpG:yellow>81.640625</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 V=238 B=33</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>7.031250</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>85.546875</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 V=224 B=33</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>23.046875</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>88.281250</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 V=198 B=63</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>52.343750</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>86.718750</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 V=181 B=74</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>72.265625</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>85.546875</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=146 B=69</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>83.203125</xmpG:cyan>
                           <xmpG:magenta>12.890625</xmpG:magenta>
                           <xmpG:yellow>88.671875</xmpG:yellow>
                           <xmpG:black>0.781250</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=104 B=55</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>87.109375</xmpG:cyan>
                           <xmpG:magenta>33.593750</xmpG:magenta>
                           <xmpG:yellow>89.843750</xmpG:yellow>
                           <xmpG:black>23.046875</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 V=181 B=115</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>74.218750</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>67.187500</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=169 B=157</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>76.953125</xmpG:cyan>
                           <xmpG:magenta>3.125000</xmpG:magenta>
                           <xmpG:yellow>42.968750</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 V=171 B=226</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>70.703125</xmpG:cyan>
                           <xmpG:magenta>14.062500</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=113 B=188</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.765625</xmpG:cyan>
                           <xmpG:magenta>51.171875</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 V=49 B=146</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>91.406250</xmpG:cyan>
                           <xmpG:magenta>90.625000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 V=20 B=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>95.703125</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>32.812500</xmpG:yellow>
                           <xmpG:black>19.140625</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 V=45 B=145</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>73.437500</xmpG:cyan>
                           <xmpG:magenta>92.187500</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 V=39 B=143</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>52.343750</xmpG:cyan>
                           <xmpG:magenta>92.187500</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 V=0 B=93</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>38.671875</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>30.078125</xmpG:yellow>
                           <xmpG:black>8.203125</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 V=20 B=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.546875</xmpG:cyan>
                           <xmpG:magenta>96.484375</xmpG:magenta>
                           <xmpG:yellow>41.796875</xmpG:yellow>
                           <xmpG:black>0.390625</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 V=30 B=121</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>91.406250</xmpG:magenta>
                           <xmpG:yellow>13.281250</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 V=178 B=153</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>26.171875</xmpG:cyan>
                           <xmpG:magenta>30.078125</xmpG:magenta>
                           <xmpG:yellow>39.843750</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 V=134 B=117</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>43.750000</xmpG:cyan>
                           <xmpG:magenta>44.531250</xmpG:magenta>
                           <xmpG:yellow>49.609375</xmpG:yellow>
                           <xmpG:black>6.640625</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 V=99 B=87</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>53.515625</xmpG:cyan>
                           <xmpG:magenta>53.515625</xmpG:magenta>
                           <xmpG:yellow>57.031250</xmpG:yellow>
                           <xmpG:black>23.828125</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 V=71 B=65</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>60.546875</xmpG:cyan>
                           <xmpG:magenta>60.546875</xmpG:magenta>
                           <xmpG:yellow>60.546875</xmpG:yellow>
                           <xmpG:black>42.968750</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 V=156 B=109</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.781250</xmpG:cyan>
                           <xmpG:magenta>40.625000</xmpG:magenta>
                           <xmpG:yellow>59.765625</xmpG:yellow>
                           <xmpG:black>1.171875</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 V=124 B=82</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.156250</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>68.359375</xmpG:yellow>
                           <xmpG:black>10.156250</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 V=98 B=57</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.453125</xmpG:cyan>
                           <xmpG:magenta>56.640625</xmpG:magenta>
                           <xmpG:yellow>79.296875</xmpG:yellow>
                           <xmpG:black>24.218750</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 V=76 B=36</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>42.187500</xmpG:cyan>
                           <xmpG:magenta>62.890625</xmpG:magenta>
                           <xmpG:yellow>90.625000</xmpG:yellow>
                           <xmpG:black>38.281250</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 V=56 B=19</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>43.750000</xmpG:cyan>
                           <xmpG:magenta>69.140625</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>51.562500</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 V=33 B=11</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>48.437500</xmpG:cyan>
                           <xmpG:magenta>76.171875</xmpG:magenta>
                           <xmpG:yellow>94.921875</xmpG:yellow>
                           <xmpG:black>71.093750</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 432 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>22.999599</xmpG:cyan>
                           <xmpG:magenta>2.000430</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>77.000397</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Gris</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 V=0 B=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>85.546875</xmpG:cyan>
                           <xmpG:magenta>84.765625</xmpG:magenta>
                           <xmpG:yellow>78.515625</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 V=26 B=26</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>76.171875</xmpG:cyan>
                           <xmpG:magenta>70.703125</xmpG:magenta>
                           <xmpG:yellow>66.406250</xmpG:yellow>
                           <xmpG:black>81.250000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 V=51 B=51</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>71.484375</xmpG:cyan>
                           <xmpG:magenta>64.062500</xmpG:magenta>
                           <xmpG:yellow>60.156250</xmpG:yellow>
                           <xmpG:black>58.203125</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 V=77 B=77</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>66.796875</xmpG:cyan>
                           <xmpG:magenta>58.203125</xmpG:magenta>
                           <xmpG:yellow>54.296875</xmpG:yellow>
                           <xmpG:black>37.109375</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 V=102 B=102</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>61.328125</xmpG:cyan>
                           <xmpG:magenta>51.953125</xmpG:magenta>
                           <xmpG:yellow>48.437500</xmpG:yellow>
                           <xmpG:black>19.921875</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 V=128 B=128</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>54.296875</xmpG:cyan>
                           <xmpG:magenta>44.921875</xmpG:magenta>
                           <xmpG:yellow>41.406250</xmpG:yellow>
                           <xmpG:black>6.640625</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 V=153 B=153</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>46.484375</xmpG:cyan>
                           <xmpG:magenta>37.109375</xmpG:magenta>
                           <xmpG:yellow>34.375000</xmpG:yellow>
                           <xmpG:black>0.781250</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 V=179 B=179</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>34.765625</xmpG:cyan>
                           <xmpG:magenta>26.953125</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 V=204 B=204</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>23.828125</xmpG:cyan>
                           <xmpG:magenta>17.578125</xmpG:magenta>
                           <xmpG:yellow>17.187500</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 V=230 B=230</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>12.109375</xmpG:cyan>
                           <xmpG:magenta>8.593750</xmpG:magenta>
                           <xmpG:yellow>8.203125</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 V=242 B=242</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.859375</xmpG:cyan>
                           <xmpG:magenta>4.296875</xmpG:magenta>
                           <xmpG:yellow>3.906250</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Eclaboussure</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=214 V=149 B=68</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>16.796875</xmpG:cyan>
                           <xmpG:magenta>45.703125</xmpG:magenta>
                           <xmpG:yellow>79.687500</xmpG:yellow>
                           <xmpG:black>0.781250</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=71 V=152 B=237</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>66.796875</xmpG:cyan>
                           <xmpG:magenta>34.765625</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=42 V=81 B=224</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>82.812500</xmpG:cyan>
                           <xmpG:magenta>69.921875</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 V=58 B=228</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.078125</xmpG:cyan>
                           <xmpG:magenta>78.906250</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -569.724 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 569.724 li
458.059 569.724 li
458.059 0 li
cp
clp
[1 0 0 1 0 0 ]ct
458.059 386.15 mo
456.627 386.414 452.817 386.982 451.276 388.779 cv
449.823 390.49 449.184 392.48 448.647 397.109 cv
448.198 400.906 448.096 404.988 448.01 408.876 cv
447.807 416.291 447.731 424.628 447.731 432.212 cv
447.731 440.644 447.807 443.179 448.198 450.126 cv
447.731 450.32 li
446.028 447.978 441.866 443.359 438.147 439.369 cv
425.811 426.068 418.375 418.453 405.766 405.066 cv
402.77 401.908 400.057 398.812 400.057 398.812 cv
399.862 398.929 li
399.862 398.929 399.809 415.667 399.809 416.664 cv
399.809 429.419 400.151 438.007 401.87 440.916 cv
403.239 443.179 406.965 444.906 412.844 446.345 cv
412.844 447.8 li
408.038 447.699 403.495 447.699 398.78 447.699 cv
394.069 447.699 389.362 447.699 384.733 447.8 cv
384.733 446.345 li
389.643 445.785 392.987 443.724 393.981 442.183 cv
395.981 438.917 396.432 433.48 396.711 424.169 cv
396.993 415.099 397.077 407.609 397.077 398.648 cv
397.077 396.121 396.174 392.939 393.079 390.046 cv
391.282 388.335 387.657 386.601 383.653 386.15 cv
383.653 384.695 li
399.614 384.695 li
399.614 384.695 403.495 388.949 405.393 391.042 cv
423.735 410.675 436.141 423.718 436.141 423.718 cv
441.227 429.328 444.844 433.394 444.844 433.394 cv
445.024 433.394 li
445.024 433.394 444.93 424.083 444.93 416.849 cv
444.93 411.865 444.844 407.695 444.75 404.171 cv
444.573 396.556 444.02 392.574 441.936 390.318 cv
440.223 388.335 437.206 387.316 431.614 386.25 cv
431.614 384.695 li
436.141 384.796 440.659 384.796 444.844 384.796 cv
449.098 384.796 454.178 384.796 458.059 384.695 cv
458.059 386.15 li
cp
345.477 448.974 mo
325.276 448.974 311.68 435.488 311.68 415.941 cv
311.68 396.921 325.555 383.628 346.02 383.628 cv
366.518 383.628 379.848 396.837 379.848 416.849 cv
379.848 435.021 366.237 448.974 345.477 448.974 cv
315.094 448.796 mo
315.094 448.796 305.674 448.236 302.159 447.8 cv
299.788 447.419 298.254 446.89 296.536 446.05 cv
292.723 444.355 289.645 440.73 285.848 435.121 cv
281.407 428.509 278.95 423.531 277.393 421.089 cv
276.032 418.927 274.065 418.453 270.417 418.103 cv
265.889 417.652 li
265.889 431.232 li
265.889 436.669 266.161 439.734 267.725 441.81 cv
269.157 443.802 273.061 445.699 278.95 446.251 cv
278.95 447.8 li
273.231 447.699 267.725 447.699 262.17 447.699 cv
256.75 447.699 251.282 447.699 246.024 447.8 cv
246.024 446.251 li
251.034 445.599 253.756 444.355 255.381 442.9 cv
257.559 440.916 257.559 436.398 257.559 431.419 cv
257.559 414.22 li
257.559 408.876 257.473 400.539 257.473 400.539 cv
257.473 394.48 257.194 390.949 255.551 389.603 cv
253.204 387.611 250.497 386.982 246.95 386.414 cv
246.95 384.982 li
261.278 384.539 268.254 384.337 271.334 384.337 cv
279.026 384.337 284.208 385.355 288.284 388.054 cv
292.358 390.761 294.903 394.658 294.903 400.009 cv
294.903 406.605 290.733 411.583 283.29 414.843 cv
290.545 428.238 297.61 437.556 304.415 442.548 cv
307.768 444.976 310.95 446.345 315.397 447.24 cv
315.094 448.796 li
cp
243.038 400.369 mo
241.94 396.3 239.754 391.773 236.219 390.117 cv
233.709 388.949 229.545 388.498 224.567 388.498 cv
218.743 388.498 li
218.743 388.498 218.653 400.369 218.653 407.875 cv
218.653 428.689 li
218.653 436.304 218.949 440.73 221.01 442.728 cv
223.917 445.537 227.631 445.785 231.602 446.251 cv
231.602 447.8 li
226.092 447.699 219.824 447.613 214.305 447.613 cv
208.701 447.613 202.98 447.699 197.353 447.8 cv
197.353 446.251 li
202.164 445.699 205.679 444.355 207.861 442.292 cv
209.678 440.542 209.954 436.125 209.954 428.783 cv
209.954 408.052 li
209.954 400.173 209.879 388.498 209.879 388.498 cv
203.171 388.498 li
197.353 388.498 193.907 388.949 190.838 391.15 cv
188.559 392.675 186.666 395.748 185.577 400.087 cv
184.048 399.917 li
184.048 399.917 184.763 394.759 185.032 391.671 cv
185.39 388.054 185.751 382.277 185.751 382.277 cv
186.666 382.277 li
186.666 382.277 188.559 385.355 190.193 385.355 cv
190.193 385.355 204.524 385.433 214.492 385.433 cv
224.567 385.433 238.86 385.355 238.86 385.355 cv
239.754 385.355 242.321 382.353 242.321 382.353 cv
243.038 382.447 li
243.038 382.447 243.395 387.246 243.588 390.117 cv
243.846 393.849 244.405 400.087 244.405 400.087 cv
243.038 400.369 li
cp
194.265 448.796 mo
194.265 448.796 184.837 448.236 181.31 447.8 cv
178.949 447.419 177.402 446.89 175.683 446.05 cv
171.855 444.355 168.807 440.73 164.987 435.121 cv
160.549 428.509 158.1 423.531 156.556 421.089 cv
155.214 418.927 153.191 418.453 149.582 418.103 cv
145.044 417.652 li
145.044 431.232 li
145.044 436.669 145.328 439.734 146.85 441.81 cv
148.307 443.802 152.22 445.699 158.1 446.251 cv
158.1 447.8 li
152.386 447.699 146.85 447.699 141.331 447.699 cv
136.044 447.699 130.763 447.699 125.641 447.8 cv
125.44 447.8 li
125.195 447.8 li
120.906 447.699 116.522 447.613 112.132 447.613 cv
107.692 447.613 102.901 447.699 98.3599 447.8 cv
98.3599 446.251 li
103.619 445.435 105.258 443.445 105.607 441.546 cv
105.874 440.021 105.333 437.462 104.429 434.849 cv
99.3623 421.277 li
78.1606 421.277 li
75.2588 430.058 li
72.9878 437.019 72.6221 438.007 72.6221 440.542 cv
72.6221 443.445 75.4414 445.699 83.3286 446.345 cv
83.3286 447.8 li
78.6948 447.699 74.2417 447.613 70.0029 447.613 cv
65.8218 447.613 61.5728 447.699 57.75 447.8 cv
57.75 446.345 li
61.5728 445.242 63.8384 444.447 65.8218 442.457 cv
68.2744 440.021 73.0674 425.888 77.4312 415.031 cv
81.604 404.716 87.3931 388.054 87.3931 388.054 cv
87.0317 385.955 li
89.4658 385.154 91.4668 383.535 93.3823 380.906 cv
93.6563 380.906 li
93.6563 380.906 100.624 399.466 104.968 411.226 cv
108.328 420.451 113.405 433.582 113.405 433.582 cv
115.138 438.21 116.677 441.189 118.207 443.009 cv
119.185 444.128 121.73 445.638 125.223 446.244 cv
130.201 445.599 132.888 444.355 134.525 442.9 cv
136.713 440.916 136.713 436.398 136.713 431.419 cv
136.713 414.22 li
136.713 408.876 136.622 400.539 136.622 400.539 cv
136.622 394.48 136.338 390.949 134.707 389.603 cv
132.348 387.611 129.637 386.982 126.107 386.414 cv
126.107 384.982 li
140.4 384.539 147.412 384.337 150.485 384.337 cv
158.193 384.337 163.358 385.355 167.434 388.054 cv
171.518 390.761 174.061 394.658 174.061 400.009 cv
174.061 406.605 169.883 411.583 162.44 414.843 cv
169.708 428.238 176.783 437.556 183.585 442.548 cv
186.914 444.976 190.091 446.345 194.533 447.24 cv
194.265 448.796 li
cp
36.5464 449.324 mo
26.9385 449.324 17.8633 446.611 11.7007 441.625 cv
3.16943 434.763 0 427.257 0 416.46 cv
0 406.605 4.45313 397.746 11.5161 391.843 cv
17.688 386.685 27.1094 383.443 37.1665 383.443 cv
44.688 383.443 51.6694 384.896 58.0103 388.148 cv
58.1113 403.626 li
56.5791 403.626 li
55.7627 397.109 52.4839 392.13 49.1274 389.603 cv
46.4028 387.611 42.0518 386.072 36.8105 386.072 cv
28.4609 386.072 21.394 389.859 16.8696 396.3 cv
13.3379 401.287 10.8662 407.966 10.8662 415.832 cv
10.8662 424.349 13.7871 432.585 19.6885 438.568 cv
24.4897 443.445 31.4648 446.611 38.707 446.611 cv
43.1538 446.611 47.043 445.435 50.4927 442.457 cv
53.8608 439.57 57.2969 434.134 59.6519 427.865 cv
61.0127 428.339 li
59.8291 434.134 58.6465 438.738 55.7627 445.435 cv
50.1582 448.072 43.9692 449.324 36.5464 449.324 cv
91.2661 369.091 mo
93.355 367.957 94.5259 366.914 95.1929 365.623 cv
95.8477 364.332 96.2471 361.857 96.2471 358.98 cv
96.2471 352.345 li
96.2471 350.261 96.1846 347.21 96.1846 347.187 cv
96.1846 347.048 li
96.1416 345.531 96.0972 344.425 95.3052 343.796 cv
94.5938 343.267 93.5513 342.941 92.0986 342.808 cv
91.8887 342.792 li
91.8887 341.82 li
92.1284 341.83 li
94.1152 341.867 96.0581 341.867 97.9458 341.867 cv
99.8188 341.867 101.578 341.867 103.308 341.83 cv
103.527 341.82 li
103.527 342.779 li
103.352 342.808 li
101.821 343.087 100.895 343.353 100.332 343.945 cv
99.8286 344.488 99.6182 345.345 99.6182 346.83 cv
99.6182 346.869 99.562 349.941 99.562 351.871 cv
99.562 352.609 99.5776 353.722 99.603 355.005 cv
99.6182 356.701 99.6519 358.599 99.6519 360.279 cv
99.6519 361.244 99.6108 362.13 99.5034 362.939 cv
99.3462 364.136 98.7939 365.419 98.1074 366.16 cv
96.6763 367.746 94.8271 368.882 91.7334 370.064 cv
91.5581 370.142 li
91.0815 369.201 li
91.2661 369.091 li
cp
148.583 341.439 mo
155.809 341.439 160.651 346.214 160.651 353.285 cv
160.651 360.06 155.606 364.783 148.4 364.783 cv
141.18 364.783 136.328 360.037 136.328 352.982 cv
136.328 346.191 141.364 341.439 148.583 341.439 cv
193.098 357.16 mo
193.145 357.332 li
194.097 361.103 196.56 363.453 199.562 363.453 cv
201.911 363.453 203.556 361.919 203.556 359.757 cv
203.556 357.796 202.626 356.398 200.557 355.199 cv
197.741 353.519 li
194.934 351.855 193.802 350.199 193.802 347.787 cv
193.802 344.193 197.026 341.355 201.145 341.355 cv
203.003 341.355 204.645 341.812 206.325 342.779 cv
206.434 342.847 li
206.434 342.98 li
206.399 343.455 206.36 343.921 206.31 344.412 cv
206.212 345.507 206.092 346.652 206.057 347.857 cv
206.049 348.074 li
205.108 348.074 li
205.069 347.873 li
204.606 344.388 203.233 342.761 200.779 342.761 cv
198.644 342.761 197.135 344.248 197.135 346.363 cv
197.135 347.896 198.026 349.179 199.869 350.285 cv
203.443 352.492 li
205.971 354.017 207.153 355.869 207.153 358.318 cv
207.153 361.943 203.587 364.906 199.2 364.906 cv
196.948 364.906 194.401 364.16 193.009 363.093 cv
192.954 363.041 li
192.927 362.947 li
192.502 360.957 192.242 359.15 192.118 357.431 cv
192.106 357.214 li
193.098 357.16 li
cp
240.813 363.453 mo
240.999 363.421 li
242.858 363.134 243.752 362.822 244.336 362.261 cv
244.973 361.687 244.989 360.722 244.989 359.105 cv
244.989 359.105 245.043 355.199 245.043 352.656 cv
245.043 350.462 244.989 347.048 244.989 347.048 cv
244.989 345.111 244.856 344.349 243.993 343.671 cv
243.395 343.212 242.586 342.941 241.319 342.808 cv
241.131 342.792 li
241.131 341.83 li
259.014 341.83 li
258.991 342.078 li
258.928 342.675 258.858 343.353 258.803 344.023 cv
258.694 345.056 258.586 346.13 258.547 347.134 cv
258.516 347.328 li
257.606 347.328 li
257.583 347.134 li
257.497 345.267 256.641 344.263 256.151 343.976 cv
255.614 343.642 254.424 343.251 251.663 343.251 cv
248.442 343.212 li
248.442 351.871 li
251.415 351.847 li
253.334 351.847 254.377 351.628 255.038 351.093 cv
255.551 350.695 255.903 350.011 256.065 348.984 cv
256.073 348.798 li
257.03 348.798 li
256.983 349.023 li
256.92 350.75 256.86 352.228 256.86 353.285 cv
256.86 354.802 li
256.874 355.417 256.874 356.054 256.874 356.367 cv
256.874 356.583 li
256.002 356.583 li
255.958 356.412 li
255.762 355.277 255.512 354.779 254.938 354.281 cv
254.252 353.722 253.165 353.683 251.399 353.683 cv
248.442 353.683 li
248.465 359.058 li
248.465 360.785 248.598 361.437 249.065 361.896 cv
250.084 362.845 251.475 363.041 253.397 363.041 cv
255.295 363.041 256.874 362.519 257.807 361.601 cv
258.928 360.464 259.465 359.376 259.823 357.548 cv
259.862 357.355 li
260.756 357.447 li
260.756 357.658 li
260.678 360.083 260.29 362.3 259.581 364.261 cv
259.549 364.417 li
259.395 364.41 li
259.262 364.41 247.991 364.355 243.004 364.355 cv
241.045 364.355 li
240.813 364.355 li
240.813 363.453 li
cp
292.934 363.437 mo
293.127 363.421 li
294.366 363.265 295.524 362.892 296.139 362.441 cv
296.909 361.88 296.956 360.621 296.956 358.419 cv
296.956 352.345 li
296.956 350.431 296.909 347.507 296.909 347.507 cv
296.909 345.843 296.799 344.621 296.325 344.083 cv
295.688 343.392 294.77 343.003 293.323 342.761 cv
293.151 342.738 li
293.151 341.82 li
293.362 341.83 li
294.668 341.843 295.688 341.843 296.52 341.83 cv
297.569 341.83 li
297.672 341.82 li
298.954 341.791 299.958 341.759 301.11 341.759 cv
304.696 341.759 307.192 342.333 308.709 343.539 cv
310.178 344.628 310.934 346.083 310.934 347.818 cv
310.934 349.91 310.053 351.66 308.344 352.851 cv
306.989 353.822 305.022 354.476 302.518 354.771 cv
302.331 354.794 li
302.051 353.884 li
302.284 353.845 li
305.598 353.201 307.192 351.529 307.192 348.697 cv
307.192 347.195 306.624 345.802 305.635 344.871 cv
304.336 343.642 302.602 343.027 300.315 342.957 cv
300.315 358.031 li
300.315 359.572 300.315 361.322 301.016 362.052 cv
301.6 362.642 302.37 363.056 304.696 363.398 cv
304.866 363.421 li
304.866 364.355 li
304.657 364.355 li
302.479 364.332 300.596 364.316 298.877 364.316 cv
297.143 364.316 295.221 364.332 293.168 364.355 cv
292.934 364.355 li
292.934 363.437 li
cp
339.262 341.83 mo
339.471 341.83 li
340.436 341.83 341.354 341.83 342.319 341.843 cv
344.17 341.867 346.077 341.867 347.997 341.843 cv
348.954 341.83 349.934 341.83 350.868 341.83 cv
351.084 341.83 li
351.084 342.792 li
350.889 342.808 li
348.782 343.042 347.678 343.47 347.196 344.263 cv
346.862 344.9 346.792 345.833 346.792 347.406 cv
346.752 351.753 li
359.36 351.753 li
359.36 347.312 li
359.36 345.546 359.307 344.816 358.77 344.037 cv
358.303 343.408 356.973 342.941 355.231 342.808 cv
355.036 342.792 li
355.036 341.83 li
355.254 341.83 li
356.211 341.83 357.151 341.83 358.086 341.843 cv
360.014 341.853 361.92 341.853 363.833 341.843 cv
364.774 341.83 365.731 341.83 366.696 341.83 cv
366.907 341.83 li
366.907 342.792 li
366.735 342.808 li
364.338 343.144 363.686 343.656 363.368 344.099 cv
362.846 344.777 362.799 345.966 362.799 347.57 cv
362.799 352.416 li
362.799 358.855 li
362.799 360.558 362.917 361.492 363.405 362.214 cv
363.686 362.613 364.463 363.134 366.649 363.398 cv
366.852 363.421 li
366.852 364.355 li
366.625 364.355 li
364.649 364.332 362.938 364.316 361.25 364.316 cv
359.5 364.316 357.471 364.332 355.208 364.355 cv
354.989 364.355 li
354.989 363.406 li
355.184 363.398 li
357.182 363.234 358.405 362.798 358.856 362.044 cv
359.307 361.291 359.36 360.488 359.36 358.855 cv
359.391 353.519 li
358.155 353.503 352.049 353.464 346.752 353.519 cv
346.792 358.785 li
346.792 360.667 346.909 361.421 347.297 362.076 cv
347.733 362.83 348.93 363.257 350.936 363.398 cv
351.131 363.406 li
351.131 364.355 li
350.922 364.355 li
348.625 364.332 346.682 364.316 344.956 364.316 cv
343.057 364.316 341.625 364.332 339.534 364.355 cv
339.333 364.355 li
339.333 363.421 li
339.518 363.398 li
340.817 363.234 342.272 362.994 342.87 361.966 cv
343.299 361.275 343.362 360.279 343.362 358.785 cv
343.362 358.785 343.383 355.005 343.383 352.601 cv
343.383 350.58 343.362 347.873 343.362 347.873 cv
343.362 345.609 343.143 344.488 342.59 343.867 cv
342.124 343.353 341.051 342.98 339.448 342.808 cv
339.262 342.792 li
339.262 341.83 li
cp
false sop
/0 
<<
/Name (PANTONE 432 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ .229996 .0200043 0 .770004 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
f
148.843 363.398 mo
151.301 363.398 153.04 362.503 154.502 360.496 cv
155.782 358.73 156.431 356.39 156.431 353.558 cv
156.431 351.107 155.677 348.478 154.405 346.496 cv
152.807 344.093 150.683 342.839 148.24 342.839 cv
146.181 342.839 144.34 343.656 143.039 345.142 cv
141.398 346.986 140.536 349.552 140.536 352.546 cv
140.536 355.16 141.32 357.783 142.677 359.781 cv
144.252 362.076 146.49 363.398 148.843 363.398 cv
3.05176e-05 3.05176e-05 3.05176e-05 3.05176e-05 cmyk
f
145.125 386.421 mo
145.125 416.025 li
150.951 415.753 155.462 414.478 158.753 412.316 cv
162.44 409.679 164.438 405.984 164.438 401.279 cv
164.438 393.134 157.365 386.609 145.125 386.421 cv
f
265.967 386.421 mo
265.967 416.025 li
271.786 415.753 276.329 414.478 279.563 412.316 cv
283.29 409.679 285.288 405.984 285.288 401.279 cv
285.288 393.134 278.217 386.609 265.967 386.421 cv
f
88.5811 392.761 mo
79.8638 416.935 li
79.8638 416.935 89.0322 417.021 97.7227 416.935 cv
93.7476 406.513 88.7563 392.761 88.7563 392.761 cv
88.5811 392.761 li
cp
f
345.057 386.343 mo
339.043 386.343 333.606 388.693 329.694 393.134 cv
325.276 398.197 322.461 405.533 322.461 414.679 cv
322.461 422.792 324.973 430.408 328.606 435.65 cv
332.977 442.005 339.495 446.251 346.752 446.251 cv
353.823 446.251 359.088 443.724 363.42 437.757 cv
367.053 432.765 369.045 426.16 369.045 417.558 cv
369.045 410.13 366.711 402.523 363.165 397.101 cv
358.543 390.125 352.29 386.343 345.057 386.343 cv
f
168.468 491.794 mo
168.468 490.837 168.534 487.291 168.468 481.363 cv
168.379 478.773 168.087 477.132 166.656 477.132 cv
165.959 477.132 164.843 477.341 163.646 477.724 cv
158.368 479.458 li
158.064 479.521 157.765 479.521 157.621 479.248 cv
157.019 477.878 li
156.875 477.583 156.94 477.289 157.473 476.976 cv
173.049 468.015 li
173.438 467.775 173.733 467.564 174.107 467.564 cv
174.559 467.564 174.636 468.015 174.636 468.638 cv
174.636 469.3 174.402 481.123 174.402 490.837 cv
174.402 493.996 li
174.402 494.89 174.484 510.857 174.484 511.839 cv
174.559 515.751 174.862 516.265 179.754 516.265 cv
182.465 516.265 li
182.982 516.265 183.228 516.498 183.228 516.886 cv
183.228 518.613 li
183.228 519.056 183.064 519.205 182.539 519.205 cv
181.862 519.205 171.626 518.996 170.945 518.996 cv
170.265 518.996 159.648 519.205 159.262 519.205 cv
158.9 519.205 158.679 519.056 158.679 518.613 cv
158.679 516.732 li
158.679 516.349 159.13 516.265 159.714 516.265 cv
163.202 516.265 li
168.087 516.265 168.234 516.07 168.379 512.056 cv
168.468 511.068 168.468 495.869 168.468 494.531 cv
168.468 491.794 li
cp
1 /0 /CSD get_res sepcs
1 sep
f
199.402 480.205 mo
199.402 485.626 202.922 487.804 209.573 491.732 cv
213.244 489.382 217.167 484.949 217.456 479.91 cv
217.685 474.425 213.617 470.638 208.437 470.638 cv
203.069 470.638 199.402 474.931 199.402 480.205 cv
217.25 508.386 mo
217.25 502.279 212.263 499.48 206.317 496.322 cv
201.51 499.035 198.772 503.382 198.772 508.144 cv
198.772 514.701 203.91 517.564 208.293 517.564 cv
213.706 517.564 217.25 514.617 217.25 508.386 cv
194.043 509.349 mo
194.043 502.878 197.435 499.035 203.843 494.89 cv
198.192 491.732 193.51 487.804 193.51 482.017 cv
193.51 475.46 198.932 467.564 209.631 467.564 cv
216.565 467.564 222.436 472.308 222.436 477.289 cv
222.436 484.427 220.027 487.734 212.038 493.32 cv
218.078 496.166 222.669 500.031 222.669 506.869 cv
222.669 512.742 216.931 520.107 207.83 520.107 cv
197.509 520.107 194.043 514.164 194.043 509.349 cv
f
237.036 480.205 mo
237.036 485.626 240.555 487.804 247.19 491.732 cv
250.87 489.382 254.797 484.949 255.094 479.91 cv
255.303 474.425 251.25 470.638 246.063 470.638 cv
240.711 470.638 237.036 474.931 237.036 480.205 cv
254.86 508.386 mo
254.86 502.279 249.889 499.48 243.948 496.322 cv
239.147 499.035 236.409 503.382 236.409 508.144 cv
236.409 514.701 241.536 517.564 245.907 517.564 cv
251.344 517.564 254.86 514.617 254.86 508.386 cv
231.684 509.349 mo
231.684 502.878 235.077 499.035 241.45 494.89 cv
235.827 491.732 231.151 487.804 231.151 482.017 cv
231.151 475.46 236.588 467.564 247.284 467.564 cv
254.174 467.564 260.071 472.308 260.071 477.289 cv
260.071 484.427 257.653 487.734 249.665 493.32 cv
255.684 496.166 260.282 500.031 260.282 506.869 cv
260.282 512.742 254.565 520.107 245.471 520.107 cv
235.141 520.107 231.684 514.164 231.684 509.349 cv
f
271.723 518.996 mo
270.448 518.996 269.079 519.056 267.944 519.142 cv
266.807 519.205 265.92 519.291 265.618 519.291 cv
265.235 519.291 265.026 519.291 264.793 518.839 cv
264.575 518.302 264.684 518.07 265.026 517.718 cv
268.557 514.382 275.184 508.595 281.198 502.132 cv
287.217 495.66 290.694 489.857 290.469 483.292 cv
290.235 476.595 286.174 472.597 280.752 472.683 cv
274.352 472.753 271.94 477.724 270.665 479.994 cv
270.377 480.531 270.143 480.585 269.754 480.376 cv
268.713 479.91 li
268.479 479.753 268.395 479.521 268.713 478.859 cv
269.911 475.91 273.606 467.564 283.772 467.564 cv
290.081 467.564 296.94 472.753 296.94 481.269 cv
296.94 487.648 294.397 493.078 287.606 500.701 cv
282.481 506.566 276.545 510.921 273.217 513.869 cv
288.5 513.869 li
293.625 513.869 295.594 510.322 297.258 507.537 cv
297.616 506.869 297.858 506.806 298.604 507.171 cv
299.196 507.484 299.491 507.763 299.196 508.238 cv
294.319 519.958 li
293.93 520.806 294.522 520.806 293.174 520.806 cv
292.499 520.806 292.499 520.73 292.196 520.037 cv
291.745 519.056 290.313 518.996 288.057 518.996 cv
271.723 518.996 li
cp
f
79.9487 555.078 mo
79.9487 553.625 79.2139 552.806 78.3154 552.791 cv
77.3047 552.767 li
77.1816 552.767 77.1626 552.66 77.1626 552.597 cv
77.1626 551.958 li
77.1626 551.851 77.1816 551.81 77.3047 551.81 cv
77.4312 551.81 77.6328 551.82 77.9907 551.82 cv
78.3506 551.851 78.9028 551.888 79.7393 551.888 cv
80.5869 551.888 81.1021 551.82 81.3979 551.82 cv
81.7305 551.82 81.9229 551.927 82.1157 552.146 cv
82.2339 552.294 87.0156 558.507 87.3018 558.851 cv
87.5586 559.208 91.7432 564.302 92.3267 565.113 cv
92.4277 565.113 li
92.4277 562.171 li
92.4277 559.97 92.4121 558.765 92.3691 557.535 cv
92.3267 556.572 92.208 554.152 92.0615 553.726 cv
91.8521 553.111 91.3828 552.767 90.6875 552.767 cv
89.9019 552.767 li
89.8022 552.767 89.7617 552.73 89.7617 552.597 cv
89.7617 551.958 li
89.7617 551.851 89.8022 551.81 89.9019 551.81 cv
90.2534 551.81 91.0566 551.888 92.6221 551.888 cv
94.1094 551.888 94.6929 551.81 95.0176 551.81 cv
95.1929 551.81 95.2119 551.888 95.2119 551.982 cv
95.2119 552.597 li
95.2119 552.707 95.1597 552.767 95.062 552.767 cv
94.3955 552.767 li
93.7339 552.767 93.4917 553.195 93.4214 554.128 cv
93.3398 555.787 93.3398 558.212 93.3398 559.816 cv
93.3398 569.041 li
93.3398 569.406 93.3081 569.64 93.2114 569.64 cv
92.9214 569.64 92.7056 569.359 92.6221 569.251 cv
92.5913 569.187 91.1387 567.376 89.6079 565.455 cv
87.8853 563.316 86.0859 561.029 85.9385 560.88 cv
85.6621 560.646 81.1294 554.947 80.9858 554.736 cv
80.834 554.736 li
80.834 560.22 li
80.834 562.531 81.0283 566.542 81.0869 567.035 cv
81.1704 567.99 81.3203 568.464 81.9907 568.464 cv
82.7358 568.464 li
82.9111 568.464 82.9204 568.55 82.9204 568.675 cv
82.9204 569.228 li
82.9204 569.382 82.9111 569.437 82.7358 569.437 cv
82.4927 569.437 81.0107 569.359 80.3457 569.359 cv
79.8306 569.359 78.1172 569.437 77.8643 569.437 cv
77.7827 569.437 77.7422 569.382 77.7422 569.251 cv
77.7422 568.613 li
77.7422 568.55 77.7827 568.464 77.8921 568.464 cv
78.7456 568.464 li
79.4453 568.464 79.7158 568.167 79.8501 566.947 cv
79.8926 566.505 79.9487 563.681 79.9487 559.279 cv
79.9487 555.078 li
cp
f
102.012 569.187 mo
100.348 568.55 99.479 567.46 99.0586 565.906 cv
98.7822 564.794 98.6733 563.144 98.6733 559.892 cv
98.6733 554.027 li
98.6733 553.166 98.5181 552.767 97.7397 552.767 cv
96.5811 552.767 li
96.4336 552.767 96.4116 552.73 96.4116 552.55 cv
96.4116 551.998 li
96.4116 551.851 96.4336 551.81 96.624 551.81 cv
96.8765 551.81 98.0903 551.888 99.9961 551.888 cv
101.936 551.888 103.123 551.81 103.387 551.81 cv
103.591 551.81 103.605 551.851 103.605 551.958 cv
103.605 552.597 li
103.605 552.73 103.591 552.767 103.418 552.767 cv
102.188 552.767 li
101.478 552.767 101.049 553.236 101.007 553.771 cv
100.981 554.003 100.933 555.716 100.933 556.976 cv
100.933 558.625 li
100.933 559.923 101.049 563.068 101.069 563.853 cv
101.094 565.003 101.314 566.154 101.853 566.97 cv
102.775 568.308 104.346 568.744 105.792 568.744 cv
107.207 568.744 108.616 568.292 109.487 567.4 cv
110.435 566.373 110.763 564.878 110.763 563.068 cv
110.763 557.763 li
110.763 555.902 110.718 554.472 110.634 553.849 cv
110.553 553.212 110.178 552.767 109.542 552.767 cv
108.443 552.767 li
108.311 552.767 108.271 552.707 108.271 552.582 cv
108.271 551.982 li
108.271 551.851 108.311 551.81 108.443 551.81 cv
108.685 551.81 109.827 551.888 111.488 551.888 cv
113.172 551.888 113.967 551.81 114.199 551.81 cv
114.418 551.81 114.452 551.921 114.452 551.982 cv
114.452 552.527 li
114.452 552.66 114.418 552.767 114.285 552.767 cv
113.277 552.767 li
112.359 552.767 112.283 553.445 112.241 553.771 cv
112.175 554.003 112.175 557.505 112.175 557.855 cv
112.175 558.212 112.106 562.531 112.041 563.486 cv
111.891 565.501 111.354 567.058 109.974 568.248 cv
108.996 569.15 107.48 569.724 105.347 569.724 cv
104.064 569.724 102.813 569.552 102.012 569.187 cv
f
118.061 558.998 mo
118.061 558.423 117.979 553.98 117.952 553.625 cv
117.911 553.001 117.662 552.767 116.731 552.767 cv
115.288 552.767 li
115.175 552.767 115.103 552.73 115.103 552.621 cv
115.103 551.958 li
115.103 551.851 115.175 551.81 115.278 551.81 cv
115.562 551.81 116.832 551.888 119.126 551.888 cv
121.316 551.888 122.104 551.81 122.438 551.81 cv
122.573 551.81 122.63 551.888 122.63 551.982 cv
122.63 552.597 li
122.63 552.73 122.547 552.767 122.413 552.767 cv
121.266 552.767 li
120.772 552.767 120.387 552.955 120.387 553.445 cv
120.387 553.708 120.332 559.146 120.332 559.457 cv
120.332 561.347 li
120.332 561.605 120.387 567.283 120.387 567.57 cv
120.387 568.339 120.772 568.464 121.559 568.464 cv
122.573 568.464 li
122.699 568.464 122.782 568.511 122.782 568.636 cv
122.782 569.275 li
122.782 569.382 122.699 569.421 122.547 569.421 cv
122.248 569.421 121.266 569.359 119.126 569.359 cv
116.785 569.359 115.709 569.421 115.463 569.421 cv
115.321 569.421 115.245 569.382 115.245 569.275 cv
115.245 568.613 li
115.245 568.511 115.321 568.464 115.463 568.464 cv
116.832 568.464 li
117.316 568.464 117.835 568.394 117.931 567.742 cv
117.979 567.376 118.061 562.062 118.061 560.734 cv
118.061 558.998 li
cp
f
131.321 552.767 mo
130.699 552.767 li
129.915 552.767 127.782 552.767 126.823 553.064 cv
125.697 553.414 124.962 555.14 124.622 555.925 cv
124.554 556.027 124.488 556.058 124.354 556.027 cv
123.935 555.925 li
123.844 555.902 123.792 555.888 123.822 555.732 cv
124.087 554.837 124.938 551.664 124.978 551.375 cv
125.02 551.08 125.139 550.996 125.23 550.996 cv
125.347 550.996 125.431 551.009 125.542 551.08 cv
125.859 551.314 li
126.29 551.64 126.531 551.71 127.261 551.74 cv
128.567 551.787 129.586 551.888 131.922 551.888 cv
133.094 551.888 li
135.788 551.888 136.849 551.787 138.061 551.74 cv
138.604 551.71 138.915 551.64 139.333 551.375 cv
139.809 551.08 li
139.925 551.009 140.011 550.996 140.118 550.996 cv
140.219 550.996 140.287 551.08 140.33 551.375 cv
140.369 551.679 140.847 554.736 141.063 555.818 cv
141.063 555.949 141.022 556.019 140.886 556.019 cv
140.505 556.113 li
140.4 556.136 140.369 556.113 140.309 555.949 cv
140.118 555.466 139.368 553.578 138.547 553.195 cv
137.818 552.806 135.486 552.767 134.279 552.767 cv
133.584 552.767 li
133.584 559.792 li
133.584 560.158 133.584 567.058 133.617 567.46 cv
133.668 568.083 133.855 568.48 134.454 568.48 cv
136.021 568.48 li
136.227 568.48 136.26 568.55 136.26 568.705 cv
136.26 569.228 li
136.26 569.359 136.227 569.421 136.021 569.421 cv
135.77 569.421 134.975 569.359 132.558 569.359 cv
130.181 569.359 129.168 569.421 128.818 569.421 cv
128.61 569.421 128.593 569.312 128.593 569.187 cv
128.593 568.705 li
128.593 568.55 128.61 568.48 128.767 568.48 cv
130.432 568.48 li
130.926 568.48 131.235 568.167 131.235 567.873 cv
131.321 567.142 131.321 559.582 131.321 559.107 cv
131.321 552.767 li
cp
f
144.593 568.441 mo
144.309 568.201 144.14 568.146 144.017 568.146 cv
143.879 568.146 143.768 568.308 143.611 568.574 cv
143.471 568.822 143.361 568.845 143.181 568.845 cv
143.039 568.845 142.92 568.744 142.961 568.464 cv
143.052 567.843 143.307 564.707 143.391 563.976 cv
143.414 563.853 143.457 563.853 143.546 563.853 cv
143.914 563.876 li
144.017 563.876 144.065 563.914 144.065 564.07 cv
144.091 564.863 144.14 565.664 144.96 566.923 cv
145.697 568.083 147.063 568.744 148.408 568.744 cv
149.867 568.744 151.76 567.843 151.76 565.626 cv
151.76 563.082 149.928 562.142 147.984 561.457 cv
147.202 561.177 145.429 560.562 144.361 559.457 cv
143.546 558.64 143.12 557.49 143.12 555.847 cv
143.12 554.626 143.902 553.414 144.67 552.707 cv
145.543 551.851 146.776 551.515 148.116 551.515 cv
149.516 551.515 150.625 551.927 151.021 552.13 cv
151.235 552.253 151.367 552.216 151.492 552.107 cv
151.818 551.81 li
151.951 551.71 152.013 551.664 152.126 551.664 cv
152.262 551.664 152.328 551.851 152.328 552.083 cv
152.328 552.939 152.651 555.453 152.69 556.019 cv
152.69 556.113 152.651 556.167 152.558 556.183 cv
152.262 556.267 li
152.168 556.291 152.126 556.267 152.114 556.183 cv
151.904 555.458 151.597 554.527 150.585 553.445 cv
149.913 552.73 149.034 552.402 147.887 552.402 cv
145.697 552.402 144.892 554.027 144.892 555.289 cv
144.892 555.972 145.069 556.804 145.672 557.419 cv
146.39 558.152 147.764 558.679 148.482 558.919 cv
150.197 559.457 151.565 559.878 152.457 560.966 cv
153.09 561.736 153.542 562.677 153.542 564.302 cv
153.542 567.22 151.76 569.724 148.497 569.724 cv
146.776 569.724 145.578 569.187 144.593 568.441 cv
f
156.108 559.425 mo
156.108 559.279 156.151 559.255 156.327 559.255 cv
163.237 559.255 li
163.424 559.255 163.494 559.318 163.494 559.535 cv
163.494 560.453 li
163.494 560.599 163.393 560.646 163.187 560.646 cv
156.327 560.646 li
156.151 560.669 156.108 560.646 156.108 560.5 cv
156.108 559.425 li
cp
f
168.06 568.441 mo
167.768 568.201 167.612 568.146 167.48 568.146 cv
167.344 568.146 167.25 568.308 167.099 568.574 cv
166.951 568.822 166.831 568.845 166.656 568.845 cv
166.496 568.845 166.407 568.744 166.445 568.464 cv
166.524 567.843 166.784 564.707 166.85 563.976 cv
166.885 563.853 166.928 563.853 167.006 563.853 cv
167.391 563.876 li
167.48 563.876 167.542 563.914 167.542 564.07 cv
167.565 564.863 167.612 565.664 168.421 566.923 cv
169.172 568.083 170.549 568.744 171.89 568.744 cv
173.349 568.744 175.228 567.843 175.228 565.626 cv
175.228 563.082 173.403 562.142 171.439 561.457 cv
170.669 561.177 168.9 560.562 167.846 559.457 cv
167.006 558.64 166.609 557.49 166.609 555.847 cv
166.609 554.626 167.379 553.414 168.129 552.707 cv
169.02 551.851 170.265 551.515 171.583 551.515 cv
172.995 551.515 174.088 551.927 174.484 552.13 cv
174.722 552.253 174.858 552.216 174.956 552.107 cv
175.278 551.81 li
175.407 551.71 175.492 551.664 175.604 551.664 cv
175.741 551.664 175.814 551.851 175.814 552.083 cv
175.814 552.939 176.125 555.453 176.145 556.019 cv
176.145 556.113 176.125 556.167 176.032 556.183 cv
175.741 556.267 li
175.655 556.291 175.604 556.267 175.581 556.183 cv
175.391 555.458 175.071 554.527 174.061 553.445 cv
173.368 552.73 172.528 552.402 171.373 552.402 cv
169.172 552.402 168.379 554.027 168.379 555.289 cv
168.379 555.972 168.534 556.804 169.153 557.419 cv
169.88 558.152 171.241 558.679 171.941 558.919 cv
173.656 559.457 175.044 559.878 175.916 560.966 cv
176.577 561.736 177.005 562.677 177.005 564.302 cv
177.005 567.22 175.228 569.724 171.96 569.724 cv
170.265 569.724 169.043 569.187 168.06 568.441 cv
f
189.458 561.605 mo
189.228 560.857 187.237 554.689 187.101 554.332 cv
187.035 554.152 186.992 553.98 186.938 553.98 cv
186.829 553.98 186.72 554.152 186.65 554.347 cv
186.521 554.666 184.208 560.982 184.009 561.605 cv
189.458 561.605 li
cp
183.694 562.492 mo
183.453 563.105 182.087 566.839 181.956 567.376 cv
181.928 567.546 181.905 567.812 181.905 567.904 cv
181.905 568.271 182.193 568.464 182.733 568.464 cv
183.876 568.464 li
184.063 568.464 184.145 568.511 184.145 568.636 cv
184.145 569.187 li
184.145 569.382 184.063 569.421 183.931 569.421 cv
183.585 569.421 182.578 569.359 181.124 569.359 cv
179.311 569.359 178.774 569.421 178.443 569.421 cv
178.308 569.421 178.277 569.382 178.277 569.228 cv
178.277 568.636 li
178.277 568.511 178.37 568.464 178.459 568.464 cv
179.311 568.464 li
180.066 568.464 180.415 568.123 180.77 567.306 cv
180.944 566.923 182.733 562.351 183.453 560.345 cv
183.624 559.861 185.607 554.541 185.837 553.88 cv
185.911 553.625 186.035 553.328 185.868 553.048 cv
185.787 552.939 185.693 552.806 185.693 552.712 cv
185.693 552.66 185.731 552.55 185.911 552.511 cv
186.607 552.341 187.684 551.609 187.949 551.251 cv
188.073 551.15 188.151 551.041 188.283 551.041 cv
188.423 551.041 188.47 551.189 188.556 551.462 cv
189.007 553.001 190.936 558.531 191.426 560.134 cv
191.97 562.062 193.568 566.628 193.938 567.337 cv
194.331 568.167 194.98 568.464 195.606 568.464 cv
196.415 568.464 li
196.56 568.464 196.625 568.55 196.625 568.636 cv
196.625 569.251 li
196.625 569.382 196.532 569.421 196.377 569.421 cv
195.921 569.421 195.412 569.359 193.394 569.359 cv
191.355 569.359 190.507 569.421 189.932 569.421 cv
189.792 569.421 189.726 569.359 189.726 569.187 cv
189.726 568.636 li
189.726 568.48 189.792 568.464 189.967 568.464 cv
190.574 568.464 li
191.274 568.464 191.492 568.201 191.309 567.523 cv
191.11 566.628 190.111 563.486 189.745 562.492 cv
183.694 562.492 li
cp
f
200.063 558.998 mo
200.063 558.423 199.974 553.98 199.955 553.625 cv
199.912 553.001 199.67 552.767 198.714 552.767 cv
197.287 552.767 li
197.174 552.767 197.104 552.73 197.104 552.621 cv
197.104 551.958 li
197.104 551.851 197.174 551.81 197.267 551.81 cv
197.563 551.81 198.823 551.888 201.125 551.888 cv
203.303 551.888 204.1 551.81 204.451 551.81 cv
204.567 551.81 204.614 551.888 204.614 551.982 cv
204.614 552.597 li
204.614 552.73 204.547 552.767 204.431 552.767 cv
203.265 552.767 li
202.774 552.767 202.405 552.955 202.405 553.445 cv
202.405 553.708 202.331 559.146 202.331 559.457 cv
202.331 561.347 li
202.331 561.605 202.405 567.283 202.405 567.57 cv
202.405 568.339 202.774 568.464 203.556 568.464 cv
204.567 568.464 li
204.699 568.464 204.789 568.511 204.789 568.636 cv
204.789 569.275 li
204.789 569.382 204.699 569.421 204.547 569.421 cv
204.245 569.421 203.265 569.359 201.125 569.359 cv
198.788 569.359 197.729 569.421 197.462 569.421 cv
197.325 569.421 197.244 569.382 197.244 569.275 cv
197.244 568.613 li
197.244 568.511 197.325 568.464 197.462 568.464 cv
198.823 568.464 li
199.32 568.464 199.838 568.394 199.927 567.742 cv
199.974 567.376 200.063 562.062 200.063 560.734 cv
200.063 558.998 li
cp
f
209.332 555.078 mo
209.332 553.625 208.588 552.806 207.721 552.791 cv
206.675 552.767 li
206.574 552.767 206.542 552.66 206.542 552.597 cv
206.542 551.958 li
206.542 551.851 206.574 551.81 206.675 551.81 cv
206.811 551.81 207.021 551.82 207.379 551.82 cv
207.737 551.851 208.301 551.888 209.129 551.888 cv
209.977 551.888 210.475 551.82 210.778 551.82 cv
211.097 551.82 211.311 551.927 211.505 552.146 cv
211.614 552.294 216.414 558.507 216.67 558.851 cv
216.95 559.208 221.111 564.302 221.708 565.113 cv
221.829 565.113 li
221.829 562.171 li
221.829 559.97 221.791 558.765 221.735 557.535 cv
221.708 556.572 221.58 554.152 221.431 553.726 cv
221.244 553.111 220.769 552.767 220.088 552.767 cv
219.295 552.767 li
219.19 552.767 219.14 552.73 219.14 552.597 cv
219.14 551.958 li
219.14 551.851 219.19 551.81 219.295 551.81 cv
219.634 551.81 220.435 551.888 222.016 551.888 cv
223.482 551.888 224.088 551.81 224.404 551.81 cv
224.579 551.81 224.59 551.888 224.59 551.982 cv
224.59 552.597 li
224.59 552.707 224.555 552.767 224.446 552.767 cv
223.774 552.767 li
223.12 552.767 222.864 553.195 222.813 554.128 cv
222.72 555.787 222.72 558.212 222.72 559.816 cv
222.72 569.041 li
222.72 569.406 222.696 569.64 222.615 569.64 cv
222.311 569.64 222.082 569.359 222.016 569.251 cv
221.992 569.187 220.528 567.376 218.996 565.455 cv
217.277 563.316 215.484 561.029 215.324 560.88 cv
215.037 560.646 210.509 554.947 210.381 554.736 cv
210.207 554.736 li
210.207 560.22 li
210.207 562.531 210.428 566.542 210.467 567.035 cv
210.56 567.99 210.712 568.464 211.385 568.464 cv
212.124 568.464 li
212.279 568.464 212.314 568.55 212.314 568.675 cv
212.314 569.228 li
212.314 569.382 212.279 569.437 212.124 569.437 cv
211.863 569.437 210.396 569.359 209.713 569.359 cv
209.195 569.359 207.511 569.437 207.266 569.437 cv
207.161 569.437 207.13 569.382 207.13 569.251 cv
207.13 568.613 li
207.13 568.55 207.161 568.464 207.27 568.464 cv
208.122 568.464 li
208.837 568.464 209.102 568.167 209.227 566.947 cv
209.276 566.505 209.332 563.681 209.332 559.279 cv
209.332 555.078 li
cp
f
232.94 552.767 mo
232.319 552.767 li
231.516 552.767 229.382 552.767 228.417 553.064 cv
227.297 553.414 226.558 555.14 226.224 555.925 cv
226.173 556.027 226.092 556.058 225.967 556.027 cv
225.536 555.925 li
225.442 555.902 225.391 555.888 225.418 555.732 cv
225.683 554.837 226.531 551.664 226.597 551.375 cv
226.636 551.08 226.737 550.996 226.827 550.996 cv
226.943 550.996 227.025 551.009 227.138 551.08 cv
227.46 551.314 li
227.908 551.64 228.141 551.71 228.864 551.74 cv
230.167 551.787 231.213 551.888 233.524 551.888 cv
234.706 551.888 li
237.389 551.888 238.456 551.787 239.661 551.74 cv
240.198 551.71 240.508 551.64 240.944 551.375 cv
241.418 551.08 li
241.536 551.009 241.606 550.996 241.708 550.996 cv
241.838 550.996 241.885 551.08 241.924 551.375 cv
241.963 551.679 242.43 554.736 242.625 555.818 cv
242.663 555.949 242.625 556.019 242.5 556.019 cv
242.088 556.113 li
242.01 556.136 241.963 556.113 241.901 555.949 cv
241.708 555.466 240.967 553.578 240.159 553.195 cv
239.428 552.806 237.106 552.767 235.893 552.767 cv
235.208 552.767 li
235.208 559.792 li
235.208 560.158 235.208 567.058 235.223 567.46 cv
235.274 568.083 235.477 568.48 236.059 568.48 cv
237.624 568.48 li
237.833 568.48 237.872 568.55 237.872 568.705 cv
237.872 569.228 li
237.872 569.359 237.833 569.421 237.624 569.421 cv
237.358 569.421 236.588 569.359 234.155 569.359 cv
231.797 569.359 230.766 569.421 230.428 569.421 cv
230.206 569.421 230.19 569.312 230.19 569.187 cv
230.19 568.705 li
230.19 568.55 230.206 568.48 230.365 568.48 cv
232.049 568.48 li
232.528 568.48 232.834 568.167 232.858 567.873 cv
232.94 567.142 232.94 559.582 232.94 559.107 cv
232.94 552.767 li
cp
f
243.565 559.425 mo
243.565 559.279 243.627 559.255 243.807 559.255 cv
250.698 559.255 li
250.893 559.255 250.971 559.318 250.971 559.535 cv
250.971 560.453 li
250.971 560.599 250.87 560.646 250.667 560.646 cv
243.807 560.646 li
243.627 560.669 243.565 560.646 243.565 560.5 cv
243.565 559.425 li
cp
f
267.36 563.9 mo
267.36 562.998 267.086 562.755 266.372 562.755 cv
265.321 562.755 li
265.19 562.755 265.151 562.716 265.151 562.615 cv
265.151 561.994 li
265.151 561.83 265.174 561.798 265.305 561.798 cv
265.641 561.798 266.745 561.861 268.432 561.861 cv
270.206 561.861 271 561.798 271.342 561.798 cv
271.512 561.798 271.528 561.861 271.528 561.947 cv
271.528 562.576 li
271.528 562.662 271.512 562.755 271.366 562.755 cv
270.401 562.755 li
269.95 562.755 269.629 562.933 269.629 563.697 cv
269.629 566.947 li
269.629 567.283 269.739 567.546 269.739 567.742 cv
269.739 567.937 269.592 568.037 269.327 568.146 cv
267.352 569.126 265.368 569.724 262.592 569.724 cv
260.405 569.724 257.395 568.892 255.715 566.91 cv
254.198 565.22 253.428 563.105 253.428 560.134 cv
253.428 557.863 254.393 555.458 256.206 553.849 cv
257.971 552.341 260.196 551.515 263.143 551.515 cv
265.268 551.515 267.188 552.294 268.004 552.939 cv
268.27 553.166 268.432 553.111 268.557 552.916 cv
268.946 552.464 li
269.055 552.378 269.141 552.253 269.288 552.253 cv
269.459 552.253 269.514 552.378 269.514 552.55 cv
269.592 557.255 li
269.592 557.373 269.569 557.49 269.459 557.49 cv
269.016 557.535 li
268.922 557.535 268.846 557.466 268.823 557.333 cv
268.627 556.65 268.2 555.458 267.352 554.433 cv
266.606 553.515 265.065 552.402 262.84 552.402 cv
261.161 552.402 259.62 552.806 258.141 554.386 cv
256.803 555.8 255.963 557.855 255.963 560.072 cv
255.963 562.974 256.774 565.533 258.313 566.97 cv
259.557 568.167 261.043 568.744 262.645 568.744 cv
264.637 568.744 265.834 568.394 266.69 567.89 cv
267.266 567.546 267.36 566.988 267.36 565.71 cv
267.36 563.9 li
cp
f
278.272 559.892 mo
278.483 559.892 281.12 559.792 281.415 559.746 cv
282.124 559.621 282.333 559.425 282.542 558.664 cv
282.627 558.423 282.721 557.91 282.737 557.466 cv
282.737 557.333 282.823 557.294 282.917 557.294 cv
283.53 557.302 li
283.655 557.302 283.702 557.404 283.686 557.505 cv
283.616 557.91 283.616 559.939 283.616 560.322 cv
283.616 561.177 283.702 562.351 283.772 562.896 cv
283.772 562.998 283.702 563.068 283.616 563.082 cv
283.079 563.144 li
282.93 563.191 282.885 563.105 282.87 562.933 cv
282.823 562.615 282.682 562.062 282.588 561.775 cv
282.465 561.238 282.184 560.88 281.547 560.81 cv
280.395 560.687 278.661 560.687 278.272 560.687 cv
278.272 562.234 li
278.272 563.548 278.327 565.937 278.327 566.435 cv
278.366 567.718 278.981 568.224 279.727 568.355 cv
280.225 568.464 280.948 568.55 281.563 568.55 cv
281.999 568.55 283.211 568.511 283.725 568.464 cv
284.153 568.394 285.241 568.146 285.879 567.609 cv
286.174 567.337 287.567 565.58 287.909 565.003 cv
287.971 564.878 288.057 564.794 288.213 564.863 cv
288.594 565.097 li
288.719 565.173 288.719 565.22 288.633 565.431 cv
287.327 569.041 li
287.256 569.275 287.069 569.421 286.797 569.421 cv
286.672 569.421 286.137 569.406 284.667 569.382 cv
283.165 569.382 280.776 569.359 276.934 569.359 cv
276.016 569.359 275.309 569.382 274.819 569.382 cv
274.305 569.406 273.987 569.421 273.768 569.421 cv
273.622 569.421 273.559 569.382 273.559 569.251 cv
273.559 568.589 li
273.559 568.48 273.622 568.464 273.799 568.464 cv
274.772 568.464 li
275.93 568.464 276.016 568.292 276.016 567.376 cv
276.016 561.511 li
276.016 559.107 li
276.016 557.054 275.977 553.98 275.954 553.726 cv
275.846 552.939 275.588 552.767 274.686 552.767 cv
273.799 552.767 li
273.667 552.767 273.606 552.746 273.606 552.597 cv
273.606 551.927 li
273.606 551.851 273.653 551.81 273.768 551.81 cv
274.305 551.81 275.184 551.888 276.809 551.888 cv
277.891 551.888 li
280.348 551.888 282.76 551.851 285.211 551.851 cv
285.6 551.851 286.067 551.81 286.206 551.81 cv
286.323 551.81 286.37 551.851 286.393 551.927 cv
286.485 552.277 287.59 555.654 287.645 555.902 cv
287.668 556.019 287.668 556.058 287.59 556.113 cv
287.202 556.308 li
287.139 556.378 287.03 556.291 287.006 556.244 cv
286.969 556.136 285.133 553.818 284.557 553.429 cv
284.02 553.087 283.344 552.791 282.682 552.767 cv
278.272 552.66 li
278.272 559.892 li
cp
f
306.071 561.029 mo
306.071 555.607 302.229 552.441 299.475 552.441 cv
299.11 552.441 297.422 552.138 295.594 553.896 cv
293.946 555.466 293.122 557.97 293.122 559.97 cv
293.122 566.505 297.655 568.791 299.733 568.791 cv
305.155 568.791 306.071 563.238 306.071 561.029 cv
294.217 568.123 mo
292.475 567.058 290.6 564.382 290.6 560.794 cv
290.6 559.279 291.006 556.929 292.903 554.642 cv
295.088 551.998 297.516 551.515 299.584 551.515 cv
301.141 551.515 303.17 551.82 305.116 553.445 cv
306.913 555.007 308.491 557.419 308.491 560.841 cv
308.491 562.623 307.93 564.513 306.655 566.24 cv
305.137 568.248 302.93 569.724 299.545 569.724 cv
298.333 569.724 296.17 569.312 294.217 568.123 cv
f
315.321 560.562 mo
315.686 560.646 315.965 560.669 316.424 560.669 cv
320.913 560.669 321.76 557.568 321.76 556.548 cv
321.76 555.388 321.254 554.332 320.563 553.726 cv
319.583 552.955 318.508 552.589 316.463 552.589 cv
316.153 552.589 315.833 552.66 315.616 552.791 cv
315.444 552.916 315.321 553.195 315.321 553.578 cv
315.321 560.562 li
cp
313.104 558.128 mo
313.104 556.291 313.104 554.736 313.073 554.003 cv
313.057 553.195 312.752 552.767 312.139 552.767 cv
311.135 552.767 li
311.026 552.767 311.01 552.707 311.01 552.589 cv
311.01 551.982 li
311.01 551.851 311.026 551.81 311.135 551.81 cv
311.368 551.81 312.139 551.888 314.215 551.888 cv
315.6 551.888 317.887 551.81 318.323 551.81 cv
320.375 551.81 322 552.425 322.944 553.328 cv
323.752 554.091 324.217 555.195 324.217 556.113 cv
324.217 559.208 322.811 560.369 319.645 561.076 cv
319.645 561.107 li
320.25 561.332 320.594 561.775 320.78 562.062 cv
321.092 562.351 322.85 564.878 323.043 565.22 cv
323.176 565.455 324.739 567.695 325.198 568.037 cv
325.743 568.394 326.288 568.464 326.973 568.464 cv
327.143 568.464 327.198 568.574 327.198 568.652 cv
327.198 569.187 li
327.198 569.359 327.143 569.421 326.973 569.421 cv
326.786 569.421 326.139 569.359 325.051 569.359 cv
324.342 569.359 323.424 569.406 323.067 569.421 cv
322.795 569.187 322.227 568.339 322.018 568.013 cv
321.831 567.718 320.508 565.384 320.375 565.173 cv
320.268 565.003 319.092 563.238 318.797 562.896 cv
318.159 562.125 317.553 561.457 316.129 561.457 cv
315.895 561.457 315.655 561.457 315.321 561.511 cv
315.321 562.91 li
315.321 564.341 315.344 567.119 315.352 567.515 cv
315.42 568.013 315.616 568.464 315.973 568.464 cv
317.538 568.464 li
317.708 568.464 317.731 568.535 317.731 568.652 cv
317.731 569.187 li
317.731 569.382 317.708 569.421 317.475 569.421 cv
317.194 569.421 316.573 569.359 314.231 569.359 cv
311.983 569.359 311.409 569.421 311.135 569.421 cv
310.94 569.421 310.94 569.359 310.94 569.228 cv
310.94 568.652 li
310.94 568.535 310.94 568.464 311.065 568.464 cv
312.1 568.464 li
312.629 568.464 313.057 568.292 313.057 567.609 cv
313.104 565.173 313.104 562.849 313.104 560.5 cv
313.104 558.128 li
cp
f
341.594 563.9 mo
341.594 562.998 341.323 562.755 340.592 562.755 cv
339.542 562.755 li
339.424 562.755 339.377 562.716 339.377 562.615 cv
339.377 561.994 li
339.377 561.83 339.401 561.798 339.542 561.798 cv
339.875 561.798 340.981 561.861 342.661 561.861 cv
344.442 561.861 345.219 561.798 345.569 561.798 cv
345.741 561.798 345.788 561.861 345.788 561.947 cv
345.788 562.576 li
345.788 562.662 345.741 562.755 345.592 562.755 cv
344.629 562.755 li
344.178 562.755 343.866 562.933 343.866 563.697 cv
343.866 566.947 li
343.866 567.283 343.967 567.546 343.967 567.742 cv
343.967 567.937 343.819 568.037 343.586 568.146 cv
341.579 569.126 339.612 569.724 336.834 569.724 cv
334.633 569.724 331.624 568.892 329.952 566.91 cv
328.426 565.22 327.657 563.105 327.657 560.134 cv
327.657 557.863 328.637 555.458 330.458 553.849 cv
332.208 552.341 334.424 551.515 337.395 551.515 cv
339.502 551.515 341.409 552.294 342.241 552.939 cv
342.52 553.166 342.661 553.111 342.817 552.916 cv
343.198 552.464 li
343.284 552.378 343.391 552.253 343.516 552.253 cv
343.711 552.253 343.75 552.378 343.75 552.55 cv
343.819 557.255 li
343.819 557.373 343.795 557.49 343.711 557.49 cv
343.26 557.535 li
343.167 557.535 343.081 557.466 343.049 557.333 cv
342.856 556.65 342.436 555.458 341.579 554.433 cv
340.848 553.515 339.309 552.402 337.09 552.402 cv
335.387 552.402 333.848 552.806 332.377 554.386 cv
331.063 555.8 330.223 557.855 330.223 560.072 cv
330.223 562.974 331.008 565.533 332.549 566.97 cv
333.778 568.167 335.28 568.744 336.874 568.744 cv
338.874 568.744 340.079 568.394 340.934 567.89 cv
341.495 567.546 341.594 566.988 341.594 565.71 cv
341.594 563.9 li
cp
f
352.524 559.892 mo
352.719 559.892 355.34 559.792 355.659 559.746 cv
356.374 559.621 356.569 559.425 356.77 558.664 cv
356.864 558.423 356.965 557.91 356.997 557.466 cv
356.997 557.333 357.075 557.294 357.161 557.294 cv
357.782 557.302 li
357.907 557.302 357.954 557.404 357.93 557.505 cv
357.86 557.91 357.86 559.939 357.86 560.322 cv
357.86 561.177 357.954 562.351 357.993 562.896 cv
357.993 562.998 357.954 563.068 357.86 563.082 cv
357.338 563.144 li
357.182 563.191 357.143 563.105 357.114 562.933 cv
357.075 562.615 356.903 562.062 356.864 561.775 cv
356.692 561.238 356.413 560.88 355.776 560.81 cv
354.616 560.687 352.905 560.687 352.524 560.687 cv
352.524 562.234 li
352.524 563.548 352.571 565.937 352.571 566.435 cv
352.594 567.718 353.239 568.224 353.987 568.355 cv
354.475 568.464 355.176 568.55 355.799 568.55 cv
356.227 568.55 357.463 568.511 357.977 568.464 cv
358.397 568.394 359.485 568.146 360.124 567.609 cv
360.434 567.337 361.788 565.58 362.137 565.003 cv
362.223 564.878 362.293 564.794 362.434 564.863 cv
362.838 565.097 li
362.969 565.173 362.969 565.22 362.877 565.431 cv
361.561 569.041 li
361.493 569.275 361.321 569.421 361.049 569.421 cv
360.901 569.421 360.364 569.406 358.893 569.382 cv
357.393 569.382 354.997 569.359 351.163 569.359 cv
350.245 569.359 349.584 569.382 349.071 569.382 cv
348.565 569.406 348.237 569.421 348.004 569.421 cv
347.848 569.421 347.786 569.382 347.786 569.251 cv
347.786 568.589 li
347.786 568.48 347.848 568.464 348.036 568.464 cv
349.032 568.464 li
350.159 568.464 350.245 568.292 350.245 567.376 cv
350.245 561.511 li
350.245 559.107 li
350.245 557.054 350.206 553.98 350.19 553.726 cv
350.073 552.939 349.84 552.767 348.922 552.767 cv
348.036 552.767 li
347.918 552.767 347.833 552.746 347.833 552.597 cv
347.833 551.927 li
347.833 551.851 347.895 551.81 348.004 551.81 cv
348.565 551.81 349.413 551.888 351.038 551.888 cv
352.127 551.888 li
354.577 551.888 357.012 551.851 359.438 551.851 cv
359.852 551.851 360.317 551.81 360.45 551.81 cv
360.551 551.81 360.622 551.851 360.645 551.927 cv
360.729 552.277 361.819 555.654 361.874 555.902 cv
361.92 556.019 361.92 556.058 361.819 556.113 cv
361.454 556.308 li
361.407 556.378 361.282 556.291 361.258 556.244 cv
361.196 556.136 359.383 553.818 358.778 553.429 cv
358.272 553.087 357.571 552.791 356.903 552.767 cv
352.524 552.66 li
352.524 559.892 li
cp
f
366.579 568.441 mo
366.276 568.201 366.127 568.146 365.997 568.146 cv
365.856 568.146 365.739 568.308 365.614 568.574 cv
365.459 568.822 365.334 568.845 365.163 568.845 cv
365.024 568.845 364.891 568.744 364.954 568.464 cv
365.04 567.843 365.295 564.707 365.358 563.976 cv
365.397 563.853 365.444 563.853 365.53 563.853 cv
365.887 563.876 li
365.997 563.876 366.065 563.914 366.065 564.07 cv
366.081 564.863 366.127 565.664 366.936 566.923 cv
367.692 568.083 369.053 568.744 370.399 568.744 cv
371.868 568.744 373.743 567.843 373.743 565.626 cv
373.743 563.082 371.915 562.142 369.948 561.457 cv
369.176 561.177 367.403 560.562 366.362 559.457 cv
365.53 558.64 365.124 557.49 365.124 555.847 cv
365.124 554.626 365.887 553.414 366.633 552.707 cv
367.536 551.851 368.772 551.515 370.094 551.515 cv
371.502 551.515 372.6 551.927 373.02 552.13 cv
373.237 552.253 373.37 552.216 373.471 552.107 cv
373.813 551.81 li
373.922 551.71 374.006 551.664 374.124 551.664 cv
374.233 551.664 374.303 551.851 374.303 552.083 cv
374.303 552.939 374.614 555.453 374.668 556.019 cv
374.668 556.113 374.614 556.167 374.543 556.183 cv
374.233 556.267 li
374.17 556.291 374.124 556.267 374.092 556.183 cv
373.899 555.458 373.579 554.527 372.577 553.445 cv
371.891 552.73 371.036 552.402 369.885 552.402 cv
367.692 552.402 366.899 554.027 366.899 555.289 cv
366.899 555.972 367.045 556.804 367.637 557.419 cv
368.368 558.152 369.752 558.679 370.461 558.919 cv
372.18 559.457 373.549 559.878 374.434 560.966 cv
375.088 561.736 375.547 562.677 375.547 564.302 cv
375.547 567.22 373.743 569.724 370.499 569.724 cv
368.772 569.724 367.559 569.187 366.579 568.441 cv
f
374.543 537.025 mo
77.0732 537.025 li
77.0732 536.138 li
374.543 536.138 li
374.543 537.025 li
cp
f
312.7 57.8467 mo
313.034 57.1777 313.602 56.667 314.411 56.478 cv
314.885 56.3496 315.655 56.251 316.883 56.1826 cv
318.073 56.1631 318.907 56.0112 319.418 55.8115 cv
320.292 55.5195 320.991 54.9619 321.458 54.1719 cv
324.133 46.936 li
323.875 47.6377 323.354 48.1475 322.608 48.502 cv
322.094 48.688 321.293 48.9175 320.182 49.1548 cv
319.053 49.4194 318.174 49.668 317.584 50.0088 cv
316.706 50.4092 316.043 51.1089 315.538 52.0645 cv
312.7 57.8467 li
cp
f
322.499 44.1182 mo
323.448 43.9917 324.118 43.8481 324.53 43.6729 cv
325.19 43.397 325.618 42.9712 325.844 42.3276 cv
327.719 32.7603 li
317.934 46.2051 li
318.565 45.5132 319.28 44.9761 320.143 44.6299 cv
320.686 44.4565 321.418 44.2739 322.499 44.1182 cv
f
317.079 65.917 mo
319.053 60.5908 li
318.719 61.4346 318.135 61.9907 317.241 62.2222 cv
316.758 62.3975 315.788 62.4932 314.356 62.5728 cv
313.104 62.6714 312.061 62.8911 311.292 63.1909 cv
310.202 63.7163 309.323 64.5986 308.702 65.876 cv
306.141 71.0879 li
306.608 70.228 307.387 69.5869 308.42 69.2734 cv
309.012 69.0498 310.092 68.8745 311.704 68.8032 cv
313.065 68.7344 314.114 68.5635 314.917 68.2524 cv
315.918 67.8125 316.69 67.0527 317.079 65.917 cv
f
311.477 80.9873 mo
314.596 72.5928 li
314.247 73.4995 313.524 74.0942 312.52 74.3096 cv
312.108 74.4189 311.555 74.4263 311.01 74.4731 cv
310.233 74.4731 309.659 74.4731 309.221 74.5391 cv
307.706 74.5591 306.499 74.8022 305.536 75.2939 cv
304.221 75.9297 303.147 77.0869 302.323 78.7476 cv
299.709 83.9805 li
300.315 82.9048 301.157 82.1987 302.276 81.9307 cv
303.045 81.7983 304.135 81.8408 305.645 82.1074 cv
307.2 82.374 308.344 82.5083 308.958 82.4888 cv
310.092 82.395 310.94 81.9033 311.477 80.9873 cv
f
306.702 93.8823 mo
309.385 86.6035 li
308.762 87.79 307.799 88.459 306.545 88.6904 cv
306.071 88.7583 305.52 88.7583 304.743 88.6904 cv
303.739 88.6372 303.116 88.5713 302.868 88.5269 cv
301.241 88.394 299.965 88.5269 298.924 88.9482 cv
297.5 89.6055 296.295 90.835 295.338 92.7974 cv
292.258 99.0757 li
292.903 97.8237 293.938 97.0615 295.338 96.8535 cv
295.92 96.813 296.614 96.813 297.344 96.8535 cv
299.475 97.1602 li
301.366 97.3726 302.735 97.3726 303.661 97.1274 cv
305.053 96.6548 306.042 95.6323 306.702 93.8823 cv
f
301.233 108.548 mo
303.762 101.721 li
303.209 103.194 302.206 104.021 300.852 104.25 cv
300.301 104.365 299.561 104.385 298.776 104.344 cv
298.682 104.344 297.952 104.196 296.512 104.021 cv
294.489 103.706 292.989 103.685 291.922 103.978 cv
290.305 104.385 289.053 105.544 288.143 107.338 cv
284.588 114.506 li
285.397 112.931 286.633 112.013 288.268 111.595 cv
289.293 111.415 290.92 111.415 293.208 111.595 cv
295.508 111.79 297.104 111.77 297.991 111.556 cv
299.561 111.171 300.651 110.166 301.233 108.548 cv
f
294.987 119.158 mo
294.327 119.334 293.518 119.409 292.561 119.409 cv
291.922 119.409 291.03 119.334 289.917 119.245 cv
287.512 118.955 285.754 119.023 284.643 119.245 cv
282.87 119.638 281.5 120.742 280.606 122.415 cv
276.561 130.659 li
277.432 128.976 278.793 127.922 280.676 127.572 cv
281.407 127.412 282.333 127.315 283.438 127.334 cv
284.043 127.334 284.985 127.412 286.284 127.49 cv
287.846 127.587 288.811 127.626 289.194 127.626 cv
290.243 127.587 291.114 127.49 291.813 127.315 cv
293.625 126.864 294.825 125.697 295.547 123.838 cv
298.426 116.062 li
297.78 117.734 296.59 118.772 294.987 119.158 cv
f
131.898 87.0977 mo
131.465 86.0859 131.465 85.0068 131.938 83.9453 cv
132.172 83.2666 132.77 82.3057 133.703 81.0713 cv
134.572 79.7725 135.134 78.7393 135.317 78.0864 cv
135.677 76.9331 135.512 75.8887 134.899 74.7725 cv
131.938 69.7188 li
132.367 70.52 132.4 71.3853 132.071 72.2583 cv
131.871 72.7056 131.313 73.5518 130.452 74.7725 cv
129.655 75.8887 129.129 76.832 128.919 77.6606 cv
128.626 78.8955 128.75 80.1768 129.345 81.4912 cv
131.898 87.0977 li
cp
f
135.585 95.144 mo
138.104 100.762 li
137.6 99.4883 137.645 98.3218 138.104 97.2949 cv
138.463 96.6611 139.175 95.7524 140.421 94.6523 cv
141.701 93.5459 142.535 92.7441 142.954 92.2314 cv
143.604 91.2588 143.78 90.2573 143.381 89.1821 cv
138.654 81.2173 li
139.148 82.1074 139.148 83.0234 138.654 83.9473 cv
138.496 84.3438 138.201 84.834 137.83 85.3276 cv
136.678 86.7886 li
135.743 88.0342 135.134 89.166 134.899 90.2573 cv
134.525 91.7642 134.772 93.376 135.585 95.144 cv
f
119.749 58.314 mo
120.001 57.6353 120.387 56.9316 120.89 56.0718 cv
121.425 55.1753 121.767 54.5317 121.893 54.1719 cv
122.104 53.4541 121.985 52.8384 121.668 52.2021 cv
115.145 44.4312 li
119.568 61.1606 li
119.383 60.1943 119.461 59.2354 119.749 58.314 cv
f
125.522 73.0459 mo
125.165 72.2529 125.205 71.5234 125.532 70.7397 cv
125.759 70.1909 126.276 69.4561 126.956 68.5635 cv
127.613 67.6206 128.116 66.8794 128.326 66.2666 cv
128.701 65.3608 128.651 64.3979 128.266 63.5371 cv
124.227 56.647 li
124.603 57.3511 124.68 58.0806 124.478 58.8896 cv
124.386 59.3174 124.007 60.1221 123.439 61.2827 cv
122.864 62.3623 122.492 63.23 122.391 63.8945 cv
122.16 64.9741 122.281 65.9756 122.737 66.9146 cv
125.522 73.0459 li
cp
f
128.081 115.432 mo
128.651 119.758 129.688 124.262 131.119 128.855 cv
132.4 132.799 133.958 136.556 135.694 140.192 cv
137.314 143.436 138.955 146.127 140.519 148.208 cv
142.119 150.226 143.34 151.331 144.268 151.455 cv
147.381 152.031 149.267 152.334 149.847 152.357 cv
152.499 152.742 154.413 152.863 155.618 152.688 cv
150.551 146.982 145.563 140.826 140.627 134.188 cv
135.343 127.094 131.185 120.805 128.081 115.432 cv
f
145.211 99.6968 mo
143.822 101.138 li
142.66 102.37 141.856 103.541 141.607 104.573 cv
141.155 106.203 141.388 108.002 142.325 110.012 cv
145.328 116.635 li
144.752 115.248 144.853 113.952 145.578 112.715 cv
145.875 112.225 146.347 111.644 146.875 111.07 cv
148.54 109.511 li
149.982 108.198 150.874 107.031 151.235 106.113 cv
151.827 104.682 151.643 103.185 150.64 101.545 cv
146.551 94.5376 li
147.091 95.8828 147.01 97.1333 146.347 98.2568 cv
146.1 98.6597 145.713 99.1538 145.211 99.6968 cv
f
157.839 122.146 mo
158.484 121.404 158.928 120.781 159.196 120.225 cv
159.9 118.716 159.784 117.151 158.9 115.566 cv
155.055 109.088 li
155.824 110.518 155.875 111.859 155.214 113.075 cv
154.879 113.682 154.42 114.22 153.892 114.761 cv
153.643 115.045 153.063 115.566 152.138 116.402 cv
150.551 117.831 149.528 119.072 149.049 120.093 cv
148.35 121.722 148.443 123.43 149.294 125.312 cv
152.744 132.962 li
152.048 131.282 152.087 129.645 152.884 128.104 cv
153.371 127.14 154.42 125.798 156.069 124.091 cv
156.987 123.126 157.563 122.551 157.839 122.146 cv
f
162.358 142.315 mo
162.911 141.635 163.568 140.935 164.392 140.056 cv
165.388 139.006 166.026 138.263 166.411 137.835 cv
167.033 137.053 167.542 136.252 167.862 135.552 cv
168.646 133.76 168.538 131.994 167.511 130.177 cv
163.121 122.788 li
164.042 124.402 164.108 126.008 163.377 127.587 cv
163.101 128.252 162.607 128.925 161.95 129.707 cv
161.654 130.135 161.017 130.761 160.076 131.776 cv
159.103 132.779 158.469 133.44 158.158 133.83 cv
157.508 134.592 156.987 135.292 156.665 136.003 cv
155.758 137.71 155.727 139.465 156.563 141.316 cv
160.538 150.027 li
159.749 148.208 159.857 146.418 160.752 144.668 cv
161.079 143.949 161.615 143.155 162.358 142.315 cv
f
228.798 113.608 mo
225.605 103.343 li
222.494 113.608 li
211.991 111.218 li
219.373 119.072 li
211.991 126.934 li
222.494 124.526 li
225.605 134.798 li
228.798 124.526 li
239.264 126.934 li
231.93 119.072 li
239.264 111.218 li
228.798 113.608 li
cp
f
222.299 300.13 mo
220.369 299.507 218.949 298.317 217.993 296.605 cv
217.102 294.816 216.985 293.051 217.561 291.285 cv
217.848 290.546 218.21 289.87 218.762 289.247 cv
219.365 288.556 220.088 287.917 220.991 287.362 cv
222.163 286.522 223.758 285.232 225.866 283.552 cv
227.212 282.408 229.386 280.588 232.465 277.998 cv
236.981 274.125 240.508 271.185 243.045 269.146 cv
247.26 265.833 249.913 263.981 251.081 263.546 cv
249.461 265.032 li
247.93 268.999 244.989 274.576 240.75 281.763 cv
236.895 288.26 233.877 292.981 231.618 295.968 cv
230.526 297.353 229.386 298.472 228.099 299.212 cv
226.173 300.495 224.252 300.798 222.299 300.13 cv
211.396 274.793 mo
210.708 273.028 210.817 271.254 211.665 269.582 cv
211.999 268.928 212.462 268.345 213.049 267.785 cv
213.671 267.202 214.457 266.72 215.383 266.191 cv
217.304 265.203 219.365 264.137 221.512 262.971 cv
227.546 259.69 232.225 257.259 235.584 255.532 cv
241.909 252.362 245.797 250.722 247.174 250.605 cv
249.766 252.981 li
249.268 253.895 248.489 254.859 247.532 256.038 cv
245.62 256.851 242.999 258.492 239.598 261.14 cv
236.788 263.305 232.465 266.852 226.679 271.845 cv
221.829 275.944 li
220.311 277.189 218.949 278.309 217.736 279.273 cv
216.74 279.273 215.834 279.056 215.056 278.737 cv
213.294 277.866 212.046 276.551 211.396 274.793 cv
207.546 255.972 mo
206.979 255.26 206.586 254.413 206.375 253.452 cv
206.135 252.58 206.135 251.686 206.267 250.784 cv
206.418 249.889 206.761 249.057 207.27 248.314 cv
207.683 247.637 208.188 247.112 208.869 246.623 cv
209.588 246.14 210.467 245.724 211.486 245.296 cv
215.488 243.795 221.337 242.08 229.043 240.17 cv
236.86 238.222 241.838 237.319 243.909 237.389 cv
246.686 239.054 li
245.706 240.524 243.924 242.08 241.465 243.682 cv
239.094 244.6 235.862 246.101 231.692 248.147 cv
228.099 249.939 223.264 252.526 217.172 255.805 cv
211.778 258.659 li
211.016 258.492 210.261 258.286 209.573 257.839 cv
208.775 257.341 208.067 256.695 207.546 255.972 cv
204.948 230.953 mo
204.699 229.996 204.614 229.105 204.777 228.184 cv
204.909 227.29 205.201 226.391 205.703 225.605 cv
206.173 224.827 206.807 224.127 207.651 223.532 cv
208.277 223.101 208.954 222.762 209.806 222.521 cv
210.677 222.311 211.68 222.183 212.828 222.14 cv
216.814 222.14 221.65 222.498 227.329 223.19 cv
232.971 223.906 236.86 224.71 238.993 225.57 cv
241.465 228.611 li
240.999 228.95 240.508 229.238 240.01 229.467 cv
236.815 229.938 232.555 230.758 227.371 232.081 cv
222.521 233.287 218.089 234.542 214.026 235.752 cv
212.509 236.021 211.144 235.955 209.965 235.702 cv
208.371 235.379 207.138 234.632 206.224 233.453 cv
205.648 232.73 205.22 231.898 204.948 230.953 cv
206.333 207.797 mo
207.049 205.88 208.441 204.414 210.432 203.523 cv
211.283 203.208 212.136 202.986 213.006 202.943 cv
213.881 202.881 214.998 202.943 216.208 203.228 cv
217.172 203.391 li
223.688 204.62 228.627 205.623 231.907 206.343 cv
238.471 207.898 242.592 209.185 244.204 210.228 cv
245.635 214.696 li
243.325 215.572 240.579 216.232 237.358 216.629 cv
233.971 215.878 229.782 215.221 224.804 214.653 cv
219.976 214.164 215.888 213.942 212.54 213.989 cv
210.677 213.989 208.904 214.229 207.297 214.653 cv
207.049 214.327 206.807 213.989 206.647 213.666 cv
205.703 211.776 205.59 209.8 206.333 207.797 cv
212.828 188.32 mo
213.839 186.531 215.336 185.361 217.319 184.781 cv
218.089 184.505 218.91 184.438 219.82 184.505 cv
220.727 184.567 221.751 184.781 222.887 185.143 cv
226.037 186.201 230.113 188.309 235.157 191.428 cv
239.264 194.018 242.678 196.499 245.471 198.805 cv
247.829 202.52 li
247.456 202.632 li
244.95 201.411 240.889 200.139 235.293 198.751 cv
231.516 197.833 225.932 196.736 218.673 195.306 cv
217.736 195.154 li
215.943 194.811 214.27 194.687 212.714 194.757 cv
212.54 194.301 212.435 194.06 212.376 193.886 cv
211.715 191.983 211.894 190.105 212.828 188.32 cv
220.68 170.134 mo
221.029 169.283 221.492 168.489 222.163 167.774 cv
222.801 167.065 223.517 166.49 224.438 166.117 cv
225.267 165.705 226.208 165.463 227.212 165.463 cv
228.005 165.421 228.853 165.553 229.689 165.783 cv
230.487 166.055 231.405 166.49 232.389 167.065 cv
235.301 168.901 238.961 171.916 243.325 176.159 cv
247.213 179.935 249.967 182.941 251.616 185.186 cv
251.081 189.284 li
249.19 189.284 247.12 188.872 244.95 188.071 cv
241.76 185.846 238.565 183.773 235.293 181.926 cv
231.456 179.76 228.215 178.251 225.508 177.392 cv
224.357 177.03 223.252 176.746 222.031 176.536 cv
220.991 175.451 220.423 174.199 220.369 172.834 cv
220.236 171.916 220.369 170.978 220.68 170.134 cv
230.444 153.329 mo
230.883 152.536 231.456 151.86 232.155 151.338 cv
232.858 150.731 233.645 150.308 234.536 150.036 cv
235.426 149.791 236.321 149.658 237.288 149.751 cv
238.051 149.837 238.805 150.066 239.559 150.409 cv
240.292 150.754 241.084 151.276 241.963 151.977 cv
244.926 154.364 248.178 157.565 251.866 161.539 cv
255.59 165.596 257.917 168.517 258.874 170.353 cv
257.737 178.461 li
254.805 175.972 li
251.934 172.834 249.065 169.986 246.17 167.443 cv
242.749 164.281 239.637 161.882 236.895 160.186 cv
234.583 158.755 232.225 157.837 229.855 157.452 cv
229.725 156.919 229.725 156.398 229.725 155.834 cv
229.782 155.01 230.059 154.162 230.444 153.329 cv
229.561 307.099 mo
232.807 305.87 235.651 303.646 238.075 300.401 cv
240.508 297.165 243.729 292.203 247.719 285.48 cv
252.043 278.177 255.053 272.413 256.79 268.189 cv
252.969 262.473 li
252.87 262.317 252.823 262.162 252.831 262.061 cv
252.87 261.851 252.899 261.733 253.055 261.625 cv
254.573 259.954 255.754 258.379 256.547 256.963 cv
249.733 248.015 li
249.641 247.851 249.61 247.719 249.61 247.517 cv
249.641 247.338 249.704 247.206 249.834 247.112 cv
251.081 246.023 252.153 244.946 252.969 243.837 cv
244.788 231.451 li
244.741 231.381 244.678 231.346 244.678 231.264 cv
242.936 224.085 li
242.858 223.906 242.905 223.75 243.004 223.595 cv
243.09 223.416 243.239 223.334 243.434 223.252 cv
245.184 222.852 246.856 222.385 248.334 221.825 cv
248.303 210.784 li
248.303 210.617 248.366 210.418 248.465 210.336 cv
248.543 210.228 248.715 210.15 248.864 210.107 cv
249.461 209.975 li
250.116 197.475 li
250.161 197.292 250.231 197.125 250.387 196.989 cv
250.528 196.915 250.698 196.841 250.87 196.841 cv
258.049 180.363 li
258.049 180.363 258.049 180.32 258.104 180.32 cv
265.788 166.766 li
264.458 164.398 261.797 161.015 257.877 156.744 cv
257.241 155.998 256.547 155.333 255.94 154.714 cv
252.713 151.288 249.733 148.534 247.004 146.313 cv
245.51 145.049 244.016 144.151 242.508 143.494 cv
240.944 142.809 239.428 142.405 237.864 142.25 cv
235.807 142.152 233.877 142.315 231.961 142.891 cv
230.113 143.475 228.448 144.326 226.943 145.505 cv
225.508 146.656 224.318 148.13 223.439 149.751 cv
223.439 149.725 li
222.498 151.451 221.946 153.252 221.856 155.165 cv
221.751 156.18 221.829 157.18 222.031 158.285 cv
222.031 158.417 222.031 158.587 221.918 158.755 cv
221.856 158.844 221.751 158.954 221.58 159.012 cv
219.485 159.871 217.666 161.104 216.172 162.691 cv
214.834 164.142 213.839 165.783 213.146 167.552 cv
212.54 169.369 212.279 171.228 212.435 173.261 cv
212.501 174.626 212.828 176.015 213.403 177.314 cv
213.497 177.489 213.497 177.652 213.403 177.828 cv
213.349 177.995 213.217 178.119 213.049 178.216 cv
212.714 178.352 212.357 178.523 212.022 178.706 cv
211.999 178.706 li
210.677 179.406 209.479 180.277 208.468 181.261 cv
207.138 182.514 206.135 183.949 205.384 185.555 cv
204.614 187.196 204.206 188.856 204.1 190.615 cv
203.953 192.509 204.229 194.301 204.812 196.09 cv
204.777 196.06 li
205.201 196.989 li
205.22 197.168 205.251 197.315 205.201 197.452 cv
205.146 197.588 205.069 197.744 204.933 197.833 cv
203.377 198.805 202.027 200.042 200.915 201.508 cv
199.792 202.943 198.99 204.53 198.555 206.218 cv
198.021 207.941 197.862 209.702 198.002 211.457 cv
198.158 213.332 198.679 215.055 199.507 216.738 cv
199.507 216.762 li
199.838 217.407 200.176 217.956 200.604 218.578 cv
200.674 218.671 200.74 218.838 200.69 218.963 cv
200.674 219.13 200.639 219.305 200.542 219.402 cv
199.507 220.522 198.726 221.693 198.138 222.926 cv
197.509 224.259 197.081 225.605 196.932 227.025 cv
196.656 228.95 196.758 230.879 197.255 232.73 cv
197.808 234.632 198.679 236.339 199.955 237.88 cv
199.955 237.906 li
200.674 238.875 201.607 239.762 202.704 240.586 cv
202.868 240.656 202.934 240.757 202.945 240.89 cv
203.003 240.987 203.003 241.124 202.945 241.244 cv
202.934 241.423 202.868 241.547 202.79 241.597 cv
201.883 242.403 201.109 243.278 200.542 244.172 cv
200.507 244.172 200.507 244.172 200.507 244.195 cv
199.453 245.767 198.772 247.517 198.434 249.375 cv
198.115 251.262 198.158 253.122 198.609 255.038 cv
199.099 256.901 199.861 258.535 200.954 260.059 cv
200.978 260.059 li
202.07 261.554 203.466 262.861 205.108 263.935 cv
205.22 263.997 205.279 264.176 205.36 264.332 cv
205.415 264.564 205.36 264.713 205.279 264.83 cv
204.933 265.366 204.645 265.833 204.451 266.245 cv
203.634 267.917 203.155 269.683 203.039 271.612 cv
202.945 273.386 203.214 275.104 203.852 276.862 cv
204.419 278.581 205.36 280.191 206.586 281.623 cv
207.873 283.062 209.358 284.244 211.109 285.138 cv
211.21 285.208 211.318 285.271 211.396 285.418 cv
211.428 285.48 211.439 285.636 211.439 285.768 cv
211.439 285.823 211.428 285.994 211.357 286.064 cv
210.817 286.958 210.366 287.832 210.043 288.749 cv
209.413 290.655 209.188 292.6 209.358 294.442 cv
209.421 295.222 209.538 295.968 209.763 296.706 cv
210.043 297.804 210.432 298.854 210.988 299.81 cv
210.988 299.856 li
211.825 301.498 213.049 303.038 214.555 304.337 cv
216.133 305.636 217.892 306.601 219.82 307.254 cv
222.031 307.962 224.275 308.164 226.434 307.9 cv
227.5 307.744 228.506 307.472 229.561 307.099 cv
f
353.512 191.548 mo
353.137 192.575 351.614 193.026 348.915 192.804 cv
347.809 192.73 346.651 192.528 345.407 192.271 cv
344.278 192.042 343.252 191.704 342.334 191.33 cv
342.17 191.167 341.844 190.809 341.284 190.206 cv
340.592 189.354 340.258 188.799 340.311 188.468 cv
340.848 187.853 li
341.122 187.558 341.284 187.368 341.502 187.2 cv
342.092 186.71 342.708 186.617 343.368 186.85 cv
344.917 187.368 346.534 187.741 348.331 188.079 cv
351.077 188.545 352.563 188.799 352.663 188.799 cv
352.905 189.036 353.17 189.459 353.387 190.098 cv
353.588 190.692 353.635 191.233 353.512 191.548 cv
288.143 168.104 mo
285.256 163.873 287.108 162.29 293.588 163.484 cv
296.614 164.577 299.282 166.269 301.467 168.555 cv
302.424 169.474 303.061 170.652 303.489 171.951 cv
297.952 172.697 292.833 171.391 288.143 168.104 cv
282.411 225.979 mo
282.69 230.295 283.725 235.041 285.397 240.146 cv
286.969 244.946 289.006 249.777 291.627 254.696 cv
294.131 259.479 296.846 263.771 299.678 267.552 cv
302.68 271.479 305.536 274.42 308.303 276.574 cv
304.991 274.358 301.514 271.044 297.952 266.852 cv
294.436 262.667 291.153 258.006 288.143 252.879 cv
285.063 247.61 282.542 242.321 280.606 237.075 cv
278.59 231.447 277.409 226.333 277.02 221.693 cv
282.411 225.979 li
cp
266.606 147.402 mo
267 142.965 266.34 138.648 264.551 134.479 cv
263.331 131.628 261.278 128.271 258.391 124.402 cv
256.827 122.379 255.754 120.906 255.116 120.054 cv
253.973 118.405 253.016 117.007 252.338 115.739 cv
250.629 112.622 249.967 109.682 250.395 106.901 cv
250.629 109.639 251.819 112.503 253.864 115.444 cv
254.75 116.678 255.809 118.022 257.061 119.432 cv
260.647 123.434 li
263.883 126.973 266.161 129.847 267.53 132.06 cv
269.739 135.455 271.014 138.987 271.413 142.498 cv
266.606 147.402 li
cp
359.135 182.774 mo
358.249 182.047 356.436 181.604 353.69 181.428 cv
345.002 180.794 337.34 179.363 330.838 177.201 cv
325.307 175.35 320.354 172.873 315.918 169.766 cv
312.831 167.56 309.51 164.717 305.909 161.108 cv
301.833 156.861 li
300.153 155.196 298.831 153.928 297.827 153.077 cv
298.395 152.805 299.522 152.824 301.055 153.158 cv
302.292 153.427 304.065 153.967 306.499 154.769 cv
313.569 157.172 li
316.424 158.094 319.124 158.934 321.745 159.591 cv
328.442 161.337 334.292 162.025 339.286 161.711 cv
345.647 161.197 350.868 159.008 354.889 155.087 cv
353.215 156.18 350.889 156.923 348.028 157.281 cv
345.313 157.639 342.381 157.689 339.286 157.37 cv
336.213 157.079 333.303 156.584 330.682 155.737 cv
327.983 154.924 325.954 153.87 324.475 152.68 cv
326.405 152.68 328.489 152.357 330.838 151.797 cv
331.415 151.657 331.997 151.49 332.565 151.323 cv
335.512 150.409 338.561 149.172 341.688 147.554 cv
344.87 145.905 347.809 144.042 350.432 141.915 cv
353.247 139.64 355.557 137.306 357.338 134.875 cv
354.055 137.987 348.129 140.842 339.588 143.498 cv
332.69 145.672 325.774 147.224 318.86 148.208 cv
321.038 147.138 322.368 146.453 322.889 146.119 cv
323.729 145.586 325.479 144.217 328.17 142.14 cv
324.77 143.623 322.141 144.563 320.221 145.034 cv
318.049 145.543 315.334 145.816 311.975 145.816 cv
314.411 139.717 316.192 131.799 317.272 121.972 cv
318.245 113.263 318.471 105.178 318.049 97.6392 cv
316.915 101.76 315.475 106.15 313.733 110.874 cv
311.975 115.739 310.047 120.419 308.04 124.873 cv
303.452 135.187 299.188 142.58 295.338 147.005 cv
294.047 147.005 293.02 146.85 292.389 146.547 cv
291.768 146.235 291.317 145.672 291.114 144.867 cv
290.92 144.155 290.92 143.062 291.03 141.506 cv
291.153 140.383 291.362 138.582 291.698 136.066 cv
290.694 136.983 289.293 137.349 287.381 137.264 cv
286.633 137.236 285.817 137.131 284.799 136.983 cv
282.161 136.474 li
280.038 136.136 278.444 136.05 277.409 136.299 cv
275.907 136.629 274.889 137.637 274.282 139.29 cv
273.893 135.187 272.383 131.162 269.833 127.167 cv
268.161 124.577 265.532 121.404 261.829 117.573 cv
259.745 115.354 258.329 113.892 257.7 113.116 cv
256.252 111.564 255.014 110.026 254.051 108.692 cv
251.616 105.314 250.278 102.02 249.991 98.8389 cv
244.926 104.13 243.2 111.79 244.95 121.909 cv
246.35 130.076 250.038 138.776 256.01 150.56 cv
256.323 151.121 256.633 151.657 256.905 152.244 cv
256.866 152.279 256.827 152.357 256.79 152.415 cv
256.827 152.455 256.866 152.455 256.905 152.505 cv
257.528 153.205 258.165 153.847 258.827 154.574 cv
263.104 159.186 267.125 164.009 268.418 166.499 cv
268.463 166.572 268.463 166.705 268.463 166.801 cv
268.463 166.969 268.463 167.065 268.372 167.136 cv
260.553 180.923 li
253.165 197.798 li
253.079 197.935 253.032 198.031 252.87 198.109 cv
252.813 198.132 252.752 198.183 252.713 198.183 cv
252.036 210.523 li
252.02 210.702 251.934 210.811 251.881 210.928 cv
251.78 211.063 251.639 211.107 251.516 211.149 cv
250.893 211.254 li
250.909 222.308 li
250.909 222.42 250.893 222.572 250.776 222.669 cv
250.706 222.817 250.612 222.883 250.512 222.921 cv
249.01 223.478 247.135 224.521 245.37 224.917 cv
247.19 230.809 li
255.606 243.46 li
255.645 243.604 255.684 243.741 255.684 243.857 cv
255.684 243.997 255.645 244.137 255.551 244.281 cv
254.711 245.413 253.676 246.564 252.448 247.653 cv
259.153 256.532 li
259.223 256.598 259.223 256.703 259.27 256.862 cv
259.309 256.956 259.223 257.115 259.208 257.212 cv
258.399 258.698 257.217 260.354 255.629 262.169 cv
259.387 267.723 li
259.426 267.832 259.432 267.91 259.479 268.019 cv
259.479 268.174 259.479 268.259 259.426 268.338 cv
257.7 272.677 253.35 279.826 248.864 287.418 cv
244.856 294.218 242.592 297.625 240.151 300.915 cv
237.561 304.337 233.819 307.939 230.362 309.277 cv
229.25 309.697 227.776 310.265 226.651 310.435 cv
226.531 310.466 226.399 310.466 226.267 310.466 cv
225.761 312.039 225.384 312.333 225.197 313.937 cv
224.687 317.996 225.283 322.017 226.904 325.984 cv
226.476 324.445 226.604 322.539 227.273 320.251 cv
227.927 318.097 229.611 315.818 231.137 313.267 cv
232.704 310.732 234.333 308.328 236.409 305.854 cv
238.542 303.271 240.967 300.813 243.325 298.675 cv
245.907 296.435 247.883 294.622 250.317 293.229 cv
252.899 291.683 255.303 290.647 257.489 290.22 cv
259.907 289.776 262 289.909 263.75 290.687 cv
265.704 291.604 267.165 293.284 268.247 295.603 cv
269.872 292.974 272.088 290.796 274.874 289.114 cv
278.272 286.967 281.999 285.932 286.057 285.932 cv
297.78 285.932 306.756 284.259 313.034 281.078 cv
315.918 279.639 318.362 277.788 320.375 275.618 cv
322.172 273.728 323.79 271.332 325.307 268.509 cv
317.598 262.076 310.139 254.467 302.829 245.6 cv
299.866 242.083 297.297 238.704 295.096 235.565 cv
292.989 232.563 291.627 230.327 290.92 228.829 cv
290.313 227.608 289.831 226.313 289.379 224.948 cv
288.811 223.361 288.461 222.463 288.375 222.257 cv
288.01 221.413 287.512 220.771 286.946 220.238 cv
286.26 219.69 285.303 219.172 283.965 218.667 cv
278.124 216.416 274.967 211.254 274.415 203.228 cv
274.227 200.579 274.329 197.643 274.725 194.368 cv
275.192 191.144 275.456 189.284 275.534 188.732 cv
275.588 187.787 275.776 187.138 276.125 186.687 cv
276.42 186.302 276.749 186.201 277.09 186.286 cv
277.432 186.399 277.743 186.687 277.977 187.138 cv
278.241 187.624 278.334 188.118 278.334 188.732 cv
278.334 189.911 278.311 191.505 278.272 193.47 cv
278.241 195.496 278.272 197.246 278.397 198.829 cv
278.606 203.2 279.424 206.806 280.792 209.761 cv
281.563 211.379 283.297 212.876 286.057 214.246 cv
288.5 215.462 291.526 216.45 295.049 217.314 cv
298.34 218.072 301.6 218.644 304.834 218.939 cv
307.893 219.262 310.405 219.305 312.348 219.076 cv
316.26 218.667 319.838 218.613 323.122 218.9 cv
324.77 219.095 330.1 221.969 334.813 224.521 cv
333.973 229.849 335.917 233.932 335.917 233.932 cv
335.209 231.404 336.057 227.5 336.586 225.489 cv
336.641 225.512 336.665 225.528 336.702 225.547 cv
336.827 232.419 342.995 238.86 342.995 238.86 cv
340.024 234.975 340.264 228.849 340.358 227.479 cv
340.42 227.5 340.444 227.519 340.491 227.542 cv
341.985 233.652 346.364 236.888 346.364 236.888 cv
344.264 234.741 343.135 229.965 342.809 228.371 cv
342.809 228.354 342.833 228.354 342.825 228.347 cv
342.622 227.06 342.661 225.769 343.01 224.478 cv
343.252 223.381 343.866 221.926 344.721 220.063 cv
346.02 217.422 347.024 215.478 347.577 214.226 cv
343.174 213.475 339.784 212.44 337.489 211.107 cv
335.45 209.975 334.159 208.617 333.592 207.003 cv
333.147 205.724 333.11 204.184 333.538 202.306 cv
333.653 201.815 333.895 201.003 334.252 199.945 cv
335.053 197.643 li
340.872 200.283 li
344.87 202.076 347.506 203.356 348.844 204.075 cv
350.284 204.985 351.387 205.44 351.971 205.506 cv
352.686 205.627 353.528 205.277 354.475 204.538 cv
355.331 203.846 356.374 200.913 357.579 195.647 cv
357.844 194.438 358.311 192.466 358.879 189.759 cv
359.36 187.519 359.665 186.216 359.719 185.886 cv
360.178 184.447 359.928 183.373 359.135 182.774 cv
f
181.87 233.158 mo
179.972 238.537 177.386 243.997 174.142 249.664 cv
171.069 255.011 167.776 259.861 164.147 264.223 cv
160.434 268.71 156.979 272.086 153.67 274.373 cv
156.419 272.226 159.239 269.325 162.102 265.506 cv
164.96 261.741 167.585 257.598 169.962 252.985 cv
172.404 248.255 174.36 243.496 175.85 238.82 cv
177.479 233.742 178.443 229.035 178.735 224.766 cv
185.607 217.485 li
185.258 222.144 183.993 227.355 181.87 233.158 cv
185.771 152.458 mo
181.442 155.834 li
178.533 149.208 177.518 142.666 178.335 136.151 cv
178.642 133.65 179.276 131.267 180.139 128.89 cv
180.867 126.996 181.691 125.312 182.753 123.92 cv
183.687 122.737 184.32 121.59 184.697 120.455 cv
185.086 119.482 185.292 118.431 185.366 117.367 cv
185.44 116.688 185.44 115.594 185.44 114.164 cv
185.366 112.715 185.425 111.516 185.44 110.533 cv
185.511 111.358 185.607 112.54 185.771 114.164 cv
185.974 115.57 186.105 116.635 186.117 117.294 cv
186.117 118.452 186.02 119.537 185.751 120.478 cv
185.44 121.676 184.954 122.896 184.208 124.13 cv
182.158 127.482 181.119 131.363 180.937 135.63 cv
180.735 141.366 182.364 146.971 185.771 152.458 cv
167.278 180.102 mo
165.229 181.355 163.027 181.915 160.64 181.86 cv
158.582 182.179 156.4 181.355 154.028 179.578 cv
154.055 179.578 li
154.055 179.507 li
155.055 177.162 156.785 175.77 159.262 175.35 cv
160.927 174.922 162.49 174.771 164.011 174.922 cv
171.525 175.77 li
170.471 177.59 169.055 179.061 167.278 180.102 cv
119.496 201.244 mo
119.218 201.617 118.836 201.995 118.473 202.458 cv
117.545 202.87 116.542 203.258 115.453 203.523 cv
114.166 203.841 112.987 204.083 111.955 204.196 cv
109.279 204.444 107.692 204.083 107.28 203.08 cv
107.14 202.733 107.193 202.224 107.401 201.57 cv
107.574 200.971 107.817 200.563 108.11 200.299 cv
112.385 199.404 li
114.209 199.085 115.795 198.572 117.25 198 cv
117.897 197.744 118.541 197.833 119.149 198.257 cv
119.535 198.572 119.918 198.976 120.431 199.513 cv
120.466 199.855 120.153 200.388 119.496 201.244 cv
201.339 277.353 mo
200.627 275.353 200.371 273.447 200.472 271.526 cv
200.562 269.496 201.125 267.513 202.012 265.677 cv
202.167 265.35 202.346 265.032 202.545 264.666 cv
201.043 263.624 199.721 262.317 198.671 260.822 cv
197.435 259.184 196.583 257.384 196.081 255.314 cv
195.58 253.265 195.513 251.172 195.855 249.174 cv
195.855 249.15 li
196.268 247.112 196.983 245.199 198.197 243.418 cv
198.698 242.628 199.332 241.893 200.013 241.146 cv
199.099 240.438 198.305 239.587 197.636 238.708 cv
196.271 237.024 195.354 235.134 194.759 233.096 cv
194.164 231.03 194.016 228.95 194.338 226.838 cv
194.544 225.349 195.031 223.824 195.688 222.385 cv
196.268 221.132 197.042 220.021 197.944 218.893 cv
198.224 218.014 197.119 216.353 197.119 216.353 cv
196.202 214.541 195.58 213.584 195.412 211.55 cv
195.249 209.66 195.447 207.73 196.015 205.88 cv
196.517 204.017 197.369 202.29 198.609 200.672 cv
199.678 199.229 200.954 198 202.505 196.989 cv
202.346 196.573 li
202.311 196.573 202.311 196.518 202.311 196.518 cv
201.685 194.59 201.382 192.575 201.502 190.576 cv
201.607 188.624 202.121 186.792 202.945 185.026 cv
202.945 184.976 li
203.75 183.19 204.855 181.666 206.306 180.309 cv
207.387 179.204 208.663 178.251 210.152 177.536 cv
210.249 177.489 210.312 177.415 210.428 177.392 cv
210.338 176.824 210.284 176.283 210.249 175.754 cv
210.043 174.988 209.899 174.167 209.84 173.27 cv
209.794 172.915 209.794 172.53 209.794 172.145 cv
209.421 169.088 209.021 166.906 208.627 165.596 cv
209.954 161.326 211.945 157.366 212.124 153.808 cv
212.147 153.151 212.147 152.458 212.147 151.805 cv
212.147 148.34 211.685 144.863 210.712 141.324 cv
210.428 142.763 209.879 143.922 208.97 144.839 cv
208.592 145.248 208.09 145.672 207.468 146.162 cv
205.59 147.613 li
204.03 148.876 202.599 150.261 201.25 151.805 cv
201.043 152.026 200.833 152.256 200.627 152.505 cv
198.438 155.079 196.271 158.417 194.085 162.383 cv
195.046 159.16 195.781 155.663 196.31 151.805 cv
196.431 150.754 196.563 149.725 196.665 148.674 cv
197.212 142.984 197.212 137.43 196.691 132.009 cv
196.065 125.868 194.716 120.419 192.674 115.7 cv
190.407 110.345 187.202 106.04 183.185 102.864 cv
183.119 104.022 183.119 105.58 183.119 107.57 cv
183.185 109.41 183.142 110.794 183.119 111.752 cv
182.982 113.217 182.698 114.607 182.271 115.786 cv
181.761 117.335 180.976 118.815 179.945 120.288 cv
178.693 122.104 177.643 124.13 176.76 126.335 cv
175.694 129.003 174.971 131.799 174.621 134.72 cv
173.851 140.363 174.402 146.061 176.254 151.805 cv
176.811 153.579 177.479 155.333 178.335 157.113 cv
169.327 157.721 160.243 157.721 151.107 157.113 cv
142.687 156.604 134.529 155.55 126.512 154.111 cv
122.889 153.403 119.383 152.657 115.975 151.805 cv
112.624 150.93 109.386 149.989 106.262 148.958 cv
100.287 146.904 95.541 144.801 92.0327 142.537 cv
94.29 145.353 96.9297 147.936 99.9546 150.308 cv
100.589 150.817 101.201 151.338 101.896 151.805 cv
104.361 153.598 107.043 155.278 109.859 156.744 cv
113.555 158.615 117.292 160.054 120.989 161.015 cv
124.978 162.025 128.811 162.508 132.517 162.383 cv
130.619 164.437 127.424 165.463 122.845 165.553 cv
118.041 165.596 112.526 164.55 106.227 162.383 cv
108.854 164.281 111.27 165.705 113.307 166.7 cv
115.696 167.918 118.041 168.723 120.279 169.119 cv
125.165 169.995 130.452 169.119 136.178 166.432 cv
129.129 170.267 li
126.729 171.5 124.571 172.464 122.555 173.063 cv
120.153 173.853 117.545 174.343 114.741 174.584 cv
111.665 174.836 108.068 174.836 103.793 174.561 cv
108.245 176.283 112.752 177.162 117.427 177.205 cv
121.643 177.225 125.96 176.536 130.432 175.152 cv
134.329 173.938 138.527 172.145 142.988 169.766 cv
146.467 167.879 150.539 165.463 155.221 162.383 cv
152.382 168.256 147.752 173.744 141.339 178.769 cv
137.127 182.179 132.295 185.186 126.895 187.892 cv
123.492 189.592 119.083 191.066 113.684 192.369 cv
108.854 193.47 104.758 194.134 101.359 194.387 cv
98.6113 194.59 97.0537 195.154 96.6196 196.114 cv
96.4336 196.573 96.3926 197.059 96.5601 197.697 cv
96.688 198.105 96.9297 198.774 97.3472 199.668 cv
99.6182 205 101.454 208.972 102.901 211.612 cv
105.067 215.63 107.507 219.228 110.259 222.311 cv
111.698 223.906 113.307 224.664 115.154 224.466 cv
116.698 224.259 118.329 223.463 120.153 221.997 cv
121.668 220.682 123.099 219.071 124.425 217.139 cv
125.676 215.42 126.611 213.802 127.282 212.234 cv
130.533 216.629 li
127.313 223.101 123.322 227.002 118.514 228.518 cv
116.964 228.95 115.503 229.195 114.055 229.082 cv
113.555 229.035 113.129 229.02 112.805 228.903 cv
112.292 228.829 li
112.719 229.615 li
113.129 230.327 113.629 231.03 114.166 231.781 cv
115.84 234.119 118.029 236.472 120.641 238.797 cv
123.132 241.699 127.531 247.292 128.35 251.208 cv
128.35 251.208 126.695 242.473 124.837 237.176 cv
127.02 239.272 130.121 242.628 130.699 245.405 cv
130.699 245.405 129.264 239.178 127.731 235.316 cv
129.229 236.965 131.192 239.435 131.512 241.407 cv
131.512 241.407 130.667 236.604 129.682 233.742 cv
136.421 229.261 140.552 226.348 142.025 225.096 cv
144.133 223.334 146.532 222.498 149.232 222.572 cv
150.038 222.572 151.208 222.654 152.624 222.762 cv
154.141 222.852 155.221 222.918 155.875 222.992 cv
158.193 223.038 159.857 222.829 160.927 222.311 cv
172.303 216.629 179.517 208.796 182.59 198.895 cv
183.41 196.223 183.982 193.026 184.29 189.284 cv
184.631 186.201 li
184.697 185.361 184.954 184.847 185.214 184.672 cv
186.479 188.301 187.046 192.124 186.949 196.18 cv
186.848 200.003 186.145 203.682 184.873 207.264 cv
183.687 210.69 182.049 213.739 179.972 216.334 cv
177.852 218.963 175.531 220.849 173.015 221.934 cv
171.284 231.921 166.178 242.255 157.839 252.888 cv
154.805 256.656 151.402 260.483 147.665 264.285 cv
145.321 266.649 142.557 269.271 139.43 272.133 cv
145.414 282.323 157.719 289.411 176.382 293.455 cv
185.962 295.478 195.412 296.637 207.161 296.862 cv
206.955 296.124 206.846 295.338 206.807 294.622 cv
206.558 292.562 206.823 290.438 207.522 288.36 cv
207.522 288.298 li
207.791 287.558 208.168 286.757 208.612 285.994 cv
207.005 285.099 205.555 283.917 204.35 282.463 cv
202.992 280.899 201.961 279.188 201.339 277.353 cv
f
286.813 57.3745 mo
293.852 26.0962 li
294.28 26.2012 294.668 26.2188 295.096 26.2188 cv
296.668 26.2188 298.022 25.6587 299.141 24.5654 cv
300.301 23.4126 300.821 22.0459 300.821 20.4858 cv
300.821 18.9028 300.301 17.5557 299.141 16.4321 cv
298.022 15.3154 296.668 14.769 295.096 14.769 cv
293.518 14.769 292.196 15.3154 291.067 16.4321 cv
289.956 17.5557 289.379 18.9028 289.379 20.4858 cv
289.379 22.0459 289.956 23.4126 291.067 24.5654 cv
291.262 24.7427 291.424 24.8789 291.667 25.0518 cv
272.292 50.7012 li
278.077 52.3774 282.588 54.3896 285.817 56.6553 cv
286.182 56.8828 286.518 57.145 286.813 57.3745 cv
f
271.995 50.6328 mo
272.088 50.6563 272.213 50.6563 272.292 50.6914 cv
275.075 19.0801 li
275.534 19.0801 li
277.09 19.0801 278.444 18.5195 279.579 17.4077 cv
280.708 16.2974 281.25 14.9307 281.25 13.3828 cv
281.25 11.7686 280.708 10.4521 279.579 9.34766 cv
278.475 8.21387 277.09 7.6499 275.534 7.6499 cv
273.932 7.6499 272.602 8.21387 271.489 9.34766 cv
270.377 10.4521 269.77 11.7686 269.77 13.3828 cv
269.77 14.9307 270.377 16.2974 271.489 17.4077 cv
271.786 17.7329 272.12 18.0166 272.493 18.2012 cv
254.448 46.8276 li
252.043 14.5942 li
253.444 14.5029 254.633 13.9893 255.676 12.957 cv
256.79 11.8389 257.325 10.4927 257.325 8.87891 cv
257.325 7.29199 256.79 5.94629 255.676 4.82275 cv
254.573 3.72559 253.204 3.14844 251.639 3.14844 cv
250.038 3.14844 248.715 3.72559 247.594 4.82275 cv
246.459 5.94629 245.93 7.29199 245.93 8.87891 cv
245.93 10.4712 246.459 11.8389 247.594 12.957 cv
248.077 13.5088 248.676 13.8491 249.268 14.1704 cv
235.305 45.1841 li
240.889 45.3804 246.35 45.8125 251.639 46.4634 cv
259.426 47.4688 266.161 48.8555 271.995 50.6328 cv
f
188.863 72.5112 mo
193.896 71.4258 199.562 70.6328 205.959 70.0615 cv
212.777 69.437 219.742 69.1313 226.904 69.1313 cv
226.904 52.0195 li
235.036 52.0195 242.827 52.521 250.333 53.5166 cv
257.489 54.3662 263.936 55.6924 269.645 57.3745 cv
275.262 59.0469 279.633 60.9761 282.752 63.0996 cv
284.254 64.1611 285.405 65.2285 286.206 66.3271 cv
283.887 70.2261 281.073 74.9751 279.252 77.9771 cv
278.598 77.3516 277.711 76.7539 276.522 76.1377 cv
273.799 74.7515 269.934 73.5825 264.987 72.5112 cv
259.969 71.4258 254.292 70.6328 247.836 70.0615 cv
241.084 69.437 234.116 69.1313 226.904 69.1313 cv
226.904 88.8667 li
202.167 89.3223 184.616 84.4121 179.832 82.5278 cv
176.332 81.1372 174.652 79.729 175.095 77.6328 cv
174.986 77.6138 li
175.64 77.1216 176.359 76.6338 177.32 76.1377 cv
180.12 74.7515 183.931 73.5825 188.863 72.5112 cv
143.471 37.106 mo
144.558 37.106 145.51 36.834 146.38 36.3423 cv
171.599 79.1904 li
171.809 79.9604 173.295 81.8975 173.295 81.9194 cv
173.248 81.9194 173.248 81.9893 173.295 82.0317 cv
174.119 83.4844 176.079 84.8301 179.178 86.1113 cv
182.204 87.3037 186.136 88.3047 190.97 89.3125 cv
194.533 90.0537 198.99 90.5898 203.556 90.9966 cv
209.689 91.7036 216.721 92.1963 224.419 92.1963 cv
225.271 92.1963 226.134 92.1729 226.994 92.1729 cv
226.994 92.0425 li
227.06 92.0425 li
240.758 92.0425 252.651 91.0562 262.809 89.1235 cv
267.655 88.2075 271.59 87.1128 274.584 85.9478 cv
277.315 84.8301 279.057 83.6787 279.999 82.481 cv
280.131 82.5703 li
280.155 82.5024 280.264 82.3252 280.403 82.0938 cv
280.411 82.0938 280.434 82.1191 280.434 82.0938 cv
280.497 82.0938 280.512 82.0938 280.543 82.0317 cv
287.739 69.8608 li
287.739 69.7769 li
287.77 69.7188 li
289.987 65.9521 291.977 62.541 292.6 61.3848 cv
292.553 61.3589 li
307.418 36.3423 li
308.297 36.834 309.245 37.106 310.358 37.106 cv
311.92 37.106 313.297 36.5815 314.411 35.4453 cv
315.506 34.3242 316.075 32.9565 316.075 31.417 cv
316.075 29.8125 315.506 28.4727 314.411 27.3779 cv
313.297 26.2305 311.92 25.7153 310.358 25.7153 cv
308.749 25.7153 307.418 26.2305 306.297 27.3779 cv
305.178 28.4727 304.633 29.8413 304.633 31.417 cv
304.633 32.9565 305.178 34.3242 306.297 35.4453 cv
306.375 35.4888 306.399 35.6016 306.499 35.6577 cv
286.821 57.3745 li
288.065 58.3564 288.999 59.3408 289.674 60.3481 cv
289.27 61.0498 288.625 62.1855 287.801 63.5952 cv
286.983 62.4131 285.77 61.2773 284.137 60.1533 cv
280.995 57.9717 276.522 56.0112 270.743 54.2803 cv
264.987 52.5718 258.391 51.2319 250.94 50.2866 cv
243.161 49.3027 235.208 48.8145 226.904 48.8145 cv
226.904 44.9683 li
229.748 44.9683 232.567 45.0322 235.305 45.1841 cv
228.099 11.3193 li
229.207 11.1445 230.113 10.6211 230.961 9.79297 cv
232.065 8.68457 232.625 7.33496 232.625 5.7168 cv
232.625 4.15137 232.065 2.80957 230.961 1.68408 cv
229.879 .570313 228.515 0 226.904 0 cv
225.337 0 223.995 .570313 222.864 1.68408 cv
221.751 2.85303 221.189 4.18457 221.189 5.7168 cv
221.189 7.29199 221.751 8.63428 222.864 9.79297 cv
223.704 10.604 224.621 11.1445 225.702 11.3193 cv
218.502 45.1436 li
204.579 14.1704 li
205.189 13.8457 205.769 13.5088 206.267 12.9453 cv
207.363 11.8389 207.924 10.4712 207.924 8.87891 cv
207.924 7.29199 207.363 5.94629 206.267 4.82275 cv
205.131 3.72559 203.782 3.14404 202.21 3.14404 cv
200.596 3.14404 199.266 3.72559 198.162 4.82275 cv
197.053 5.94629 196.485 7.33496 196.485 8.87891 cv
196.485 10.4712 197.053 11.8389 198.162 12.9453 cv
199.177 13.9893 200.41 14.5029 201.79 14.5942 cv
199.375 46.8276 li
181.364 18.2227 li
181.691 18.0166 182.038 17.7305 182.356 17.4077 cv
183.48 16.3164 184.052 14.9497 184.052 13.3765 cv
184.052 11.7476 183.48 10.4053 182.356 9.34766 cv
181.275 8.21387 179.957 7.6499 178.335 7.6499 cv
176.721 7.6499 175.363 8.21387 174.294 9.34766 cv
173.15 10.4458 172.61 11.7686 172.61 13.3765 cv
172.61 14.9307 173.15 16.2974 174.294 17.4077 cv
175.407 18.5239 176.76 19.0728 178.335 19.0728 cv
178.81 19.0728 li
181.528 50.6914 li
162.218 25.0518 li
162.409 24.8848 162.583 24.731 162.774 24.5581 cv
163.921 23.4111 164.474 22.0435 164.474 20.4858 cv
164.474 18.9072 163.921 17.5649 162.774 16.4321 cv
161.681 15.3247 160.309 14.7632 158.729 14.7632 cv
157.197 14.7632 155.824 15.3247 154.669 16.4321 cv
153.542 17.5649 152.974 18.9517 152.974 20.4858 cv
152.974 22.0435 153.542 23.3911 154.669 24.5581 cv
155.824 25.6504 157.174 26.2305 158.729 26.2305 cv
159.177 26.2305 159.574 26.2129 159.99 26.0923 cv
167.006 57.3745 li
147.334 35.6577 li
147.367 35.6016 147.455 35.4888 147.529 35.4453 cv
148.676 34.3242 149.186 32.9565 149.186 31.417 cv
149.186 29.8125 148.676 28.4727 147.529 27.3779 cv
146.38 26.2305 145.038 25.7153 143.471 25.7153 cv
141.907 25.7153 140.519 26.2305 139.43 27.3779 cv
138.278 28.4727 137.732 29.8413 137.732 31.417 cv
137.732 32.9565 138.278 34.3242 139.43 35.4453 cv
140.519 36.5815 141.907 37.106 143.471 37.106 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (geoffrey) ()%%Title: (Sans titre - 1.eps)%%CreationDate: 14/06/11 16:56%%Canvassize: 16383%AI9_DataStream%Gb"-6l#L%LPqMn9G_c-j\9:7RhDo4P2bjKF+8;IFKdln@8)Fse#V8S]@pjq>D"SI4ILa-F?/HQ@B,)i"^p]'870X&t<pgr/Y5-9>%fk:1`\!O;E0#-5WqWk=$\Lq,:Mr`'Upq$(MBE.Si&'K04<Hb^<\DD,+5#^RURr`B;7+mPu0(dfTe`lJ?o((qdl`8Lr]6=K]k?$:(%I_@`9iT,%L`Q>U]c,nsPQfmO5Ip)-1T:Gn+kHhkZVQZ',cBlRQf,#en$TIHJ.!5ISrS+[Mf>"r2ph"gMlU=)1HbU"sF-D*$7r;,0%pg&c,H[0pdqg/&a27e26gC*lS*PNq/oC&lK2`EQ()MoC;H#WZKk3Bh'pkpg"IeVC]Is88U_(Q:I8bES-pt,O'eG8cHg@`1fQKaaX%:X^!o'E))As8)`Xa+Zb\2,@.Bpa%i"*Bd_5MR9IC?i8Y#Q>cfs?e7-ks78mSm.Jo`Mj*Hke*s<67;?Pgf-r7cFM"rh/@E2q?G&Ec%\QSJ]q,V^g,5Q"4:kc<<>+_+Mlb9=0+\s75I,&QnK`unWc%-q:/ouk30^n;tqm5BkISF$lH?ORTp$OopN\A^RAL$rPDdK"5-gckN%ELPs<q;r3skKE0U?Couo*pij6aeN3J]j@;ZW;H2,k9o0PFK'ieJ#Vqfan<-d)^<P-o@ob@X34j'WqAWAo((jsjn7EFn)#`N^Uj7T%O8).=C!g2EAYU#H,>rD:/6nH(;PS`UpZq0qBcKj@+mT09rZuF2n#t'O4hLX"Nj!j/S*RE41U.\0W:D$+@CHaHRf/GTd^3q1QBsXU%UAfcuk'!V9pPW,$_,oOAJ[dg&UG[*\FO&JANpH\-L2hHYF$di08&+hkbJ,\'J%3<D+R5I`_#HFTs46]>_1@l+J=e"CgCWjk#kIBQ%0qO]/E^m1$nHl*7s.`W?a2cbCCT'T*,iepUn8rHEeJ`2]2uJ_?#7%2ME.B;H%e.`Z!U:XHj4iVSSFQ7A0tok9Q=jaH10tiZoI/VV%8c([_jl1d>_OU*[C10jq;u$nZ_Z-Qe)<$(hgK$Y4`LQE^5%-qU+"bSq8^!J5rl;\A';_'0qNTNpr_X'p_Z-QUI#Ki8+,jIU=B8:"%$3/24134>HN*XFM]jp-37oi"VTGH[Fs3["rTZgTRP9%P:eAD-"LLjKH=j.EVitH#PqiCbgj=%kEW.k'+J([8a&m8<#+$CMO@,sdA%[V%?Z=`r5WFgH4QREOeKEZ(59.kTM)8IbQL3gcI8->&%2A_-E(k(it69B[>dP;SJ8nNZ;HFuu<6A_Yn#Q'38B\rDH(<fG`dEhO2@%"ZmO/Vm>_G3a$Ui=4Rg*[iM`aak0J6HC*4EH21eGaN3IR$8p"ubM#Jpa8AHkG<YEbbg'jE>3D)\lSR)):q+jN9Rh;5VBJ%co.JcI%chi5)fh18gGr9E>2I>]Ng6F%VS+mMC$<M?Ga*[Vor[E=>^@5e7.=ZM)91_b<TCRb[!W"VPPWuRuk?>"VWdja9jI>tCr7Ttocgss.%Zh)l/Tp3bcjj2>:I%Gi1T;hi&IZD+Zs0Aj!ffmMRR\,WG0c_A4_rKdj.]%JLH%0p`3(5G]9Gp(^>PbLu+A_H+:HDpDpf%`aCMME%%5=`E6p\JE8;kc=n;E+-[8ia<BjXL+^-fZ8/U(n`7VfHJR,Ek%T[/DV"jL6$^,4=KIg,c+>1A[c:o@Ccb[D)U%[?,ufO&fh8<0t>N%HIO:dm4e*gi+_K>aI\cK_qN`VI872Z_Y'^CeARkfV'8t*aHppX,Eu36H"."g/Ts=qn+NmU_7p0@m:]hJj2589[2d;g;(kFQ'E+[H%HqV3pfug!)r3YpKZ4Ce93q?l5N0/l_R=j!=8%_UF(/okKp@5hT]LEgAN/ksGq+6Ob>*,B3,*/@0Ki_!?j6)?-/p$NIIo`YRN*L.;%YO[mVV.n,4=5YbH>Q(N</R]rQQ'LIgq'W@L5n3IH<f+8`268*$Mmq@V'hGBVB?tuJ:0H-PFa1!3s"T4Yp?5jN?`B_XRl<s:A>atS%%FP?<j\TS$qASS-Z"*Ksd)2)5eNEgr]`aeI&b^907nbdfqJ&FUd^G*q.Aa3G">(Tg9qK/QYq?lk:^aJFJY"N4MeV3b?K'`Z[n(WO%0Iq+>R9T.d&&Z,OC2%=ap9cIB'75:ZltME4pZuRSa!(B)G:k7Y(QQiEJ"PhL=Z)E]Fj)(pQ)&?k'Nr%*g1_,$fQRMSjD`g/5.8%G%`0@9l)!*]L[:5m44cT*U^Gi";'ajWV3K:5qgq[!55EnWjH`)D_0g@`E(^j7lmnW='N>r:i!fi/k?raJG9Li3#U,Da@<h*o)iBr'C%51l;bR;J5>M*]EGG1Q=-V^&#ZSe"lEG)4bY@LTR9gioY'ZieGlGmI/=Vr]t3(cbAo29acf5ZU94.]>ldGjj;G<BkUU%>;XP*o[Ut%XrLjk^<8@7AJq;Fln_cU#GZC;e%oZnBsm/<UJM3=LsD([&`u7NN)i=^)[/jg`g7gABa8`$^)CA-<=F&npJ`W8#F;&-$'NCLP2qhr%[;\)u@9tD0`M)cfiC-4s3$1Ie<Hh,I)HKL+2>GQM47+ka>gK3\C7)K#,[4F<&nWliIbkap:R,%0VBF?-`cNk6QbgaRFnqH=c<Ud#%)P^0Pjo+W&ZjMN`"$NPV<`)m(X[sU6^T)+Hr>$lRqj5tc5@A159hFsd4+BZr&NUgY<DR3AXt96G_t'O=QtF`g)fO.if$IrtE*ot"%>Qf+"8%_c^6G*R&8EGh4BonT4b=p*rB4]Uno<>du<<RMj^\"b&1.J-EDq#&mW"G1`.JV!Z/[u=pl]I,qGbo+`EcP,H3&2p2o@:OW%9'[f?E69QU3b9[\CcGoKP64aaT199\M,gL:bQ;^/Mp>L=.;-kJ=\ag%Q<*1?q>2Da/*uLQj,V^$^9"`N5%o@"CXH@r%rZlcDLu0V%oAr'KCcZ%l'mc4/^Lt%LRd?qLXNV":0X$H)<7u3HcT6,CW@+_mRZ4_hWc9a0mIl47R7LSF@CDN\2bIf#F?36ulkQ.^A"tBEmTEo$%J"lC'bs(^8ZE7nX3/dAXa;JO%`nPCPgdYJ21Y#S#W,))!Y)[d/?NV%!PfDAeaY\+iP1&W0_H??8(]#SbG?3;\rS!b*>S1a(1DIFI%<P:bB6J_L%WQ%sJ>`)^8Af:Fd*>tJPBu/pOR"g[S(1[g&p?h8hXmalSDqONlB%1B>937sX[IBc;=q`7t]G=`ldWaU].sj)OK;L/3%9i%^r"l:]>L05h\?U*,!kUeP.k-]uae%pUUZa'("j98%l<1icjB$@YtQT.LPe,'KRS7Rh7HV0.AlZ`Y81s5R]S`o6/CW5oZed-]]%+$H6e8$0-C:X;.;Q8A-h]RT*EGL/KR)5M;Y;iYU`i(L)t%W,[i:!+jh@YneHGogla1+SjWKGl'5O2M)"YO:+N0g<5$CfaYM%9^Y2%P;g$*Zsm[:CTn6*(>F)^jEoagg*qEFO4(/m,LNpAO_I-E=4OM[X6I^t)3Z%0$*ud.rX#Fm0[>FK6T%SKchoo\PHCZr8O`PNZGn.=%S,,<jf>+T$DP3Fe&\is3<"8GjgQn*[*M2q@YEI3>4mo_k`c@Br'3:*,!rZIV/E+fj<BDm<lYO6KnJ\Z<,+>djqV?0R&o.^lG3#iR%[I\)*I&]+J$$Y\N--Lg6,L&&2Y+`FefRgEXqL.\<M;!,b*SSeadm)J`AD.Ld:A"8qs20t>)5\#9PKD[)bsOL9+&f'dXRCOG<[?L`%fET_SQnh<"=iK'$,%K=g2B-!mUH2>];kUe_0`"PZ8%t#HCXc]6^P-]N<PhjZeOO)7l-+EPlWKQ4U\&0O3_Q/DT$/E\c0&a]a8=p(%H[NDIAi>eHo2b\0qEORUL^-5V_^^_NU6j,J`p@EO.oh=dQeD!(IfAe)pF[Wnc+h8nD?I;LqfnLo7Q48.Xk^SO_Uhm#&KBlb-t[Um%olmjeR+?k/!c)F2m:^S5d*CfVA4cNL1o:M_Sa<^bOWa4/3!Dfm`gAtKiD49B2"M2D)_c32dQj:=H)eP*X%"lAaArc-B@g5aLai-R%8+Du<[n1*e/4i5m[+%51LW>4/*7cAV.JD?VI/*GJ?4kWZlJOHp?7I!>o;#1jlIR9V]J$k!nT3f\g;!FU6lS)A.9<eF;Xqf49q-he%&j73T+*TefDtIV8/b;lam>5E"^)lhC<:^oqS>!B[XHe`H]Joa_)rh,\j5ak1R-5(C>@Lf]n-Y%!Wa88"NRh[f5[?ESR9>`^bU-p$%>3S5p2LgA*1>^kPn,4dj`"P7^(?mXM)?&iEUAOQ92Ug":qgI"^p4Wk@F&ZN,5o@>VZd)&.`,BYZ%f*1`oD?cHT[=W]YokkR,M+dh%8sYa!TFR)0;NktF^n9:Ec#)hS[7EqGZe:Zq<+WD%Dg=IF=2M7n`aP<rE$"TX*Qs?(fmugm6-]_\V"q5@G%<cHqRoHr/E:=11h+q9%<,Ih1BJn](lnpLZ]^#km1st>ud[tVPDd&4LhsBT:rMeJ=:WY.hYr'C*<c:_!1k+4/Xa:EO;q6)/$s^ic<5Q!&Ro,[(ZcI!iKMa5.%I6lbj9nkjDfur27<5au(+(H1\*lc94//Qjb7/UYa^NmZ,-b,4:4B4nbf>?</q-j"BYs6b#VOXWpB:=UY`kWO+0<L7?H&G/-piL;)%:,T72CW'\ak^&U,QIbtIhB?(UC%On7h<5mj&J,hDN1;>!7m?fte8*j[1dk9M6nGA6<6__3q6rd``r=L!=JO)E\>O>SOfOMJGG^Kd%nicZ[=52UmVWmDcP&7UC[uWqSJ?Qf[loUJKh,QNs&udUhPgP*$TX@61>&LdSl:Z'X?Y+)TgI=O5gZt&Yia6<"Y)106>VC6";Z@k3%BtkVUc-bgdL>M%)g[BLL3jBY4K?q/%laC8nf$$KGeE"@@3q:FSe6f"!=lVVUj:oJ70IGX2M]=S,j+4'ohr?'L"`?56:=(iB>HZ[o%i82n$hVu1W;F=NqC>V6B?S`F`ea[@a8H8Kb0jgP5`0#'kQ2b,fB8LoX4EXsjS,K!WXO3H,7m:Db%o`qGNm[<He*$-$%lSIZ-\od;%q"M;]gbU&Kg5XT:b*$bOR[pZ$D<h&ISsd"`\`V&UH1,_/5Xd#ZA3J32f2uWLc0B)7j^=K.?dsj9&IC!0#aWbA#-oUb;Lcl/2T:uH%PsPikn_c=[\GEQ+H>emm,@;2SSGL7[hJq.Gg)R)UcP#cThe*='\>#4,9Vp"&cFh;*iu)#)`t@4c.(AAgq?]0RgRL,)eaAq&DbPp2%c-:>pc2u@u,X97ci"hdGWGL$/d7+>2Mdo+D2=/$@]Mc*X=^06T<-uM!b5tR'Xm&#nO1<T-m+@p+Vk@Ca9dVBulAM$D<?bYS@pOt2%UbL$((NrmNMIq9mW8bmAe(6n^.hD"p;<$)PF'lU\N`g+ga0G,&Nc6nO-D;r<[[Iu50t4<@R(jrTR<Lo#)>`^JH&UHLZtAEIM`5:`%cd_TJ__Gr+lPWFK>bs2g3?>3H'Ag$?c"3aK\jFTJ-k0qlnSio9#>SE4NOi_"D9$7j?0F@R"EW.NX&5;(g?/1>=IZW=bU?FodF_a/%';fpTamV6B!2j(JU,*SO,g604Z\chL<d$ZJC,t3ohtJ5hrjX?5s"s@)c_jjjrUGsKe2-e321Fg<4oM(C6pjt"]DOnn1lj'^-B@9%%L[jP6\!]M/o/Fm]N`TGlDq<,/pP1rW3FqVTR%>SS1us.qopPXfD`7EPmmVRP8!4lKf0^LinqRkNiK>GUH,re,4G%a&aLP8?S3;$H%,;M9ARZ(T;=deC6Qle`&@oU2VC*0%MP'\@QB==bGLY8*)`Zk+#8PF?ta\#"I*RB0WN(;Ki4ZURR*R9;F;)J=!oLR^IZ_XGd]tk(#%E?b3-q'&2'!rKTWZoeukp"7nc[ntsO1F[(q2O3%AC7Fi;X^BgsIfr?c];ta_P%2<BiL+14gM`T5Vn;HOdH,.o0BBTpWsaGhhAIm)%bNl5#X)I+3r]>W$C3amt<WFKEq<QpD;=1\_^clpja5>CM^HB9-YC:P@Fo1mAQZ'$MI^/YDlC6npX(u*^^0U[9Rt"e:hY_EaMa,UM%X6[*9-c!^JB<C[gp?ZD%HZJiRQTs0YnbL<"EZnf<_u.o2Ie`0FjdW=:MtulrY$U"W0,MgHhCPi`QOBd7FSYn+r9EZR[&^qp(FPQQ%(]XBnqX'(8q""@Do&P,5j`e?3E_4Gt92g*6_r]"Zfmhf*DuU>489J:2I8;^qW5]%tSD8M$fKW_L^4(:8Qc&jL]DV'ha_UfZ]O!3E%mH(t!fTA;niJq68!qC?FfY>.KpYFi0X/kh6><"n.BKBdEhV>h40DZqYM!#g\?XN@+QbU;"Q/&aejl5:bk3NQ-g:P(E]\QHP%D%]t%:9JN\hVBk;)M($1c43Upcd.EUhgTcm\j:hDF7le6C#qOSq8:01=6F5b/jO7HqqU%pR+LTuo$n9>DO))'eK!0)c.V2o,'2mli*J1e%X,FGgmr2aVAoGCFk/slRS*=]tcm&pIn_tp@F'S'=%U]6jR)0_\rEh4,EVR$C!fQj.IkAsl0)tWP-YL@hGMZQ8Qkk.Us*EkcG5gA>%^elFC"o9192!(]1F_^PmDq^fnVShY33hD?P0Itu`(L<cMfbIRoF*hesrZ8R:GN=e_jJg:^pHJ@C)K2Lf#_+_HkP+oUrC&^?R!Ne(%We:pm80Na$.fF3m0C4IHE#=W!mr=klM`uk4G@HL[k#b.dC2o=6m`0s)(m!ZrU&i_^&6"Q;V+cA3K!a<+qrrY1*i>]SS>Y^-Q5jq@%.X<D.>j61MH[.gtjMQ@5IuhcP*8-0*S.\IE)<dL:kjMj20*eSi*1,\H<C^(Z+LR/SU1R$"4113nYtoi[.VY@ER$NdKVth*3,gi11%8uo(Vo![Ecg*-DXC<(\MT%ij`1iJg^g<4hs@t&95DeF!<mpPU'&#lbQq\-*:h[fU(T4YL'pC$ZDp8Q46rr0b5iVq7(nH&%,JYOM$%#Ee.CP<()soq3>l*UEm$Zu^22E-)*SRldEO3"0=5V8E_<M>js$]q,2nA#)q&8E"5)"X+'p"X+'r"X+'p"X+'p"X+'sKh`%C$:YFH%Kp`cC$;(^r$8XF'Y7Q?@O;OK"_bSKF$tY,0%L6J4/&Y6h@UO6?`$",+`3@/3.No$?"sX?a_b:Q*&V3C]6js/X`/u$_"I/TR,DR;:%Lm]7<5RpI!,:Rj`L%k+k6R@JT1X+p!LH"QJHN6@ejUO(<(k6cP;&G'rZIg&ZK#)HD,Mkd)8fI]BU`mZBZer;d*FKXu]L'-InU%f8%;$'T-g#7l@UQIF"5pS3!M=HP(o8K)2N,&uum+e9K@iWKL7T)6E;L'@h1a/0UpX4sr9EE,6EeR@Q%)QFA1lR#p'FV6@-p*&P(^7c)%%bfY4[p;`Z7pl"7B2&YjVg]<[b5U"QqoJSU-[/TdqU$51\,G&cj7e#iGRoRVB/nX[fWBV(<t=nNUrNR#*p9gb0_^^9O*mM.qVhG4%!<ARDa2GM/SZZoGNtP#G1B*=QdE)=7_9q5hdF%IoA3BWA:(,/?\:W(fWU"&?RZ,MkZ/ZUlID(,)9#J#?'CA3JgE[-..GlI<Hb^F;%d,2K,e&"fm*dG*ag"2]XYlATR)X]rMo!t1#hba:M_lcCq1@uag#\>CH/'<ti;9N1gBWE"f25@9c[+1,DRaG.lg1j+OdZ!Un]DT=1%eAds)n^ZaegVl,7-^Ua,'TJ_s:QaD"IWUn9!8mP,MH2\7kfQR@UXf>-m+]_Fc-:9KH$+:)s5S<l`-[EAO0CO3XdZ_!o<rDj<mBC!%H!<.EX6+9L]T(E'\K4`"S$ZBm0O<i/(So1^Ksg:Do\Sm,c,N@a$bJF>H9]Bq*r7;hlTW-U^84hm9dC]R$JDJhB@eNobBKb8oj8N_%mA?kiKlajo9,Vr0U*)!ZU]T>^q=UlhZeJQZ`P;>d+9.aXrHBahb9ARQ=T$qRR23!:r*TFg5Lpdf(s95Q`ChcT>)0/4p@QQ&["u"\%mdTt`c?+LRYB/'5VS@VXDg\Ab%t9Xb>AuUl8?An'C=>-/PWmS8hHsql^O/h8.!rjBZU[[gFWeqTn!_:]BZ/HCV7mVnZnXS5G);hB%6Jeh%(ESd*q6lbrTrmg%G7&3GbH;4Pa18EI/>dn\e_rr+*HS'6(':O)A+TpTBE]RHVD8='9FIWQXkBB`9p>A4,1=t]9ACDeEp<i+%(e02ENdE>uEf@VjUs*:r>,Sqce#p%%M&6B!80`S;MiT5:;35@/D:cC)(THiN"1g+ud*itSiA?Or2,Ak$DMWkmkf[k$(l&mJ*8N6(%LUgI'_(W&Pdm%VTGf\$Jg'&=8d2OOAQQ`oM.kBP\Cd>\"%CrsS5-]BEIZ-Z5m;.\l6#06.RodIa>i*^NEYaXH6JG#R^)I.(WAINd%)>u?PWH;lQo"D+95Dqo`eqSV(DX^1MU7WaMKf'J+B8sS@rQ*0Z"4<i,FDYE&.Xg`*>\ZJUMa%V^kPsNDp!8"9nm>3f],fItVHqem%6JQHl3It6n&q^QfoTlA1c_WUKN)LLlW,9#k6/b>LD<NeD8&g87Oea6L#;l7n@n.nb93>ujZAI.K;>oqD_2-6O`/+1+RO3I&`rdju%SK8tn.ft&Fah.&\0jN+c6Eda&;j'"c`CmHD":I[]`MetG_;Q=,7[":>)JJ3Z6&nBu6U:GuT<jm7D3_%XE#ImL%N@Z4h8!1qOVs`6%c%\HpWJ02YEP%gqJNekgM5Fd+&S7b6Pm,^[UpDTl7+Oa_mrq>hTrA[JL/_XiMS"Rs68V.:.%uMT6,`4*:.ZulUK$lmB(-nr,G#&n%\P2m"ph9+#;K*D*HAg^<oE_!'XDsrb@`9qT]:QAc#`o>38%TEj[ucH-0'MB(<i$Hj"$,uKWJtRUfA/oRhh!,7Rh@OV:hfMm_IV(1%ALbVg@jm^^+J-%ji;F4O7!mj!oJti]GFAqVK"dK!4jtIS%NQm&8a<IA(5Xfp(%WUclCQ997LZFcCXB<NTZn[M6L9<(b-D-o>?&^u%4qi"W,YO9g)gr/e`$5Je$/k'[R0eUC6`\EGBQ$$tbIS-%VSlQ/l$s%1-^N"q6E#V""g\8+r#1Jd[,>p<6DYEmmjDp'*uA[Y,WXSp%ZD()cfH4;%KY#Y[aUm0'Se;Pod9`)qAh*#.WmFhkL.R*%9_2*7AB!Vc<EaV_iP\'^"r<$?.kO;\>f.hdc\=$rFSKJU`umWC`7M\$%$E*j+Zk'OR1!5*1r]lYmD?aE5V_pM/3_Sqa7nB\!9P'2S#G35X"O.;I"AW'Rejo\H1fK)9ZoEV+9g:?UPP[`t#pR"/TGFIo,aUc;%&<=+r3(R"6PQ>sU-W<R6`1`kFD`S[GN+7HjZ%3?7E\BPGm)CU):NDQ.Unj8$AlDPr>hW[?$&Sq0mi\YL<g^B2I?&W:?G0.h;*A_O%;%N?I0k5Daej*gaGVH>G`E7r,6&(IM[nENY3ZfQoU-gX1?=8Xb,'0q(''JkZ-u6gd>@49P<i(b8CibNk#&OGskFj7R&=K`^l*^@E%[$gT$RFhUU+Bt5uZ/iY:b6$pWGhmrf0gro+M8jikEJF;\WA*It_d#Zd"]q5g2Yq(RLH2#nJIF8HCEjDT2%hCiO*tX2d'6]@NRc`b%T?kQ7GGtGMb0H(m.NFY*fIe_!'F*^2<'Y%WCB6!bYW%]PA0PtH>+l#W%:lJK.=A1]eQWi(m/1=U(q:UO`Bs]JJP+/kWJd*MJ3UC2%k:=_-c\.E(Q6Y]3OD>(p#G,;Y_47)b("EA(,W6:NJ&/05W*WRK&fjdQ\M$"TWN^CbI:G;aPCa)`J8$ot'm^_ckl>So6T7<d8!Z(j%rhP;qMjd5FTgZ2@9WJl47l2I:;dh80"pJq\^lZ3bE>=\n&BW9:<DGU'lYtTW(R1^Wk^Er'd[ChU2TS$D:4b-@_<3KZ:L)X"TCWWg%U*5uhK<ZT-<VCF/N#0sAn8f2!"?eV7^K7Fro:%j1,J)6=67#dD#oYfe>\O3ZPg`4t/LGFs]8K$HJ52>5>of5@j6C/jg/`t3$bm4M%[qF/8&K-J4p2lm6h)n#nB8/h`c=6Bu*p$W%+9s6I$)@Uu,HIV_P@EI\FDO;9I&L>Z_e*Id(^O?&Ui(^%-O>nO7Jj=8.L82e5:_BY%DaPcJZZK^b!fA2TZ_TZ7XGI3_$ehV(A"UBPMQp8l+0DrV5,F<M6Y$0lQ..d2Uo;s8%4@<PACZi8RMQEZ.k+H%EcEuV1iq(oka>=J%S#>kJTl`_4+g_P0eO[-4j\2tVOUd2nR?T8p"$P^EN!9pc)+t2pgR,\p$Q*hBqFjp,c]:J?'0Ch[(@"X?*LM^&1`-"F28Mg%lj6k&%:f]ChaC*^T,3$BJT*@k)5\/7-M-U_4Goh93<e9@Vd&(OQCSV&.3Y?)u"ib[YCf$4&*O-mVF\oIi=$#,EZ)lLflY;i2M@,_7\a,Q+%O^bG)[X6t4A>X_;KG?^CE^uS4Vo)*U6R)lrcVP)5eb`+XNu?O?.A0DpVWa[-6b/:Q?ti,dR2.\h$#0(mJdiFJS3O!i":kr)Qf3%;%!>t?p,VPJS#Ee4T-Y7;A'R_;sq>;Vf\>:`I)(Dg."@c<AOF$kH&7suhg@aZfG+>1UV29%^c5])U)Pmes#D5>a+`/=Q3laos5Bg4C%n@eM6ptjMc%F&s'>-r2b7rVHb>?WD_*YK/Xegh[gT9u4&cJ0P#kU9qRCJi84M@!(>:a7g8%'c@Z]^`>FpnEt<n5_#GNLRjQ.SPG.%'"Et>n\G'n["/;qBg69PjOE,7'cn.t04%",=>Y14./cOI'.F"4/MpPXK%SLC5s/aiOq=AuBX]Mi.<)b6P_`/5aUSLQY`FBM%(pE9%ZAc[srR7b)cQ4E-Mdd*Y[`/`rg7m%;E&=LhVSrolA$q/:2S]dK5WaZ?H**0#5bB!:#\^'>rB4Zr9OZL-TVK$NolW#*fWQRefKgXa%9`a,ZUg.uGIhi>dl]/!Y%\5<k9lM[PkZqR:E43TtAfJSK&i^_T(BU+gORqi$aW=5FIR[0nfXnt7)C\k6"\?2q:f&,n8/&&i@UO^2%`ebRA_+r-_</<G/#^t+:;1p(rg,%@r3\UF[Q9j=qd&0r2`.:r(I(caBlG1f(_Zr.[E`"u_L^fAV#Z:of%sj:Tm*1,oG%]J=5#0FY%7Z#0Z)adl!M`"NpUu4B*3\Aq0+@4q@nZ#IOHt=[uhdg%k=dr!I5.J-MV1BO'CXfF)TB\gI;h/)tZdY:&j`j<s<RcYeUiT(IgB]ue%*Ze<7hXSg)[Sp`Pg+#1pZ8`;h1H6_SPL2+,m'.nk_?;6]3?j(u'j0-M<P:$s1P'^E`j@9%TCMtB>BgAlGUGZ!HST?-&]YAN))gBt%7YXeAO%TTVFR+X02Kn"jdI9tBV(oFFd&VG&TZHsRW]dt)Ue=na!6:b!_3'$fMM!p#YWC#6%Kgr#682]n<IJGF2:`FI?IEFp:9u+/%LoJg$7'VG]'mO=uj=5">?_1aB#H#kb5(nQOj#+3IYim:\f20#?5h#sKaI2o=?*Tk+l4*FhL(6<^:ap)D\0)"rUEE%OXB!/EVd7/b%K>ql(]Z"CHBRUWi1lh^\G\!BII30A(ANbf/eu@oLYT-#o&.`jsp@e`sKdMnbj5k1@DuK,[<&gplc>\V/BD\ca\]QPAqXi7T=pFk(%TT`AO)f>ft^kf4'Xc0(5<68[Y<p[/8FXi9!PgL'FeQWtmrBIt?/$R).&#\%EZd<=P9Zo85HpJ-HfgFFeI4J!1D\pga)fZC-Y"1Ad%23aA\&tQ<%XQO:@9uf2eWl/P;eI5omV>#-_&id,$X+;a9"?]92$JLa[(if&$HEBAnXB]@cApqfA&Z`#4<G4'&=pWEF<"-R(/9l_U%N"RB;,G[>F<q!XH7'$RK3@\MbOY'dPK`o'``TU\Cp%P&:k9;p#OXHD;*07*4TF1$-A63R4"i:Kb]<Z`/=?m1P8:Y`/;BHe/.2%P\%i\2(K`ks>OQ3$^o8T";D&bC]3"VUqi8WImYj"B>J_7ihU*"SF(dSgf:JZ5k>HocG@^`P#,C'rcB@=CrZ#_rV*As%ERoGK,$nJ@]N%dg"WtQM<n#X\dXM#k3,f[X6(U<(M]F%1Y"`;sPr/m&>"ofjH8Q_<!,m=+YUefS:Kk;%tARnqED4$tEF&@:DVjQ\CNCEMb^;`D/.2%PL@R.>%CA@fE.iS,C1rTW(%a_<-.%%bQ=LUP#*d),W0O<%Q(IYg>].S+Z)`hb\%,B-YJ:hYUSS-V[CGWih)n^K#<g2q"bQRa(#;P%6t%/YMd#&!bAt*2Q3+=b0KR`)XI:W/&XKI(!'ZT,n/U*F`(sGLGh@(nl9^-n@;q(N4=Z"**CC@R+O1RnES(e!,2Cg$"JhcH\3MDN%925Xa?Ig%"H!RMk<`t_eH=<[gR(,s\q1S@*fr2u[:$+=FD&,&0XK!s;?Z5ugaY$OAA$q1&("h*=/sBCmQ,aJ.9H1eOqOYrPdGu2o%]#*HHU4Qs]Y[A+&7DPYldP!&-?p%H24!A'%r=eu`euj6.i?h*_&_(^dc&#q\:E>9eAo%#U:+GRQ!TB=gMR]#W8c3SF^PEI]Z,eo+%iRlmW.M:nZU7oE"LlkB;"2[?hJb(0rdFElj\fr=YX91_1!(SE&er!X79SdZC-]9g3ha9I8)D6_maGLl&'BcIdA!$js$,+.kK+[q-%3)b@,&nK-?3CB'T2D`n;0O*PXU<Yd-kLnt<ecT#4/SVMsB:`K9(CWGE]Z(Q9d1(/Yo*e_4_-'3-"DsrnI=c\j<AmjN>amL.\"PD1%0%<M[p)"E1=<5S&%]Fqb1\>+%bgTJ3WSi@N?2urb/&J0jQF(S(Rl[bmBEW^CSa\E.Z.',UOdbeG6f]Z,RPN^MBOS29KQ/1\[KlUK%@K=cdie?J*7h?Fk1Nkf:=X@D##T8em#$@k?9#9=^aq+l7)%CITHc=a6IR#g?iR39e%#b8V`ocWS+=]6=H>)bldNaD(-j-RukKR8q%aI$n_lK:DibX0rJ\Z%]1@fI/?d$+;uD-:0HP06c7R*d):BI,u-E#XE.fUer%-N/lO7WFq@2:%Mu#JZ7['1nG7VE"el0m),kGW`=m%do?u4Jl"cU?n-'VS0^h2*";CQ&S1B((^rhm![:<o+;9A6)8j90\B,<"S4pXtE9^"=8ut8nM'sU/!""]EC#(M[C(Xu(;@WmKkS5i.%+9l[SA.1dR7DMns96I("ELqKH":P__HeJ`\>kmY.TqI7>:Lk@qJ<k97Tgaboj<_%$O>XNXo6B8F(&+J`:mWF=#Dtm3#Mq'S,pNs?%K(gct86?N?8s,6U7$suBGfhQ[%%WlO]]OHX6\Gj`l6PO4Oa<O2k`Rp/S.:*V?jE]]MN/Lb<\Zlg4#h+sRBg*o;BR2f7aLkG6F%^p%B3#1-U>^M1&i>V7a:J^]ie>:>76TFGa>a:t[;<AgS2b#5+VO7*+[@D9_.H'(E"p;;T6\Wd]GI.UVkRVm3*9CPD&2oAiBqOV?r7>H%[@!FO-e(fd*&0jI'p>/OK:IHGl#MA;+A`Embc1h$R>K!"-ED43e2-/M\uilunE(q?VVGA(PgVs19M<:+M[ILN?rnNW#cW:q`-'cS%m]V;pWY:^Ca-SDhb5qeiQ4,e]<-&=<lHcf=kSmZF+`WP,4=['A@Um(H61li);L)98focNbVdX%0%@Sb4BS$-4IMP"hm+WUT],^0A%"B=@Jo&;8\NtZRTVn/Vs>fZK3mo@%u9?4ru3Ti0*Fs_?UF%R,Cg=#m=@RTQhbNA.t+2dp"]tE*D/2:)2]P`HbaV*?$36C[_@W:]6%$CWJ&F)]RDiD"q:f2YL(0]@S>:@q<%_-h!_NXaRB5_NH!n,+$#oT2sime@s+,_1emh[/Z,,:4*M?U8/(XQFOhEJ)7<rsafn5,t`3%,HA7ciB:WL)7teFqjBfb,*#5bia>M>s,kP@p*^X<3RsC96.hCGeAZT4Jj'E,,b'.<RpTk=q)j5\*-"MEDRtobf%6%fK:*lo$Y"oU%ZX4?%@Nk>!h26Y7.Gm(*"d0VETtm\2Z;MQ$-SbU*`Sh*;s!0'ACOt@NF!2idR0rOT_u[*Pi5b?3r?2"p5b"Q8ZZ?NPe<@2VW]mQZ%T4Hq58iQrF7`8qe76&CFq'3umZ%#kE/rIJLiJL*NSYdhZ4iu*mTcHIIJe_#o-aIcqf'.NnH-`6a3-J5FE`95r/'^2t#h);b=kY7s%A$P2/T=sT2S1N=s@4iEG/*`YSjuK'"H"NVcOJb6SfCOR@$flBJ$?J)mS`Y`=<Nt'n-(toR*f/t;pour!Ce[YfU!\]dP+m]4K/-*s%%$,jL"YV#@YEQ"'-NpJlHHre(*;q<QgA!9p9IZM(M)<'"fS.?adcik/(2_Q6X.%'=#mq!/]Hh]&Lb0Hs&.;/4NcitqrDehq6Mqj:%#h5tbcbPC`;,$3Yr]5$UYTd!H9nb'69nU)'SN)`a!1gVC8OM8'#]%7+!'++)TZOP3a[6m)"@3ksn2+nb0et;SL>4c1Lj2`hZhUN$%q?8d8/6$Ha,9qorAfY.R=%fCJ\0L@]d9<?]8NIqbI:3YPNl+T-V^,srbZumA15jYELlP5*1\MJGV^0YuNpb/[,>%67dj]t9+Vm"j%Y#MWQi$<[".NAhR]35ABa=a>)<Ii<oL^2B4=RN#a\cA7ESf#hc0(@cEf7SrP%%TDK\M>kS,32Wrj<EG,]V``>HW^t9]\_4&K?e.J%6=P)*B(BG!-T00L:>u<eh\Y`tL/eSoR_u2-6?[cM'5*H"ClN"n>)@Z&'=2h[W(#,:crAS\YT+tFAN'@A6l1rkj%AVa+3+f*:,lkt%EY-5=Ec*le$+5T<nmT^b)n'H%2)8F"U`-P^$4010e(qc3]nP/3<FXq"@LefOa\eqcc:i+,kp'hB:LG7[^+ndjk>cR?$>(^7S$E0e%ptQVo(7H=t,tLM\L&F\Fg`K\je=eIV)(V)D3(0Jml'uu9o?K)TSB<hZA4bqqs155#FC*+\V"<#8PKp458NK@Nn9WMCE\k_2F3*2]%ko:2MoqZZm(gm?4FA?jVGdf#j>JcaGF.@Ajq-oY4Nc[#BQ"?MIfj^7iNpe78S:aWAdOrd9kHHk-]9@>Ce(pg@,Y3tfk8<`VFD`OA%BZdX+/L/NGc7L3aZHgL<1s7r#R]2RqiB3oZO'1YYA)TQUV(nBkeUp3CT/(*,%SGi(''=gU!T')o!jE&+l[D['Xf`Y.`oeVK*gFHc%T5Hh@1A9\"TXQuf"kf7&6%S=4E_mYf7p%o&`2#pGRc8]m4M.')Hr:O3LneR"IWNFBC0:(s,6HfPlo1h_p2A9+F*>$PDKtiD_a3OX%.^7`K%dsbPC[@Ya`/aFCHd72^(d7%&%DXq@blL^!5ilrRk\'so/lY7A\EQ.i!)B^**=^qN-)8Z1!0MIWXJ,aR#_sV"GQ>87i0H;a%!2l.X_4FIc!&B.X#+l;7&D6%13Zd45A#W]p+<]kJ=Fi1l!94)l5_,?Bmq@4O,eFJi$eY%Z,og085Wq(U@pOm*`Q=SoO$<CiSrXUV%hB/Gp/:R-4`P;?>SKGsjF0$4pmEQ3^.7egjq01]V$9Y8C-'#NYS-Y$h61Z.crk[kh0^H2=mXr'25W:OfE7]U#Z&gNEfh&&EGlrPN%!Xa*FZ9,k4?,c`H+<auh\pP8<K^0D"S](l.Es&:N0g`sNob\kIlOY:/DihCC,HT@@@YE)Q-[*[JN0*7VZUB+u&B[7Wh-J:,K9TVa%k$!S&p`hR&$P>^1h$FZo9d8mH6C:.k+[RSNn6M%t63K"c/M'9qRn7\CSI4ku+i5FKh`XY8/5Nj4$(LQDL'aRP<8XI(Cf.$>;8SLQ%'.'G[=H*s!O<(*LOR^//QO1\ZZ-g[:5+8&_lQ".EO;qJ=H0KC2^dqE-M)UB@j,>4H-5'u\</S)b.\RcVW(;4sSJ(/^+\;J+W-CZ>%6)Eq.HXnqKE'RtEM^-c3;eVpd07r-Y!curg*#Y";a)XU4S?`K5_Rm)T*4@U)%`:a_cIjqgM,U<RJ\qao_/?P6Z8baF<,ZA_p3B%8%>FC%sd0?I`B]-f/ZFBrRVXll8"Bq4QeI]XaoB@\,)k&(/`PCe!!eu&i!e&NCVojP*0hU$IL_^KI1oB!Mi(4%*[Pn!F!P`D]#4f/[%$jCJGN)3q%Mj;stXc<#Lbj4e/["2V"$us5)>*36@3P$/F`rO$Kk?;-,$,aS<bsb/I5n]/7@@mc1D_G"QYI:)@@-_;f$/7/@W"3.*%?^o-W-'MH?_eR!e(k(g#@;&^NVGi^5N\dZ7.kkCV>*5Cp0Oaf?+c:.k@5q156qRZN0IJpdf3uN+)7V\NQnUbbr<O&H#^hqu*+jtK%boJ-iaY5u%%4:GG@QCU,K[E2j\\j(`N8W&[_AnVoD$;5EUqQs\UM+$(1ET4Z$,aHIICXtCL?r_.XeLKB&Il63YqT*H#pYQXVmHLd%AaiNq*@BRC%>>+P;Sn80"&(\YTb_:.0J^cgVf+k0@Y$l1h.4DWOecJH@3f.T;J2XV/M:[Kc9U>)d![,m*sR9gS6MEd";IC?\W!6b%TTB62I-a[<Q9cg?W%\G&hLcLHq3=t$<8rFQlA-m6iLg5j?j`?8X<V!87>.R2G(;GaWZnD^*A'_/p2'saKpBu9Z=YNnie\t(W%aOO%X^SilA<0:T+&K$E=`V[O*4"XqT-7`*_#dhnYTg?IV%LPdC!Rg7$<gg[UuGHAa,IDJn>jW^Bk!*A<X07f^!Ig5-5(s)8)2FE?\Q,*%\/"Y9()c<MU%PD/&:,V(`9(*^X)RmB!R6LhO,"%r3d9Z2,FZ!+$0'I'0LVp`1W!10-rsr4QPS/L@Or@g@B#9CeR#+d;e.2+,8qI8%Q^,'\]IFXUfkW2Rgna6foZmW"eB0gY<SK2YWq8'@<G`^VB&g66f&uUD@Ko-$+M6#7f[u$2nq>D?pmbUU:fTmiPKtaM<J2$da:WT\%,8c?CL>c+ZL6mfC3_VCR+XlC];h`q&ON\sueHjc*E%<&2#(P.T0rg&8B&=3#S-(BV[f]S3?cQ)+5a@U?ilVI%jZIQTOBhmcZ=<"O%$9f4"VBTDK8S)YrF#%he;SF<df"n?TVG.-K2Jal87E!-".i]C81g],P,c>YdQjV.VZ_t5.(n;\O@j!+f<j#s%+fo%k_!\#W3X/&+%%+d5lO``o=1h0:I*tYC`+OMW]5Ulb+!BF,:7n'5=F#_X>obcYd[NL3HOVbsOW4!i7=B(dG#Xu/cNIF)e8/hDTGinIM6R?1Fbml.$%.oH(TJF=_Z%PJ":<hRq_Ja22&bB"Q5jlR?Fj,=>q&d+0Jo7egH/k5K4NP`h[OOh;6/3])h0S%$eWu<Vk$tW&A"&HbN]V$enGY4T6%FCbW#M?m+5&Z3?BKUC[%2rH,4+UQ$#"&In5K=7Jh;`#RB+c1cJ!L^f'>61<n=\)ILi$h'1"$BP6Vl\@b!$6ZgT'mGn*I5fl3)f1Z%;]mq7aYos2+G5lBZOT'NXN2[@'m9p['@,8:47rk2L"]t5&Q#%V3pID^%>`YqTMqLH^jli7$D@i-h(Ya'>2&':*gfmq;)C0,jkqI.%]?qb!;#^Rg*?h?%5D_CBa=4DVRcGi>a=4%Nk0P9L:7iCIV_CTM9S7@V6n,A%'lr"m&!0]q3R15ta=42+mm;f"dcthA,N:O:);b]Z%Km61s)W5^c-12ZJj#gqLRLXjHT>Y,8^aWK-c$-rPEY.3K*s&:UM)?]3;^>3uab+3@.2$rY9.PNkaE'$!=q!C`0V_h>J5_+fCKa/s%_UL&uT$3!hVKnLiifr1'FTldMi:]ndE6>`BP&njH)kd/Ok<"2mBYR(G*W`/[d&ApYZ/O"!3Hr7f/ODjgloO&=k6gB]"It2tWfI0U%",G?0#FpBm,SBTs-bq2#0i/6I]IEb6Ho6Z`ifU8nGYGsH-%ru0N'HDh*8oD<cRi_LmH+,I_G.A4o8[3W[VB"3=Ao>Y&W\cM.FJ9;%n_4=,KsXNoN<mRHfsMKA#F`NC?PQIR3)c%rdSF;Kfh$q!+@p?)"3<;F$,KaR,`Lm:+f937n`;S0_Na>i!)S%lI142q;0_@%+s22s%'SEk6)Vt`P-$Bur:DpSTZXH!iTr"a]CTe.LMBm6jauX0S-$\34m(cN[-pkloEMWsC2!,8u7<U]'@2)_15r$fiJP%r=EcN1!MI8gF%*Dq]Xa8V/$:eE*Di\Yu#P@dN#0g'/^(pmY$P9R11M*-M>:%5FaAmeMIMl5:s?qD#-`32Et';qkMN[.=iGF!SXfM:FJFVsZoN\nQb%aDD)M)Ok8^)iBkAdo9_0,9UN\g'WQkku@fi+iV5WCoS%E+;>As)\JmeqO<;2$pY`u;@(+"Jo8,g)*Z2AMP\3\RIs=K-OE9id's,u%"V6:7UY&Gr+K;m]*K>k@Q92n0<-j";a,M:(#]e:"UZgOagejir;oW"$TM_Y;0]EKsb291e#*h;[E`;`p,"BD0-V9EfJ5IgQUh<*b%\YY;h%7NT&,?bcg-;6u]")i_KDf+.i&]*/D']s+H(_5'l)8W%*(+\_2f/D4C@k)R'3rul&5Z'$fS1*a[5SVuCT,a_aGnhV4`"&bk%F!9]P!sYMK;:!oIBa)&("=l,:6<7p(&]9*%:ErE[L1=eC$47ANT9;n`_)`.P#S8Qn#>+uO\N'/'Z33r_35>i`HM`Vg.Oe#pa5EYR%Q*V>L8r%SA\hISOOZh?[n*!RX6Kg#"#]QIZb]C^WdT?jW'O&M%+3:fgE9R.G515uD-0-ml6eQOu=@L&\H:A%5NX^[oi^Ah$\1\sG%8;pVd.+Gmh\W.+./H"3/2O*upfaS?!9i7QXL(''_/-RG5!/>MT)X1<D(^b1Q9XOsi5s\G0/&5!>5\_ei(Q)%W+I2"*0YY\Sjr"mP%&AfeQA>i=c'GO"JMNJ!aRo<QXKuQ^^:I7;U2[u1I!ZHGQn9oh?#$,kOLP-jd!u'!'T`M/CK9YP409"%!hJj&!7V#8ick2uD4nl8m%#_b\I*\u_@@IaSjK#0fnDE)[?BM^t_YQF,u:agp7erEkZ%*u%d6F.mQL)*GfK7\,qD"2_2T\(+fY7V$Ik)Se5`IUJu*OuE3]kn?Q%ofiB]$kuH.[Zgt1BP;u[1CtsF=A6G=5h@Te=aL"P.&\1;4<Qn_47]L8!W[o]M[WPeJ7aOLL)'V6&f7e?#60?V=k,WkOt%u,Y6"Pm%hb?;CNr@1cm$C"&,o&8<+?u!A#DT(j:RE*J!Y"m=$Mo;N9MY(X#5h.;5Nb,r'Bs>[.n8<,JQkN]H49\(,m5$PTfs.L!Ot's!.EkR%("XV$:^oD0U7j6qGKOBE!.7h-3<d<I+tX$R9S7[=A21X'K(d,2i=\&Q-Q"pe*<UX8!.nFfKCoB".>PD7on6"m*G.i<-okU4q(ZCc%J0N]Za*GQ!cX9S'Gt+H1]^$tAZjF]c"F1'jP[!Jk:Ja0'<er+nbYqh6GX>,IP.ebg1D[eF)8Hn(dj3%!*T%_G]pW?MG6/Z#OE?2#%VF`O.7W`:#EgsCd3tkL`']83n?,Oh>3k,hMCeejOg_mbl`!5W4[fgN`^n"%a?L-7hPiRR`&_[PHM\FGS-X*?<9G%AM7RcaJ"$;VR%`dZOiA?^k\oT0L$f&Mi#(*l1h,oI+P/`2.;TK7_FJ.:$8GN'mF+62AEF'puL.]UquI?`OpWY9(J*19i,-_&KB\mikb;BX(d*^Q@"%Ldl6S:7*I)CnOPKfi6I%7s.-lM>*?6SOeO9Eapl"3e<8[,\-mt_HRQFK7Q)B+Rh74:a[fj32I?d-`C#tDIlKh<&:=k)5`VHL0@iu%FF)4Q08A^Z7%V4jMWr&W+^]`7FM;-B3!XL]7#I5J3*c%_%hIj]bTTlOU2lNtJ@DTEcN`Y[Ol92A!Hl70"b+qLnqb;lKW<Z7Ngqkp%mj.!\NcPEK!9us3*Ka;'Fn1ME.<SIb"4?;;!pW2'Rsh2XgJ:(<8F)pDa3Unt3k<;\0qFRS+<Apf\1Of]&^uU/#1jHX%V4a47s)V_%a"`h[d2=d*B]'9Ro*8W>7s+<6Vn:T>,!N4Cd><qs&pb#7abdC-F[RV,(t-1e+?HdFJGtKe9XkpF7q$^Ma^QYlUrE18ruNR^+JYYJ%0cbs>bV$^K0GGkp!pY^m9Lda0Cd;DU2C_<h@7%hW$!MNi#<X.]QPC4sqAAW,-!Rj&<82Ch&.F0t4q*0Z(ec&pq#7-J#UZDKYLA<C%KOOodL&it/=G#a6r$><78FL]rA_,%X#4uJujQ8o8?Y3Q%k'b9V6<?K_loObOXta2W2BX[3ki4`['mRhqQI7h^&kB`kGR&D[Rb2m1%lk1Em]I^utQS<,UUatXakp=13TM$9`.Pe/Z0)>Gge@pJdfs8c'K.\I$j6r&>`"bsrZ&Y2Ek^0D..cqBC*7=LAj>&E\0m1QK&89FH%\:fhGIEiCj?rSG,'uVD1bo3T)/eQ5rB"B0=Ol=h_><uL\<+3Fo\4#=K(+%JP[6/EhV%pr1qAer5<^mEu*"eNtDjE/o-!Q[U2%D_5%E;Kl>`=[%q9@D!C"[#a0enBS,+>fU=DH?h)/3NMRij&Tk>>dsr<_ZRL`+A%$>ZsEu6>s[\EJC^YCC=>a5LU+P4,?P2-c#F+LeAq9%jopLLjO!+L\>3Pqi(nP.Qf,TA:d@NU!^OU,QQe%"71EKS,;)7_LiKRb/r:+C[Pf6\K)u,`ECmai"OF=r0%!WMrXRp#6/'gh!1-Lm%8r$Vs]Q1g`%_)(X^I21T>J`PZ`2o+a)T5^p/8&p%%<VM*ZmGGer<h6k_.-jW$uQB$8JER(__"$dg</6&>Ja+p,uLAR/UNo*WAp\,%=/<p7=,G,'__%#A?R9=Ad?[qocbg2%r-F:k"pZR8lgc)dBbmNEGj>D=K(7Cq#3,A](BE#i7p9MQ(B]<CC,%iE\/n10J;qa81GTfk%\&,pOIW<RPCa*'jBa't3CEWu/Og0ao_\BXk'."5=hn^WpgXfDSK-hqY"ko&pYjPe;*LI+,TaAB4it>d-V^Z^i,4(&9e3?AJRTjb7%-,RMNZGXme@(Gff.O6`g&oCf<,U+g/]gJ=*M0Oc=F;2_t_(oiGXl'dg"qR':&[Pg5B4s]3%BtoE_2,NX,9"hX`kZ8r2MOZ,[2GZO%[Pik.ZaDM1R]Xhj6aO0T(n.RdU!RUm7M)#jNFC1MD%)&/CGS<(Ci)37bne>"BXTndpbR!?NUS`Fdjb.;giN`alYa9km$YEK<hO*f%VsDD[4"Z1L1Ip7^n4Z42,OPtF&,(_9c8[J=YJ&<\7'Hn^oQB(0dU&WU)t48ob3#Q&cQIk5C(@a0jIQS&]].4e*%\50cB(<WI(9>@%_^Hju=(#[VnK@t3W&(**-K5RWFTu2.bg6rE#((\([A2%*#8S8:AII;V/_,!j)2q/rG4[RE>#t';A;L;_Vq-<DPi.Vf#=)qj95Xb@%f3>f<)1n1m^^"\K1RnUCFk/9[SF#Cn$KR.')IHMt/-7sC(D[1M>cc\gNT!'8"`T4>aOqF^J2="W@JL@OAs%iLE+XY+".WNP_#S*`%GSgHo(3iZkR0=W?E+XZV&TD?5#K*$6i5+>`(3g\DAeoVF[$elR$uKTrLCnB8E<cT8=kpitAeoS-Tk5'a0W:DY*=Q[pEJG-@AoS&E%RT]!nJ7^t<0]:/+p7OB$$U#?PbX)gbd*+feL,60_K>Gb_oJ!#`!j^<bl6%miS)fiHbhiuI77u]'aGeS\>?_,r5qh>uNFL,i(PK9A%+D-`h.#W9\B#smXjOo&;b7'@!*FK'PPf7&YFrD"<U:UL\><Rppgc:PlJ0&"1f!g0Ye;H_qI'\<NqsHO]k8/W\]KE`,^*]0@b8i?1%khj/QA`oBYY.Q(QrU1$R2h\mfbD`;a!Wm:5nI^QI7A+4Xb>79[QYXRulN&[%**RSo=b$?i#IYs1n-n50Ep_B)6qWg+P,+E+n2t(a%&T!6Fpg#T\L,0G\&LOBl$0RC'l\&aT(BqIEU[08[1(W<-`npdSGLa\:oI^kF-udUFYPSFaasdrUYLK[n?`quY*d(m:i9%st$l)il%_co'YG%Ci"Ad:DuFV2-\AQ`m#Ynb#7!+#!@[D=%VbB:j^C#'l^(1F@-/=>#eIV3eCFU0M0?t6mV>mEH0G5f!]LZ"4[^I7QAeGCD`%k0aDJYL*!_PYJ^k0oV"Nl3s@-Kt'dHL^3Ed&\[u$C,%@,"T*SWg;o<hc]-_<`463&@r\IYd'B/dpjs5%0(;DmOBQU494<JUCirQF%B<0C2ZoH,@d,O,o/oe-AKbLaahq'f1%#a'&$I['?E(2mGiQLc(AC+jYeNolu[AC#:g`'SJ<[M[n:+aZ1nBNWh3M[L[D-@`JX#,>H%+K<KVZ-4"#,Y8)'=&2gd!(s%B]](GgWEODWi%K]V8XG0b5!R@#B%4Z.`30Q7iW?@Vb2V?MEk^i(66FZC=q5C.P)c@*U,^eW+obdS%U!r<EJBuS/>^.P>W2uD#",Pdsrl1s\fnH73'PjAPWeGQGFD7<.29?-(/1h5+.Zip/[*ZVo+HqL8bo-lEQB?=EQWhVTN*Hd_KsDgH%-rjQ9'o+m$-H6Agd]?cp`Pne\I@_\:;MH.O['85fL3^Vk@t\3OI"9'b0CY5YYI`L[&=Tu1d9O$Z`b4REq-7TAYYcRtU!HO.HqIt!%5/=(l1cn^>bBX*9(ZIq_fKcE6R#<OIlj@M.YE`Hc@;NS4S;e/U(=pR10Oh*2LY`$UfT+ceX6pBe'plJ(R&Njg8Z)tTgRr*d0B\4q%<MN^Xkh$JW(!`6oNE-8rMXEH)e-LmF7\5669U.MtFM9.-8m-lV%)Y^ijuYP5'X:)DK'Y[*Z5B[)5m,O8/2h9&YBD;\i\ic.+1>i\%(ci%8^9!#ReB&!%&h(Nbc)/KA^@]s/C3^:U1u=(Y82i<VI,TI[I@(RO6QqDkAB+mILVb<KNQsHJrq[n3:`1f,aAQ,Z&Y6"JOb;]e%"WoLO1c3#$pJMg4*u&<Y:QRmuZaGm+]l\tQPm7!n'lV&WX!X50ld'3^CoZDNSG#)"VfHm:S4ClT$G,#OD+5[TH"oM4C.eXt?Wb>N%:a(G-BI=V#gdSEG,KP,mKf'E.(H@4294:SlfYUBT$X;sF"QIE>BSZ_lYR*_IK*b6b<&T=H:$T#'6Q2mICLq*X2lmLZP*r$Yk%7$-%f7.!,S@p1jO`<#Gbr3=.*+pi;j@@;>_NL%=%POp1M&?E7o@B8t#aE+2+;4aR>RP3<h;o9nC4;Y]oG"C)2BNguIV_1!2N3J35d;h_%4JuN9#@"2r_u!N;b)mSW24fX)O:WLN$Yh+oa=fiG7Y@fc^Ttc1Th@F!Vj@l&!f0]bFpsb;f^iqeG3Zd(eO"N1ql\(pU4o9TSZMRo%f#[UsXr3!$1'#*]rRql.(+IC[EC4G*K,uhLQU99GA[E"1;Ac</K%]bKGNAg@kG8r8KM<-eUdo3-&Ep-'3H*0.=_BJN+E6JN.0h?m%&O;>qA5,AL]TuSl60_)^`E=k3`=SlM9X/XE?.pQD0Njfm^o8q8S47QK40?\LQEH1FIV?Nd/sc$FG\I0P(O*EE"9)2VRB!&BaU&Eu%P\"J,U:J)`d00td@U\XZnlJ@*MRFP`PVB-#S9l\1I].:H<A\D4M]Ohg9F=G"V."43$L:YcJ0CW+)W1n_//Y3[V)ob2Do6#f=h/J.%*8i6XSXW4#`*eUJBje55?V<&rXuE"!cFg?Z>)d2jEFmM<UlYUmo.ipHp9s4Ul=K@[aecDi.3a/9!H2PSenXL"0JSDung^Yc!BV:(%3\F*n2[ZV"YYY[j&PWuW\MbSQJY4m,NCm^jJD\na*`(8Q%E-n`]M-ibE7::CQZWKA^3UebM'c5!S88@2n!??FVTYoO6`_tdlO!Pb%COju1MtpsH.cdh'2.0$6k7JS-j'4EYJDYQdZA(4_XXf,G7]ZA.$D!^j?mtF<P3mPM4/,^_?s1o+/2AYRbD'Y+6>qDG(0;2Ji)76'%-JSeMKm_plY3Vm!a9a_ImT=@A@Bf?c<5W49Y-YuQ<[W77ZSoU6(CL,VW_(uI/Y$sTS?%ebMFG'p\f)t*67;+]R(R*<8GF[k$3_BF%`SP^\!XAX%Mtu3$3\]NBJGhs@FXsW'f"u54E.XXf)pN-Y8[PR_.)D3(o]N,aA<a[QL`Fr[Adh6E)aJ/H1(Crp/bDNR\T:Qd./WZT%i8#@*)Gl\=H/C((TkSM<JZHdNbkag3ad+'*cG7aFab?l=+a_PgeoXMP?=#NN:_plmI^tYIF1m.iN@ALNDS3@9?mha.@9iqo)Ab[H%Vg`GoKbVL^9(^RXALW;,e=i`DnqNY(j;_(^cUZB(NMXA=i]MAGQ*]'hMJ2,3/u4%qF3:YnX"PLUU[N%.Hir0:3EfNoT<5)W-jHNh%,f%GsQk?dqoJo>lSBi2hOu/9F1r9NkUS&1':8:35\71R^&+qmdCS7%@aURIe064&&Fs]%E,q!s"PO^ia=cN5rUeqJsY0loP#CNE]%,3u,>JS&@;0h@!+I6Vmk+@opS7PU_V=%@6g58`]_;TK^+R=S!SCVhR&]J\'s7KOb1.LI1'?*kVB*k<$jX'*9.X9$=PlFHFc=$;Vc%@RA"g$5!I9c6QW:auU+/%b?/E[D44=4#P#<<2n9:VUD(a?JQW#U>R_GdM-Y,$n3aXfL^soo`c8'2051P>0I;m.^*Al^eKKT2!_fA%0h<^0js32E[ku8>ph8t>iX3b`Y2?HY.YXi?7r*&P8-9-B`On)/j=CV0FR6W$1:>h;j<][fT5MnJl^"]p,deI&?Z9o$27<EG]DcqY%MRU=*EKcV[liSpfPoZgp!*gmtDZepV?!.rN`DP8*4g2FST^Go/HEl-'G`A79VVWf/>bMU:I0hSVe$"-1abjo7Bemf!`K95$Y3G20%n$E;i'`+emdt,@QC]Na\5btZQdT"#uU]G!7R9XU=49),ma0'`O#a-nbTu%dZ=l&a"%7XiLcLl?j2`@BO&:duRm7iO'C*=Sj"3!h6%nA'7-g0#BtG`f4RmJsub>V`<^OZ9bF%Wl7+Y17r7`LW7HV_!Oq)>>sh2pum==ot7^)&@b'GNI;l!li#oAFC.4]BW]m1-0/gJ-eJD%Fg7?g0!2-WB0:cp)J:slj`7sJoel!G?Y5TNKrka<dVTP+qDiUHj<D`-$:F0C:%u:CdVW_0p9?R'mDGs42_\+NNaC1Z:b!*;>UN!9%RNITi[bAqS>ZD;B\<?/jXE2N.pm"hd/`KE([O_Ir_t(gJBC?g\\XPUfbs@36W`flKDU>[EFj1G_NBNoG#cYAg!-4FC//kpo@(I^A%:MW4DFs(#A6SGROlZp]fHLWP.kMb!pmglHYHOlJXXZK:f>%OCPIBt"I4=O57+_u2MaB#M%QX[AZ;]U5e`-IL]16,ZIgpBtiV4s0`%3>5>8-B?$s`%[F,APn!r'k`8:F/h,(<ium2A'Jbq%E78R;E1^kAg!p^^'_;eU@&P4=T)c/6OZBJZD30_3Q5!5H>d*.XqLl=BI\U[%U*T,U<8OFtbRi<tmI=59V:a4.BC:'KmD)VqOP`L8V@K<0.k/_4i8eK@SZFA8p0FkG&o3^9]Z?=?)*f@[AO^63&FV4!m]*Nq-<#12%fj;,Ci^q=@GD[D1><aAiFuM]D\\O'J;jV"2-W-7j+U&='+ml<@F?X-'%2RR>iK^u:C+5Zb,:8mLb3<D98_t3@BK:43HDSssk>?.!%`[)=7[g5LaCeCmb://Qp,R7?WHU&!^]?%(e.UU"K+"o&oXZL)TUIMi!pL3:OV%sT;!MM0cRZsg%K$4X7c1YA&6.Yq?UflKfH(`L\%C3>eio)#OM9:_5')S3c)ZGrJ3\QQ6g>58Mr8QWp+aEWVD?WcbJcA2>3Xu!;tI&Y(>RUGA-JT9_I^4p%_ReL9n>uSP$M]k-/Y+7a^%GKhAa4*QGne21k>[nSo[,i/#H=Zd1]_au8]9]Kr/%5L//@Pr!V/uKJ5@;@_;I>Q.H-j<5T=a3?n(DBr`i0">rJ@]9^i*3$3\7c:B%SUlJJo.lf9]***%C[QsWoif!O.n-4P%5C^',L>L$=9GG&3^H\X"7"T[Ep9&-1+5gV:[$,o\im-h\(D]*T_8_up2gLVM!!abMQTo_%nR`6?'Z8W5I.t:RGK^sBN\2;f0==o7Q,>>qCqI_9WQ("H3XZ&6?MpNO*@Z`SAaP6-6ZpQ%d&t??1pi4^Zc-2ekB-4RO4.3`WFJ5H%MHk5f7W+`O`H3\1E7*5pV9[Q>Qn80X7QY$4?DN-+#Zc#_,B^?AB;[cFY1;&r+6G#ZmUAjZ*Po%&h!F"[QfOu\pmPaS&X71p.a7tF%)XN9ZJQ9S&%mj?/MIKVN>PA>\%P;Y<00+/u5.uf,++(YsAmK,l]n@GeEoS2DnaUS'l/)Y2XL_iA;WsY\/"9X+Wj"rX>n:D;dFt"F%HLa&KG@!QkqFZufXE;4Xe]h[jbX?PP]E"o8)o,,MZ"l[V+,Rb4`:8M]AQ3X%E43aNrbK0kWOkAAodh9Ff9pZrnS0YWAnASlG*XD_%5Y,NqBJ6dGL=He9he/bnA)T7na7/FNXLYfTR2<$hUZ!e^9%m.[KID_t@&BOK;tA9XJ*t$/VcUoXToVYW]R/4PCZ`9*)Uoe=2Wn-Z%Fb8::Zgp)rO/4@.WpY]==A"lpO(=O=*Qd<iQ+C?30=BH>G1XVUGYa[G8t6dn.-l<S=A<4c]lg2i/egcZQHk,g`Til+RhgmjInjUb%PZ`)DM/g]NZI=uuC.;>.FlSc3`2o]^<&;0l1M7@5eT@`f6l43]'Sg8I[qMik6)@*RSI4i2>Dh3OTjn@3Pp`BNe]3r,D+!R!$5F@K%n\`;BAcp+lQ@7-fc"5gfn-.P5ej'Y]`+CgE]_'u^=Om1=d5Qf&i@W=*6"RAj"MC\7g7E@nenPEFa>>g5ZV<!MPFes%2Ap":(0^)h%?TuH[^eAhc[6q!s=_Ao4YYsWn",-jOCc#WCb>Pr)m<Z'Pd8WlkA@oEQ7k5X)b/r)kb):0)VI1Z1k2(5LY),Ii_U$6V(j[N_lkM_2%G$Qic\Pl!1hNl\jpUhh&ig&,hB-PPVNbhC17b$M$Ja,q>Z7(+JKWKGD\Ucea8("t^G^XqjGF6'8Tm>B^Wi<?!gkdm9KfL#H&E1ZJ%]$$uC3g946<]Sp>O@?d_;ia.)!U!&uB-53\GIIl;?o2@2.<n.&Z/)fD?7,c)e8Af!",mgh-)fI0oBc8&"Mr6C!9<`8dT`WP/Bg9[%e90o!2MX?)l>D&'PQoq$?aW!4]`('^F#0jc;Usp/h5=fnn4PT;J3)Ee2B8Qr)WFas+-g9FoEM&U%92:M[3muG3Fml20o"!Oi]I<;%$Y%T$gC-D*0kTYu<Gb^g`?*p;Hs`hWb%(P#$CPM=)EEUSW]@E0;M+S-X(c2^Q*.h+h)*YgHLj9Eg^1X^V&#9i1?"t9(>;c\kH(pf%-[,a9HM+Ab$N01h/B8$D)jM9-^R?9UFD`1d2uV*dpb=2iLcKI6BWJ7>5GcZso$&G1EH(?IFQ\X>[d)tkY1fG+epoc,>Yee1r0AVW%R-ZC!iRH)N.l@<>D)S3;9^'cKQ2=IHMlgd[:,N`t=U7UL.#>)B),tUVZL+>A]t#=t<S)IYhH\K&)%Z#r_GpF&i64T)?u"g6:[/Lk%MY5MPT5@lskeeAk_8<"I7j"c"X(AOZ;nPt0RjOj=r5d&e"Y8i^(fiMXb`%l,]"h?[Kh]B__DsQ6hqlef)hMo-hk%'tNe.7GV:\RE%G>9BhF;DMGgKVIMo+e&%gtpa@=+I'm6>+lXfb9Wh\2-LWB2DH2`d$erL]jdZE>tD7FI_Dl4<f>hWKma6bsmg0%fZC-@OZHq1O;O\%p;u/oe*L\ZT&"Nd=2[%J&O^]4`U50B"4[\)!`l8#3F&lo>EdhS,(tm\^GV,<m!M\l8tF'54?X/AEG"'U"N`c0;\Da&Na>9"(I4\#%i,,EiNR]TZk;p1@C9kKM2eT1cAj6X*VbH$.M,W\mW%r<M,3C/i>))+/m[p]PobeWl%=ZeVplcHcWoF!sbG1FFe?odkl<lB@8sYd5%R^mt^bsB7HRFXW=4_\'t&833@=Z"kQ2>a(e>ue)'4p`hfJu0"RQ(N/-a>E=1j6HB<85ZcsFm)R`e1JX[\N@A)[A-$lR]UG5"D?5l%D/<L.+Y2(?kpYtMY@a:CamkZH>"qFaQ^+:Z\h8ZV//:-YoV-p")+o[*f;2<=d[F^lcaV"M;)['n>!/^\q&hRsF)i@ne5[HoiH@30%W+V]Xia@9mp+sD3igCY:UXG'Ik-@:,RVECTrjNTip=e#JH!_Ke57L38;t$1?"e(`1MB6)4g*'rtcRHm"%,OiB'FjGU_cKskDR6g,%Ng[BdI';R*R[Y6mNm/I"AT]!ucj#4SM$k_J`gN;8&nn$171;Fj7[t1LXT)fr+`DX6Xf#_S-%,!!<AB0,cIo5ep1mA)"/:>V3oRT'%;F`4j^C/c\A>+8_G4F?!eM?CSUQ%,lb;0[3Khe8KW\\=lEQUh`e(5![1Xlc,s)#+*!T8o;lc]tpn?-2RU#FheZ3=Vb\cFU[WA_9l%?mR><ne18]Os0nA,Ffo8k/:;L\#a!rGhKGXGI2nlG/Q9#`\lSr&q)IPRu-)R=$Xp,_TXBkTaQ.mec=kicTD#%MnPqaU5>j*HRl1g%ZtkdMP/:@?.OKtV@)hB8-1J)RqITjhc$E/$4KL/PdmFN%VBEuA)l%`JWbu]3A]-%PW1mOc2D_F%E2F:M0`e.$Bbs[7R]S/S3LWFY%00,WYI3BqnlO?g%Wc\rYTT7QS;m8?IEBa]Gr+.fljYRJ7,"cA_ZE?Lf2"+#rrmpLbn1<j*VnT`b(..rE#48ET&"gei;5M!R0/SJ@%<Oli&"aaD]c;I)Tli%sI'q4b(AEK6KA^]Fe7V1Nb.nRcm#o[dQ8a`7RU3YC=n'5rDi$4a#a2[*5(ZJt!`[>D<"1q0X[4?PADAD\1%\'_LAiP0Ng-J!75huXZ9O;1E^iROr52(aN05HM;^jp6\k*`Ee)o*YlV`0>*R>7]hP6Q@u<*-YB\'idR"ZEf\UU[[TH-OZn3aX`g[%A3[`bLhr9Z!h/eZR:h!#SIU4!*>SWUHZZ8N#8=r5)M9Vn`c$c[&Z+=O8OL-NffF.Up'!s`B<![d%l*Fmc:I."'3o`/G!75bZc0on%L0K"lP&L-<\mR=(k6qH2lWCis&u_[__Dt&:.dCPMc_89/?](tf'%20,`VejBST(l^L`EG'CXrO?D)Qu+(57DK<U-Sh5kBS+3p)Wi%/79M-bD,]T0b7O*<K+l?TYsi_MQJ@LP(SsG3>nkd#Z+^)DOC[EESI"m!DMc5a1WpZLW"P)qVuInHFnb4%QPo7"X>\jnDX3mYmjO9%c$;?bSY.@<qrX-9[HFI?C!5..;O(+Y5d]PF[YgLT&E*XL9;\a1]3[P)a,@@;>VX[bX>r@cDGEVn(=JaGf+2gB;mn-BJVPbsWh"cF%D+G[@1+>9KV%uRTBU>;1^mBiqUPtKamGq*b#j+fNB,3)j"$-3l^'(-c0dVNkC.@%87SH_scp^k1V/RnR7\%QrJlB7K:6g^\@uoV]%a(*Nt(bWmqgclLQpD&CY'K`cEB@CqP6/<HKa/pcC=IN)7'(ZhM=iDGI#-,aD4ntj$k,555(+_p`5=j2HH21CEB(P'mKqMg$%)C48%GRKn\r&I&p?bTu;'=51S;&EqL<hrRV\5\E*`^V@1ebI,lJW`EbN0\kojNTfe0!4V,q0q\JN#jam1@??"#(Y-h*"URTDAhbN`CWKK%$GEndW2_q3V-(*Ki!KInc0D>,_#7=A-,bMnc5N)ETOVC*eZRS->d=8c3uEUU/O5>R0j]ljbOa"W^/.mJdHJ0D:jYZVFT"7a.d!<[%0M-(H'a=]qoI'c6E<RPqD?JFlmGeh^Cs'_EmXaRQhDh62\1Q/.m!Q+Vhus4^2(1GL!NZHX\j3)g=!IgWP<`"SVp]($I`=Jd!J3iE%:0qJ.VbY%gaG7,kAFtZl)@3hYr5>3$;s/0rSFS(uktk;a\Rr9+gU1\$/)Fcp9/BRf017VM1:r(o#oAO>RR\8t?BhNHahkHg>2BOb%W`L6c"ffC<L3.Hb2ghud;%Nd9ebM9W;J8<L#c%=7AKkm3(\'u-[,O(0elJU&=g=T8)sf>@!isg/>VdT"4nE[+SOe'b@b5\+WA,BD%O!^2ND]?-<,^)mn!+M<ZTp$%ab6Ui-W^CsPniA@.fq:/``U5"M4e#pg:]g9>-G)`\^3<./KJ_U<H"O;.mp8f^-b6^bkpo,:2pX+`%fMuumfL7oApI#+`1\]:c_/>4!'5144SJh:'hl+J/.]que^,lD0;Q2"JDoLPupbl&&:*!<.8aPdIm[;8+]6e<h+)c5I'fY1H'O,WR%cVE7U_$btM&/))RmdV1GDLSP,q'hV0Y#a01.G3G8OP/K\?EhC%1X9d(NAV1P'-,_f6M3]*KiB)*\(R,%SaS)fKVr-iETsI:SDU2t%ajQ%<ZuEOrB.N<)&9"!X-bmk+ZYD3G97OQ8J:g$@29IIE`C=J/KfML5Sq*Eub:b`7_Uu3iB!e/JV_$J.d7eJF_/S\\A:^\e&a7T'%FAORF2a_AnY[V6499oheGFA\2/]\0$?;_apG\VF%*7O9*D3MmUM:JVmq!JE(BO_M[]CmnZ)#&l%\5dT=MhF&I(6^:0a5V2Y:aFsF%kW(1kY63ap4W2Bns7o7e#_,&dkH#+d.534;^@l[G$S>,UK.`$i/uISS#5/eEI"**hGc5d#(rto?PK#uWET.l,)/@JmS'sGrkjH<"%6^=GU4m4*Q_ME0=ptjg=kYC[6@4[AU$MoGk[slp3FJkI+>g82IhOg/'Dr`5%'DQ(H"5`p89K1'pYQ"0`j0NfAB'37of>Xq;Ie>@$%]_pU9lQq!C4?L5:]=L,8ro'chpjDUi^L!F;dT8)8=P%3CgtjU>rGqF(429L]^-5]#EVeMEq<RA.-,0,3?iB]hB)W;?h>HbcM=5oP%VWkEo/q3K6bHk+sIRWX1I_/eVqigVUWVbNBm+^uHI_%G?913>0McKeTa#p97S@uZ4DW<0[m8#p@c0+]9`cLt7;:":+)pdQJ%ks'X%hgW7_rq<sfYMH)I3I=IX5;3c#q;bJbqW?\%V`4KS\!O:4D#79U=SR/2DjZeeeXLb%n(#Q:s0TV$*XeIM\\8")p3_.2]%hCQjO"Fg%`VOk1=`$3llfGb5o?E]<<WD-$ns`D<o(M);V`-!\0/k99nW?U2Z-01L2eP(I*tVKEr8)G\YKkG^0u9,f5.u'jS^OCAqrZtqo([P,%+1H>=2j\f*:Mmt"IUjYj-RSD57R(k;j]<Zgq<9X6`%F/]DK0jqJTEf.4k0Gk`:iK]pA/n,S*Q9Ihjp<U5-91Ul2`7)U%-A`\U(m#%5.S58hKV6U!tTQi%^%G@?G/G4g#UNX*!9U1jb&!]l>ZQ2nbLbiH]3%">'l<O*`'`.Md'uc+2Z`YF+$AirqZ#ccJEF*]glu/D1!\>%p>4i9pGR2eD9]br\[OHj[cZGtgq/ne'VD)0kFS0RpYm7+oXG@E([:`tI/DNkr4i0aIsq4's*MGa&[8\?T![>:FuPF&?(\bn]A7j+%XSO=%plg&emY8<u6W!9l'6u'^X(\<q=F)Urkj,SHPFIQ"j\sZ#^UUk(qq]fue[Ib*+\V5@ZF.q/dmq^7St/)`bKRE=m,tdB2VjPJ%Ri>#(+2V4Xk'kF)O-tiA4Hl\[`U;^\]I+MBTX4Xp2fIP)Dk><9J$(N9D`61c*rW(q>cW6%Vg`]Ir5b.iNUnR-;:2uhI-@Nm`oh(U%(&d3&.;V\&V^LYs$R;ePLjAdU&+P+Tn_QBSah%"9[Z^;^cf>TU8%9&C41W"/T"eI#02M&s)7]S%ViQ=E*0:$M8`"mb_;ru%ft4`V%-`>.GjlO`'-Z>W=0Y06;VD\qG4U(.b>1h`OSR:3qYFEh+J(n6&Zg+0S6f'K,pb>FFNG%fmUt=at`=m4r*F,.B?%6;Lj/MO[D`0Lh%+8m)1GU?5KN,6eS*k@$7Z)[Zgk4R^(qm-qEkT8$'nY)kF*V8E>\bsd5IBd_9cHksC0m*Bp4.SR.(C[REgW``&Y5@H@ViBm1%BcP\%gfl&3+7CY+F+&293MCHSa6Sc!\_::U^NtEeS=KW@jG/^DNJ,^(an<?#Qdl&ro=A86$+T6<:0t\!]/fb;F)u)FhuPt&Q^c=eo^qk:%p;;.dj336J55F!ZcRtP3+5kB7lqU@%:VWQcNTW2anB#=O\Sa.gSot&pT#.?D\GF\WR3X/HB,;p+#5)*tk2c6l]<d^ErU\bS6TuQP%61gm8QXlK4B9Nb1q+RB=C%pDq+5:=n8)ir"I5]2$S'U/pSGISOjN$]8ff3*<c%^M9_eONGgbp288%*&?rUXa!_q[U#4o08fdq=jS%Zh[;'Z?;WHo.s'\Rh#$8K[E"L3fNr+8V]<S2X)obcfE2=YAH>EUYp?ocR'ZEo9h_/1U9`1q3fZ>*d.DDl"'D@K6]Qk-N;!TqV*;s%n-QAhHXnsNGN!2hKqIhZMC5V75MlG^W:Qp:Dr]\m^HTU',:jSE^7QKc,PCKhLoJX)Io#.fU1\``mIm]Q/Q]P3=3LWb>]&NCDn4Sf%X)5E$,Nif3f2qFLMV=Am4TUkW]Y=5=rqi"VD)n&)[&oM"j_.kY[cM0uT;*F!?en>9B6j;o]Z9L*YdKH<rsogigE)hYN_T=>4uO?U%IX>o1_2jRKcg\&@pR'DCH0a$EhBVa8hn!rkR6:>tDZ0:g9EG@o=(`K01U2Aq(.S%/?b?!Uq1ik>Grh@PpR03'a^ojcIY4a?FB>)]%/.>tY=1i?%cX&hh5^PEXWk#DS':oAkQJ(1m>VBIAlOA5;Kk9.7Ucsp:`i"#ra8+99lPHJ7QMgTKo97WfJ%h#=X1'ISB/`'QHJ6&f%'`-cPph?`+ktqtYlZ;"tpR9;r1PQ,q9ZJ9o-ZkY<Sn1-8V#J!p:0q<+jkr.iS`_Y7n&O]7\M<`MnNH7FlG;#igT,O2)r3.A=SU_<%ZSuf?2o"_FZ1ETp:?ST1JY,reI]R`-^Uq1.F)nj>Fh\lD<ZZS"+BBf<K<*1>2^ar]PMi"p55>omo%i!]ai`e&,LQ6=2@sB9/Cttj%]_a*.iI3Vpo#t$QTY%GuiB@"_Z]!RbK]d[[:VP@QCX;-laLq$P/^&53E%bkqnAI]N)?deK;T%/uOZ>[:?lo5DRFDnup>3JgT&-'2%>lXeH@it#;7="suZgf3I%6aRRgT/NZ4nOQB%mF;;CLb&eZ?5iWXg\-!<PbfOo^M_*<aFFZ9:Lt#Q#bh2W%U_3b&[pm4C9E(,Gt1e%Fht3'r37u1NV1jeJ"Yr.'r^uN8S_hhpZKe(g7KI=UMW2W&*-$8'8_cr+s2?ONtVg10Tl6ePodWc4?pIRo&T.)[cc,'R*RPNp>l):%k.?Q5c/ph9b0J&Ii#]Gqgft0<b0J&9,EH)QIZtGNQ(JR35OU\;Xlt-jU@[XEU&R2GX\U0Ss!ce/rNihj-a4COhZ05Z+["AcY-,EO%n6&?]O,=<-DSa)9H0G`gH>5)dh7gMn0sgV4BD8tsf3]?g^>F7YVGlX72EttXrKC%S2tZ;<n!AHKip?YrqPi\Q:\09UcPb(&$rs4m%'d&M2.(sj`GC7'U=N>dTQ[J`1fn4I?Z`EK8?'"OGjS&Ad.WAp.B$fJ-gEF/;])C:SKP`3r@q,u.n_"`\pf,Pba7+i(IY?MEk(&o&%ZMb=KpFgHNf>hOUcd#&Oo1PjV'2Q>&q.B5@GR=pT^XtOB_/oY*rB-ArcTKu_>dp&tIs=<8jOmD`DHTYkIgeC8c'HWrONuWG$9R!l%W"]n'G(?(^lMBT4h4"l1,k6-Cr?G8?T7SR]VY2"[c]:r*+1j8:onPXff"d\pHfsQVqrrAe[a)puQ)EWcIknR'5=am4rtS@W^]"#P%ZbJ-=^YUs%B);oSN,J"t2P9h@TP9NH<mYEVJ%18[5!8A")"%"eip-E#)(\MQ"&`lV7Euu_TAB-j9cHFm+1f+$N7m)P`/U.RcfLYX%\+^G`>5QbNS^.7Uo#&Ig,0f63jSE2ONmrQ/ge@IQT,'',s3lT!I87Q+cd1j6NL`j@,pW#-q=a_so;oopf<<M<c9B0W``onJ!tUL$%I_#9e:/>d]DU2*BF;`gmZf.#O5e*DXD*GS\POm6VY!2LKm9so(".ssQ)bTF)l`BR4nb>'!^"'#%^iFq<HujIVO5']uUb5G\%dtS'%L*n%`4?C#8]/Y(6pA=OmLQC2JpC*7X\*pAH]^4REHMUF^Zhb)K0RQXI=E"08O,Y<!Y@%.*M/9A&g0VPd9^hm"7HQbjD=dO6k/ZZf%O'QpHmpXpPL-D.>a%)];D(,3D"5&?ks1=ucqn3@&0m\kgU#_i7hDUUGG?MAJjA0O^CdZ<?,*^<q"i4_6I=<h=ZOJ!0[c-8=Df,h%%T5<j?h1h!"iT"eMGT/hq#*,j'pim`Are,W>hj=+#EfP+bkr]]Xn=1]Bch_Lh)gcst;"+@oj#bS8ngXRB4?pUWbGOn/]=egOZ#6B,%K_lAGatm8"gOhQCdamZkFh0^A$iU"XlfI^.F->q6ccK?SqtB=Hn'A/^QT(OD0403XFa\<+mD_Y5l]#+b]l@7pgrIWTF8]Y8P1tYh%DI%;Wej8T@;4!LH4M/,:q7pc@7Zt+ST:FR)`cG=Tdt`:\I"j!ibhmJd`Wk'gn;i@IL,frXn>5][-UdMInc$_6YN@"0UQ(g%\tMWD%Prl<1GM(\rn,X.TmQ8U=]5?t"pmCgH#s-qaAGY@>WNG&ilaPRDD>o+a2X7+N^Pt9ofR:+!gT4.claPRDD74n_Xl!`\`n#)",lBR`%lHjbkkoa1XeBdT:HDRM+'D+US9,R.SG--22e/l5WD0pcP@q,k8?ZPYWn'BYag554q)38VYO8T!9qdp:%HD,V5G4Xh;fnURD:JYGK%jR$?9>@qdAc$6=qF*mZ2<d$\%N]_@8q,'W*;j!]umbXr?.L',1q.sU)dg>L#qt+aoS%?oG*iS[CESo9HS!0>Js1$n?<8:e>p%b-d%Vk+AGH?4LTH?4-+];r9_]`[ipL+?asIHk&8mWW0p,7]QI5*Mn=U7M:2@dh\kU0c\_r14DPp\2`L)BX6T,b%joB/c_1#_7sp6(mpQ%BBT#Vi6!jJhU(-835>0VPBY41lQo-AbL7Ok:Zbl0l7#;YkEgYoXKkV\Vqa5_<u7?E%9J"/l"kb)bg"]#HH4Q')!fL)O*7!e.eDA+%P<P.GdX+OGD)1?&SE8u\PQ!+NUT\R=^UZKT@X:Y_]4[N@G7VUis(Cd`f90:F7aZ8Zg]N?<8EpVCMWCG/L_qfh8OX2P0\;cNO*rVC%k?bW;er?4te[ap4R,8=u]BB1ML#(:S7ZA=sC/k/NK>V%X`VrDjrVIsH8VZ^pjcIg&r@W"'In7iapCe`dN9O]%hAR@"`Rb(T,Do=C%8)ucknG?R?,W<bbeO]]<-]B<LBf.6tiagjCmsjoOlsS[g0,O#:I`m"GdIF6Uh^<.0lYt[pKj.rkD<KO0\ppF[3M)_3Es:7o1Gkp!%JN1,A]g'DJ:#=djrC-E%W7q6t@qYcdZ+n/^of!M.D,kWI?_;,0=ltY"f/[_;B`4jq?Mk%/QMmQgD-HfrUVGoa:$W;[ms&Hns6c"D%J"P@=65&efrZQ8<]>d\Hg4=@!>%_%<a73:2k>1_9C6QK;!rH=t$NGJiB['uae\.V_b9_WqAal`[ctX]<M?A>C#B$2fs6@Vp=(2'b%aCbE$%WlMKs$!^YqC1mJ96tiRlG10WD#E8b`.*EMpu;q\[<ZEj>9Np$D%FC=2?/8oiR\R#^P,bOGR*Q<*?Mt=Gl6:S+hP@mIW$f$%n97`L^NOp>7dIgHcIeXSs":YRG7;^pG7lrdK*h>gSc.ZE1Qq`;g@7*Mm3#QP,Pm=:8QfOKJ*e7*R_6XdBDDDIC])=jr,nP/IpcT8%qj#e.bBh'_InF%bq*9Dj21FXEIcWG9jY_MK2?'!Wnggp6f?7q@s1l:e)IrVjj>Hoc#?LbdNiS8fQYP2iB`44GR/Ab')@Q5#@ZJP$%G;rYCNU!,Oa#FPhIi[NbPd^C/%rirqHD`b&+cbll'+0^cR6RH5@N?3Y=&8)[._>KlnGN^hIKb,6!kplOi,e7Xr!N5uecFYmodZef%@`[_Wp[kYNn#mPu3M*lj&`9dJmoRI%/)pGa7XVpDKd9iUEDMVmcm';hBjFKR2#r3RVMkeAZi,s$=T-*Z3Q3ZhiRQ3Ahjqm1'e#+A%qgZ5MI<T>R#II`/(ZE)K&^^_O;[LlH7,r@js+(-(n4raI\0$0T5L/3-(HhP\RrMfFT3_eI&"Yu7>ne#J0O3BR+ef**ngs2-G/8*S%k@p*#o?hfQAf,aB77Iq)9=^I(S>2d'eJ5o-`XO"Ycngu_Q1%[J'^-,4r$iUbf=T5X!j5^?KZD[Oi&9TjB$u';ZPdj.:OTO1pR1h\%0G?%iXYCNH)h?.S%61m_)qTYno>M+?BS_W+CD#u:FtsqL=r,+pR"Wn.ckCZ]f:l<^Td(Ff$O%*]L3ElSmY?-(M[5NY$%F4R2mq$G%rk61O4G5,r8Z2%&cBe&tpI0Garoh\`=0ir%YOsudn1rT:N<UKA*X/f["%FARB>u$g^70PJ$0mpfM!6*1IK?7X)T.Y$h:\G_!hQ._%S&HcMc60M!NE,@dPOS^uMu.o_`ut4'k_=P`=>CY67tmW<D);@N0u6Q'NJJnir;ZYDV[N9XFL1IDS3[+H`W'<Cmsb^B,77m2,uVW&%^l7^90iCY-Yn_WtF%cP<TIWPo:9jR!7C!noJ$9=lDr#XF8C/)^P]Fr^`+j\cUT9jRroh,sdG[b2$F0p<5RQQ3%%FZ(bmSFieJiUr%n(\X>+&Dkn`d`NA#[De%B#sD5H_Ra<l_5oSUt7>;RNR3JF*rPoB6u=U$OqufjZmM"`$X+Ph$rKK:a-2'.YO9[]/s7"6FK$!FOd#0%-H!Rhmj\0DF>X^r$u8!A)#@c?mrp.P.sgEUcqL6cgSq0g/UB%c8@i*pJ-q6G5G;.4T^Gpa4^/a3%/?^/*%[V=8I]8..FR1+W3sXs%<lC6ibO)rLpoQcpl3Wk$e:g6J/!m&GS==]O:.&q;UdJl),+P9"VXBr"G&QrT+R[onPQB91BGYLrVB@REA4#Ur-our.\WL0FVFV1'%<F`8;V\'XID]r0M[t.5fonAkJ)<l^V>?14^3hnF,+N0JFe7LIQGCot%ELZBDehs=F1r6I+<f#\UJB*9>WWW\j&r++(l0$lbKVU<V%e+Nc+:_2r71;a?uOoupklEt7lPM%_jWLq'Z"Id"EZ"a[L>?C/++t0(Q%`oG9r4Cil+r'MSE=#(7OIr2V]D(4_]XO5c(R8ID)154M%Z=;Am:#1,9cQ,e6.8DKZ5"LAR2C2aX'LQ>FNG@iX+.PcYB<?fWH%LjY(dXbRH&Nll1(!/"n5SjPs8/E+\8<m4%Njgcbp-;lWu<W&%]05Qh&$:+<E&dr"'Yf\!%*9'Z"]*SucNpc?G?K-<ZM`pEn-GUT8>9-!cQs2rX0_M?/@C)$-rsjlnb!n8?K!IT-YS[_5Y)U)cq:@o%n*RB53=I")':5B6Xaln,@OmnE!#TGs`"T.O(I4J[U+J8Kj(&4T<u=1:;ZV3)&fc[]NBTBHH.m[j6M'X3$,\6G&\gl8E'9oY3&IHE%d$3\RVK"MSgZTS4,W+WiD.Ak7UsRo43:R!f[KnPns$C3^DCjd4@Uu=4/-8Ja3G?S+dL7SSPpTjQ9d,I0N%uunVJ&;0Z@Xiga%%lL%egs6GF@'Zc!C<RH#BU9*$'/J8;X6;2@?t-6KZ,0hJ2MZdB;FdX-Bb1CGu((c&:$Mn&7YE5g^Sl?bjdH`O9B%E-t6D6>r9AF0UgGR%PV3>"*0uj$A11jp^p,)1#]49F7Z\nWef4gj#XcB@9imQV97R#76``Y\ETn-!)/)hTU#t;I7[Q0b!>%g@La8]-@q\+0"TWWg+ZAHp%86Wtp&nDIj1DgQj!mG/26dcf?nqN8S0`Z3rnPgb$"T'F;%Po]X$RJ\?RVDo/&K"X""05pje^g+WB`T<40kb!-0g9i&&Q'3dre6Ec%"FPmliMB=@6I]L-a!?b:7i=)-Erp^8]K?giP(ph(Z6RgjUM`I3VX_/F;A'71'M96!>3%#%7IYQe&pU,soL)k;%#\[M$7]<=8W@n%%O`hm^#.'T5,:niIZ205(_8*cEXWr3eZ:KZl67/L(3Jf/b5=FAHT-dCDR+F<3^*lQKM0p1PH'.h,JbR*fU3T!p+jQ21NKuCKqMn2S%[K7c]58Com&/14/G9eU$1S,2sLD<>]/;?h(6C&8F:o-af,*Bj#&Xb,k8\.2uqC!rZ/<N843jCH)PcQ\pSA=L$G7n*nqur/.'LjGZ%%[]oa,VJTfcN$aNEss=e74ds/Be5AJj((4_8d4ecrQiNc%K;321`68e5N(buK;)Wu72J>f2u<WWRE`;O^C_V]2Egr:"V1PBg7pMJ%M]X@'(/ZpMmU/Q$%ZJ!$+_#YJO"p3:ggb:Ni*Z-2(96=`#^kQB3gd>F6BiC=nDBE:g5C<XC+Sp5`Uc3(@rr.]FpGf=^cqq/b[oi"%ZJ]>.b+1o8s6\5t6SQ=1.a80='^sO8C`Ooi2^8bUlV34SADN="*W#u8`-;u**ss`oXSh+SW7O"#,WS2S1R2^n(8"%$bXre3j$Z<a%[Y#Z\-s3ia)Y'/6/02g4Ls,XI'_B?r.@N/_rB\\*Z5ULs+8q,IJ0`H]-]B;nN21&C8rphM"?T6FY9[_C(8ka(/U"3Rp7fE7BoT9l%V2:ijK<.%.?k]bf`qC`3$+6^%OV>gU`?/i9:D"#D)G"5O^QQ^47+@$GkZ<Qu8i@aop8?:(;j+$o-.mmD&.+1WfK?-<6#<536qmAW%ijhC"eF$"roD'#u%$C9TBkA5`j<aR_YsKdp`9msjqHQA5'b\&&"QJ),?uc4R`!Hal/`;;-=54+8D*m_j,f6deBGn(1:90>%!`=VF%i77rR[B(>T8J090)7f$?^<fAu;HdralGAN>>&GM5b:O"Ds0K#nU.a5KNQaHta-!!9Qer@.jP,SN>)eXC`X<A5h84h[fl6V\l093o%it0f!rceu9J8___V_"V\Xj[#KJV3L*oilc$5;HB"PF(X//UBUi=gO;HR;;fuRo3l])4N4>WX1JMFGG:V4_Y`@WFbkN*EQm(2lMiK%`WjY,dpHA>6.h5oh0MT?^Ek2-<iLL!8)k\a`CVG9D`b"L-UCQ-k#g,1dm'7qdI=`jq-rpnkA%:eNXq?F2Tj#`Rg1/"PTBdC\[\n-%"QFnEQ%+CMcJSZp(Uh>5Z5CeUKC7W&(UG)'NDkeK9P$+_\PC(dMNng:5BC'<Rt*b`[iLf7.q1Rk\P2)1*#6T8UKiBpm7-c\P7dcm%B9.d?6ogE$fF@!#NYK[/4W&J7f5):paT=SVCB&^%2&gr$*M'X6>5dS:@/[@a'=J>0lB4Bfr.C..ZVgMc0A8SYL:5'Rh\$H<:J<u4%i@\-jY^s=*Roe==J]M0![)HJum!(c68_S@8Rgu101KrA@drqpm'9Ds2,5*D%s)-/<1/aNt40r0ch"CAgd@UmIB6C+!n"-tcrL&!r%pg/t[4$lLc9#bR;l8q)mpNoGQmM,LG)aempHa`-3g9[@ih]a`JK&>a'PA+X[D[X1n<^\I2UoR(,];f)h\*?^BA2KE6Mcak_B;8FX%T]3=?Ld,+sgF<\:mLOF`U<:ji>"2T9.coCEhqIZ@R4K?$d]D]+gn_P,O'THNQ#oYtmiK\#5X_+F_f<1tj5G72*DVn.pW%*US>nP6%+?@<sU-J[B-P+O`]AA<,QHDV#'LO1jOer,)^[JPs9M/aGP!T>;-8[\h/Jh>&PVq$V$MIr[*m^bO)(INF\:YhVUGO:*(b8NoMm>H)%;DTE&=b#;#rRQ0OqYsm3$baBNh&2.UMr42p6<cGl#nb:"lE7S9+3X@Jhd)^FV&9\(ec5LgBs@$oam]2u(i;Xf<tH4b.uqu2kV7l<%7V^m_ngskR8Dn`X-5pJG`T:bYJ[k$lk0P?c'n%tT.7C]0Zg20ANQkbrs4/7u/`R2g8Ab<Xj"SA,)#:;k>lagaD7$%6\'MW]\td(U%k`*I4IfmAK!26sr(Vp'G_78s*iuO.<NMk3(9n)ESVC7!X?^3;ikR3b]F1p.l9\!n&TLBlHiAPPYfY(*=P5!Ik7MDG$]g#e_k->,k%6nK<ij/,$j[hga-eOd556>S>WWABaH0T#a2-*M3cIbd8_2!S(e'iXL%dikOEd&&5o+Phb*NVc=,#O4mUggGE17,m+&Vj9#PeW?]M%"qetY`"[DIp,2)&6-PJZeJi^\ZROVP%s"^,@Oo^MaP*DOFfY=W0L[M*_k8;j1D%"J]Ka4I"HL'YPa=qK^oIC\Ijof>)V^CUiR%;1%ZUq&MI\4+b%T#m!0GP@$--l>/A<CV.@Q[L5dleOX9d&"2$**Nih]",]<S$(sV9gJE/@==BO6)J?ab^A&Y#[MsXbN;P"t=^CW3`Qp%SZ/`od(4o(!$KPA*qr&YX>=9'ZR:-"7C:1\KTE>td=5\&!eJ].Bco5j-c0V&6_RK.8n_g&/FBs$k4So/P$%M%T#UK(5QIc!L?ZbQ%0\Sf2H1LqU>th+]Vep'=Y/N\B+e06p&(B[umFcH=RZG702V/Sjkq";p\]sdLC=DL`\&EZ5k`qqPqh93n"A>7DD5GN1U$XN%KCJs$%!ALm5d:?Z^QELOd6pQJ0lfq;$DktCkLd&<\FqbrI6k+%7!(XBZpS;GYrN$g+bW_beaGXoRFV<5RFFC2Mf^ZZYbI65F(7=,Odo#j`%F&in,FN8GQP!YWA34c+<AX2?g$dYYtkSA$><7nSBc6QOL6MZ&BM"X<,.5>Wp?Zr5Bd7-:D6.0;qee"0nZnjrc`NmUqs3Xla<KfmX%<1GhSDDNK!'l6Mk)c&T'Rt%l_4&C4<L96PQ47:GfH<]4jhp\O\=#XlH>]k,+Ttt9nS_,cd>7;N2kUkBoMKAj"72UCm+NSTYFefXh%lh5QS,ts7\7,5p[&U1uiW[!UpJCiIq(U$I($l*tN#:_Z6DNa"HG_A[e"Mm2*XYBose(Nf1+:/osga2_prIL2>>,gkmJe*l]+.H,e%'=$!+HngfN$hiL(?e'n8kVKKW11*ejRJ%1,7q9S19m_nO$WAI'@4ZM.;?l"i%VT^c<C>H/YV<aW99h/=@=X'?C/;^`N_[NFq/%[^%Y*i^cdHf*`+63'05/o8tl%k11gV?7s`+D.?!RA>6=F@S0oFG[d[$g/`68N*]\el0pToA3j\tpC@5igM(Lti-fNZ?QW:&!$(*Rq&f%Q):@#orW0iUkWI?;#l?Gp=.sj&DL?4$eY%DE>?2Dkn-TH(*@*GSU:N<[Ql-r+tdPqWL6Zn!f_dCX_2=+3XXID&@U:LS#K..Y]E0.%3j@))c)i6tj68)Z_1A5^W!N:/.OF&H[9?9A`WmEXQh,ZTd`%V'$[E;rY3G;$1:@f7m-B$D=e&\0)#Td#6L1FTQcI01R-@%D=oQdU%r,AA5OA@+bJ;$$G@F7ik3SHG0)VHieb61$t%+s_YH4h0C+bSJHrnU3<-k.P^:WX)^dlA;F\LO;ZDQ[0.*k5qaf"V204.)'))(GBG%)3&P1aELI??VW*:i(r*;am6Blg&k-9d:eB5FY^knk2q,O0ls&YfCHo3`FM*qIa0:t+:A,e$eqcT.0`-]HEBlNdFT)t?<@M"=kW>>%-?sb@o@d_3OFfDYZ'WfRDW3)Hr\,SsR`pLd=V7X].G?EqXVk7bSO;ZsLBRh&\f06r]Qe-AaqBAhcr-a&0pI"W'Io;J62jcZ1\o:a%qTbBP3/_ZC.`a+.Hn]_U5.,Hm:1:pB^X<3*(q^CU.kA;&]pE?uhp"0)4eAW'2MRr"G[23Xg8$X&QFP#sUfZq[fBH7<\'&l+P>6I%%D?&Ib3QhocaJ[+FNqA2PMl\j'%BHRdKW9i7A_[I6W=qo06=@7EAiVGT'5Ge(3]=:bRd1]TUP32.UlEn&VR)GnEOO5fA*?;%a"fU9%$GYR;q#]>3jes\bS=8om(BYgeZ]="0=V0^J1UHS(N+Hs4<TelF+QO9VV`0GHUt1OYi#<9q?Bl_C<CTHqYsPGHs$1ulYRES7:r$;o%,]'(jW7D:"a/^aNgS8$W=h4!FmKWW>g$91a'<0N;4Yh1!8tZPi2!m`Hn[\ScN8&uIUl0$U=o8*2s*"JH;`f?oT"dK*_mVc&,CBFO%f_n"tIY*i,X'N[C=P5MUS?rA=7btO%HTgitO1Qo-Q@"2YTDpJ>mb]?aGVT*aIsqK$jaZ(!556ZlCkU4)nRVH"^V+`MqJrLIp3<b)%H*Yp$lh,`05_Eus/e>>@J%>atgR_/k[Y"':4T^@O!%<j:],,m7@GO.@Iq>.j.@;gSU,.<(RXP5H`$dmi3?$e^%:a,T1jT(ngMn/T%op-3l;9+Qi3u^k1jV0YfSbKD;C8b/>XB7_o5BaiPJn\tu[f4p/KI&]18+%(,-`?0YhAc-j2q+H%,1C8`.U/hdA]57j$p\]r*Fr1n%\?;TP1LIRelYU=7hLK,??daqb(*/J*B$h[o+K/L;[>P8QrdJRLLpu2^@o#q/\[A#1bQQXVFlF^IU`++?Je@2";dlHQ5]VZ'^kPX<%p`q3lS+7+A6Y3[2H_sqTJPP[&_(W*LrkU+cMXL>0F=()qkPG,fB9SAQ8pI19o8dGf;DarTa]0es2W%#GLL)a6<sMNpj80Mi;>VMa%7NYl(ZKYNVq_S%&p7)j\iIF-OBLh7_ghjU;H'@LI;X/io9idnb([9VY)_Vu*MhI.%(b\2!o3_<S0X766HAruCO2KFlH@AW.>e]i-%eMEC-SLq,hjm-[XR-EMh"t-Bf4rX*DXE7J025.d0^?A50+%qOif1VETN.a"EPNj./\G-K/3:F/?BD1f#?R,TabEm]+c8p]qp>c't%r9jFG3Rc&<n'!jn[nFH2O,(]@FE/H$%ctUBAMI$H]t8ZZ=N*4<>k7>:p[RSu4aKZ5B0R3CchJ`a+ii>'^.VLVd`89bHN=VL4O:]i%]M@D:_,%enX*Cq4`7KJ#-K6$R3'=Qp9:(_>$A?!E/peV[I57q"j,B$_#\>[,DkV9uIp:.iQ\VQP1[jL(\(_su?\;26^%s2M9G4UR%HoBW,9+G:SHJ+GLe/t*4SsPl1c+sq-5F=VqqkRL]mca'bSJcYMhk?6lUKIHkq.(%ta6)i4B%F)GTja+K+a3Hio/e(!gu"1MdmPiL%aMlje^Z<@*+;4*T8+G<B0S3oeQd/Tk^%[47cd#s*.SlQn(!fT\6cXDaV^0g_^0n1EYn%&'iXWY88tNP>mWsiUPfaJg>XW,I]3^aF%?b@3N=SqldkQsDt:bNf7nVX$u-8$CffrHh%G:6HR(4R@^(X@`s\T$M%!(JiF$F&q#&PAl,@4Hd'E?`915<1pmI9jSHR?S9fGZS$K%lie;=cX[/b'ElLm8KB\R1\_jRalZfpe6k+/)=EXal=Lt1Y>G3]G5bER\,H2,Y&er<>gBfVRDrl`Of@_l0/<uoL=snk?^b<rVY=2;%GWT3R,SIUf_ksV)"^#4JSX$#XCJOHh2h`<M-\-%=6RhKO]eDeZZHH<_OeKB<o5I`(cXrfY9_.3B'[KU-*R$L1]Ye\:45jQ>UsolZ%9m;Fh_SdWp0&KOiA/QfX7q@oFA!?CXM&6M;;I!jt5&)YB16&WZEg;m#R8hR>ReVZ+#<cjQ*rCd(13tu5l[6Ga31'nkT3V?"clnD[%oDR>n9_<*J7ku7i3FlSu9:=?KM7N"5nlA/AH61=4^>`uqp4WfIh#)PlB<GRI(WG2,=b7dB42#++pYEd1dpNYXfb&FKYJB99eW\$i%\`#^!iSa8-(B(:]C$=kM=4bJ`_pH>Knp[m%XhJ'WIYAT7l!B/.6V#@sNZpuYq;a[tQk)0P/L+%K.d4"!Pu/RpP6]tfan6ccYD^cL%g#JLMl,PUD0cJpFWe[E>X7r0qGrs3i"t+tr!8u[?jt_pSa[c31;/$gSM<bD5ml3]LSn2q9$fT2R<BT3&%l!0>^<do"*(V)X!?&9K%`I.19YC_'_nRq-^l(P]EFh8(Icd0PqT81h<H1PY7nu5TuoY-T.`"0"keXm&F0c>`Oq=fjJ<FZ-r`F:@]q8C/NSNH7l8?j2k>B0Aa%qk;$XW4kFu,?gNM_N!si;"=B'"T)UlPWIc:r&/U0:60IK_0$7tc%DHAo&o2t8Fa4*#4YnSQB/qgd(F@\p16a,6kmnrP9QXh7dsm0%V!g@LGcc?j#>QUALjg^s8qmGY;tMTZNB`H[kQB.[OmKa;B(66Y\Gr!B9=a=BBM8+IV>]lhs,!2rkfe%BLbrTO^D/qc(FO6e'<:^b%c(c*.3#fusa;ng]$O!-`ntF>a=p2,:ZYS*HX'c>+gIqGG,D&cZnBtuL"T^uD(\AmpItXG72cZl4rje="XMR7?0)V,'Zth&lf6&Q%%\\S8N5"jst0[WnX8AiD'5/p=DgJ]qp;n86)RBd]h3`opG4Jj/@.t5hDHnEYIUuZ05)@\%@q<Xa3Y%/`PnM'(hcH=5+0_o]MK:Z$*%gImL0dS:d?*dKS9)=.YVV*HSWr5q\@?"pfHodq@q*Hrh'Jj71ub9KP,K2hiWAgL`4R$;ie"\q8<R`AqgVMo+PPa?OT5Tu(Q!Yrf\%>_17EV0bL7d`R=PHFk>d>/SFU;HLZnnL:OiF1fkX69G)R1PedU'i6#+Ll8Y2OtmS]V<=)E\5K9gWkcOcfW73?$6<"u(7D/Kf3&,1%J6c)N&X*K!#BbQDQ93Gh4Q[9EPQI:8P0+FY[4tuC($dIorZ=f?R;<`C?),t$12MmhHC!&8T.Bu**g:q*T1amO'U3\ZLdfIN+^I8V%QAfm/d<Dge?aT$?n<n9nrr-mI?N'\!B<O+N]CU"s9p3DWYLEVsAcnRG0jJ&^J<Pnn7H6(M7+=>m_VIR^ng#FV.W8)DPj*g"FZUS.%$,.YZ59V=*L=mr"L_nCDS0'l^i0.k/)aAYM(,PT%rsXZkg&ZnHI$U.i&b/15r6FBL:Oa3u0A0Aj;]joPAo8BLmm<rk$`Ke@GWRCP%H/DSYl0:P\p(]We4>hRC=1N-AG&=uOA0LXihFC>FG-!0#07MEaX_6Y>BD)2Um-r7*7#!;.<&3Y2f8h+^\%Z9bIat'IIWq(#_Rpj)%Stg>i(:=Y.S-Ej:<'5X,dQc'm?dD%0`s/q!Lft-M3?d1OWP'\F=O^1nWphAEc/fTP*"SI<@fG]-PoG*jZ(q&3hZnfNLEt4lobNV?%HP;'=6uc#A.,nk2U8!hWC*fs&q0!V-R>,kB-gr[lPJTBK:eo$+nfO"P.EX*5%^,'G)u.NVrnM.bR>VMP-V8<\Zuj`LJjWrCBMll=%BZO4)A)]kR1rp'Ih,FQL(R\3UMHNVsO:q=n&V+&1FJf7Kg<_>OOgp>u5O>$*?pMD%nZA)9o;-'s4Za&f."Wp'(OE=;T&?qPN$riF%G+F,t%@'2d(A#UGl4jF.`/+Pk/U9X%]cJ7((!4nH<P8,'Ep,(j`lg<`a+#K+llV#W@o%r+[sF@RY,,PXc0n:S%mqq<^<H93c!<%G%lq+ApG+T`cn_pcP,HBptWKO"&VgPG`Tf;`Alq)q0V,g5](q`7FrhAQe,7cFo&6[Q?'rap%7+Z3t8=b!i(NLRO8G9bf">V3gLt[pP%aX4Q2`6#'.DqhTD\C9Yakk)%Vj75b^1udbpoB%)^n"1XQm&S?)WV6SfE\aE<[iSkDK9O*6l6DUA(LEV\cBid5q.ig+d*$2D!&Wgd%gG:-;l(_I4<0a5Sf[8R'qm,p\C#$.dcp;\?'VEi2?rN*,g0(%4i^^u0]+Md`0et2ePiYsU%*Pifo[8U#e4D<P745haQT<-2R/W(?%ITN@IKa<juO/HHk2EE>MfgdNVC;(Z;n6A-`U4X_L$>`]g^"I/d;kiI.1*<Xm,3e1Mf2+A%i/Mf)`GnYsbQ@Z1VE^8155&r[Q<:r[%O+$_/h[hs6,'p*`M5W`/:KV/kWU0@ZMUf3WQV@*f8O!9MlY,uZLYTMa@Nj$\[I+^;n,5hRPP7:oU\Afl,Fs31qGb65N@gr$p^Xaa%a5J@H`ip3$NFlO28H]B+G0u!]Hp#RGVcQmb:2o&>j$h:mr-@=3:[(&l2l\dOd%0S@>/^1^s5(i3(W)AoAVNolSdO<-.&aXK/t^9S%OWV:\W)S4!5*'"+AK')U&jnjgMYqH:4cAgQ9W]@_8If&?mkEr!LMH!A0LdEEi0W^Pb/$8+h\KEdT/";L&f!h"k8PcD_it'[mIle]%BWdYh6tc?.--LL@nJP#@U9X_3.0_,H;"k$#Yth\n.3N0uMGV$GA4POq4)iF5O\7"(Rd$Rr:Tb1%h(G;/SfI$a@#M+(PjJ'(5HA`E%,C+ljoG;RsDO>/!gLPJln0SDjr%gkkYHCA>kD1$GcU5LiG^8MKqsX_TPJ>2g)sJH0?RPR,S`^2)(\;aSk\G7;gd<N7RCbPG]gIo,%NX+C<I&1&NAXRm[U%Vm5M1>2E^j$FB`PC/@PqP?<(SVQo:1FtTm@67!hp8su5J/XC4?8D`^`aU9lDKhnmnXM<4WOe%I4`Cni:@aG%Z,`ipo+j#Q1_04tMCn;5%?)t4>^63NFE%Y4Q(Fg@Tp%VJ,VMLV;l7r%n7YqcZm'45TfGj\MMtCIP_ShnZO)8K]u=7="^Jufje8%P%2cr(K/)\P\1PH%mAA8&Z1N1rb(hT'fC4r'!6dS;r;D9j92e;[LKSCo>FI56e:%,E`0l^S$TT:Y0IrUccRX;O*P@qn=)lrL"75n!G%-T_`)T<k;$jV!0+_F,tu>^?IbJ2KGVWFd6n0C=H)iK72,,ft`&Z5@E/(7Fb@fi*$>Edl]bpV-I-#-S#/NN;#nU4#IUM+lbi=d?)2%MarB9%:)`Co'cM0.,R$)q"X./m'rE#NV@BM>/r:@*Ar,1M`p7Lc];RfUIJPHJCdjRORIa01/m(o-M0J%R_KHp:5YH=QLdi(I&0!s%XluBS/I9jOW?Y[ec(A)2E]W_N%PMVB@[^E+:nGEVmM%g>@1koZ>P&A#J`P0r+GQd#'j1;d&/9`>GU*2;/KL^:#!2=R(oVgpps8+r%D_YV2J1.D\RkgXAme\)?3r?uHZ7*:Mn4Rc+n.KI_IcJ[ai;^saj%)"?cjOT/:dUTHB4t29>m<4/43TC0ltmn"n%9c36L'CrbeoKd%%R=tX9p8n$W`^hHhS9+r/+b1eB0?qaT4]LC=,6(^a\#I5fj6!%:\*5['4->XF%,3F2l5]#YOmtXNYsHLN>L.)$d='G+1i`V&i#`e%a@EEtO&\<3ikcfk`PZ)N"#l&+5q%j:iO.O;52X$e=$X=&>P1P;.>Up&GSK!j#iPAF)uGr7pL<'n`2b7'oBQ"T(VLYsDE?6j+^UtS%]oVOS?K+W>.Ab3d;$%L0JpY&+O5'3"l`1rJrlt#"=u@_p/782obe\+,^B)@e=+%XLn`Cn.<V!Yk]BE8.7f7in,a(rci$YdITee,f%$opspf/U9i.C@t^HeIl7JUrB<I?2k##FO[?*6GqUKBn&ejDJP)aIp2T?kUY<5N$Wb/lg'cCZ^*p*\=5f/@3PeZiP/)c6u;CXglc&%+>LuuU4lJ<l`6>s=*iJVr)k.=7'"ZL@G*7hC4BaFW3A7[Gbgo?SQEpgd<Vsj)a!Zb&Dr0tf7tr^OPOhQXcC_n$_m2k3]8_ri1>$0%aii;]ZM=,cI3Td8fpDFg4K;QKUn?3%>(I;M@e^)Gi?=;45F?c-`VJMhfG[1gWlB\Cn-@1Wr%O^i%Gd\r\BsNRd(qFG/cjGH0Rj%T%-h#AkR7(c'5eAqiV5psFdduD7?N0lhjX8qMIbiIHfGansqL&^nj#P+*4')[^>HhS^^?-TO.[Q'q`Cm"op@fN[[8=gWPJVniR-&MO%1BIH.9.jT91!t4uF;gSEr!.R&ctP.9ECi2a<`amM&uVOUB*5@;k!#DtIu9XtHCDL60.0kg!l^tb+NOGBHp-B3[>4Rq6*)"iV@3@>%j*RUFV^HJJ)j'ia,-ju29Hk,*6eRQaTX[m)m4mIB/'!PCAHo=E?\?DX#@!TLN\_JZ5o[Z,nE;hU3[d%F+/%P0QAqKADajj&H8!GG%Mm5T%RK$)t9CZj$HqTUE5WqNIgJ!#nIH+3i_4`o#7T@\0O/n!(9,?N8Nque>Z^=j&I@gc6g#6)Jo?a[nXJO(9Ao%6t25JDC$]k\V%jiJ)jKdWP/,=O7E].T_-lZ3C_qYV_A7d2t<5hpJ*h:?m,OOW#=ZH-PV,3S9<3.L(9-WZ^48ac$04bHHqd8u;Tc!W2_#EKter;5P$%KG-jJr`ZY792tT;"Nh359$?Gj208a69IR6.G$t(Qh<!L/ii5[2GWL4q<,@9WP+)A\.#l(H)f:p;RtFc"]]D=@Mgi%t+CP[fb*=`G%T6Ui^Y.;]i%%:MQ>fd<qH.K^A5b=,qISCr5%K>fbd9lGZbMR>B"9HsLIPcNio!7PP7uR=4[hJ2'W9%!+p:Y[#-GG2H2:0I69_V1B%IInF\AfA4)$f]GQ7+eb84#>"NM[Fb3*'00A8ftb%B&hoDK?V)X]MP#c;*$%T!c:g#Jb0D3k:s3+)HX:B4=F4-b&4G^kCC>-\?j!V%f8)7*WIcL\NI?h6m="uoIKnGjdA^YZ1,n\bq$Wn6mSBG,O,U>`B0Edm&gDqr4g\.aH.sdAgo6@1s%c6>1Xth\bi@/3d8%U__+Rut%='@%71,h20CG6fik)3nsZ5h$mPR3&&Q1<4\mLO;Qc7[S`<,RuN?6Xtd#a^IBF,?]:0"aJLrPWYnALPO3`?@kA`/%OZ+p@1W6).d$%F*sOSjVQP>0Dsgc5&DjV&71TUAT.OC%;aKea`"0*8Y,bN"R5K6-PH%&>s;(N_dcL3nr`["56p]Cm60_@/X&,bnARcO'-StV,'MBC%i9k%EK%J5:RU6&8q&rGq>Dg]QkQL,'mmk%J$*Pg-Di&M8T6'g?Zd_Po':rO%V9es_.T&CDNts+(b["ZNr(,ljMp4`],]hB[%l<a\%fF,BB*Qge\ld0"(1E3JNTI=+-_2hi<<1V?I8+Qq,'!;d#k!g2BK%W7`>hi2[PMlPi4!8Oh<smU5$SajMfSO/f<Uq-fJ`D$t&#6CT%U;S=+NkXGtdKmR)k-^aDcX&5qYDkUq`F%;/jY^f*l0J<pplW.*Ptnm+H-'^Sl*2TiS!1RSEMk\bRG"?uLJ"HsT@3,^+23PuFNT%:%gAY^#\5OaL*'0r\N(:H\Ht?PHn*P3r2&[uBbat_,3p"$Oj&tliUsnHV;1--k;*)[COl^IRT&TqDXOT#kZrEn@VW=Qp;iN`k.I^fE%TUjPYi8j'4Wf"@sY0LdT8O&3U+EYb"<`l=nAAq;ZI_W$aQMk\qPti&h(:nA-?9ZC=P>9SD/md<\%6Ju$IB/i[>)!lW%NIVNO7h/s%1A?7klc,K%kCT\*rU6a`VkKk_18T("o:ffm_pcZuQ#W]qZUkjVimP'[^#DP0^]$r5)0H:k9(D#>BJNW6lPkj;Eb:lNM,O-9cFD=9%On&/JnL!\RjjOlfi=2E:SMh\n*J%!>R1k^qL$)lAe*5mI;2n(:eEN[0;jVF:=7/koH94GZ\+-GhJ#cA+D3I^TDg^1f^7'25-S>m9%Ghab-1#5q^5KWQLm':N]l-5?_2XU.LImXl=SKc>)4@P'q<cHAuXRj-sErY^p0c2V2oZf]#0^\MpoD5SA4*C@"a8/aZm`q`N`gp.E%heb)rHt(mqoPDjP;p`XbgUgL#DdbujV^pd+oK7'Iks_W!HG+cQ1$nPoC08<C,5\Z,eupFT/"1SVS02/#UPNofQXA51.m?8b3e^mZ%\#i85CeEWRmj@*Ml*P_/'F*H-L7KYD,C?$S9*Fl(FIW3U$dGslDi($.kb([aJreIU+mtTcVZLGs8?9\`@5<Hr%4du90;r(Tqt20_%rKEY`e+r(_7-o#8)UaVpoA"d%$CtduA4<O)_mB/Uaof=B\'\3X</KP<6DqB5MCL1GEC-S$jEX.k#fBU';Qr"MIPQ,-4%6i=h<rU$%mEQPk9'A=,bqf6S`4oq+?)Mc;.k+Yje)YXN8)CpNs/k5mrJ,j6`G(Gah]BF*P,</efAu[sg"T;sr8q35Dc\b[W8@H'ak&3O#GIZ@%f2k2>Hcm_V<^V6r+!t$aOrJo=4W(jKP[^bXHo?DBTFU:+k&3K=YC;mKX7%jo_.2*hD)F.6V9Ih?Y255([lTCdhQ+>-VekpHU3od$%^7>XMhu,dPmb?LC5]TWWah?aB`GRbM2e/WWJsOT8L,7;fpV'DHA,c0^T0/5aB(5fEpDVpJIJ^FN:!9DPLNc_k>'[_HZ0u*UokO1X%TQGV#R_Cq[R+-aK`I-K]kGE"fomu;!npG-I[ZJ&`oM+57;5\c:3Q3`pC-S(BH-;M1_TAK.k%*C@pGUO2StCmYF(fDgpV-/u3m9#@%R5kq`CEp&'dITTa7/c`>)kj`>0cVdR=@)Uj-hC!iQU[$5MgZ:Jjueb^^'PD6<s/C77F-j_E5%o2s4lZ09oe'5*?k..Y%K'*2qt,*%-aec/cQUT]pgYa+m=u4u^9MLI84Os<Z&?QQ%rpsR&le2R!VH,8/GJ=e%8JrMcq\qAg%$^5dAYgQT$+$RM^'7+:,stbF.S=PAX\[W%SUqIL,'EmPHE9*S1$o[C]WPD84a![Hbs'jB.!M/jbhf9Zm2[0kPtnUY06^%SaG[]\H).:!VUJod8$D2q2$?+:9KU5M^Ib=7%taQU%WcSSXd>[b;Zr8+:S2'IHH2jb4\pVU!s"ke_YpX;:C"7.U.J>3T:6FmY\j\eO6Skck?KrU3&gnljHgH/BC%o4:*iil0Ua>4&GqD-`%fsYBT7D9GC72Eo@S.W0jMWhbX^(GMQWWZ%r\=ADujkqJfPPEeGRg^hIUo&]L6O_P.:(lRbe22D4Pp$>cL_O4Qs2%m6psN(^'N_ns%HDVG-,^,e0pr%[!(DF%UliKg#aM&tY"+r\'$B9/\-W#0CfOmG;PQ.V_4_?E]FsT)mUL$RXiP(kRME)tJq6gJ<%Zj&i4Huchq!Fe:%<fNbqTI$8$E<ClN1Y1a,rud'/f1&>$8.GBP%Oj8-Xed+ApEE<,:C1#B9pZ@.,R82^ZHSop&KUfp+tj)j#35<%9ZQ>e.3le2R*M?]%IlD`JoB2CZG:<$Ld0Pm+H>>etkOUXKr$b#L%Z+`tN',=5'hq!)S?TUnXJ<j?S>G_?`Zbe\<I4XITCR_Y#Nt5HjQ*El:LtXD1MaS6%b_`/r4i(.Ko30M@*njTd\Em>,n6DB\#q2RM+lIpEHAlS4>!P91873*Y_M,5`O%;?QCeVHQ`+,gUc(l!8is^^ogfo8AC+G#D8"\Wq%0'l,73^40W'+>JpLNK:h>;=[,qR,O<3;Y4@ZiIep:"C5EObNnnJT1$C79`n'eU7?3494F`ng;g"Ss&JhIi78hjS:_[$t4%M5:<-<%M/uXdN0?<B^dtB=N'Lg_X&aKU=66SjF=MLc;?sY9^%\b<S4bLQ^*U\\T;RccO^a"r5ViTOk=3o,'N7dUq?J?H8OTcQ#)l@/JucP(%FY0Aa_@)E9;)6'@<U.fQ#+6h7MqcmA(Uc@N9#Poc>+Lg_aj(98Wd9DV\]\W#QlPm[8n7@&See28alQ`>IS5JDjn6;7,MDON[!LGV%=;MXin62Kl3'B(*Pui)?+"&Z]TOdK;8Q4gC3L`<jngtji4.fk9K4COMA$O&OQ"o1`."RSk!-U/AJ/>5\Fok?Q:tETY>2^3I26DLu%FU"i=lF*QlCUQTfBf4V5GYPSkR()j,-#d.cjr8WeRe7K4Ved%URQ7a0#+E[uI!TW$R**6'QHI22hThoPqs^r,?D&jNa0*Ws)(h7U%(##<OI!t9:pC<\t+0ogaVbUtZRq:>2K!AffegUbiH*O!=eD*+'difoUngZ+I>/1^o3o=s6Rb3G0$5"FN%[i]_O"s=55HPN]$]C2%%9h+^1*pR=nM5h3Bn>h.c^9C'3-:n[9"?dMaN1p)%&WhmXgYq_*K9URI"eaD38E=(m5&7Lk;uor4"lM5o2]n[L!QeWmLp$7_m.2*@%:L;09I9"XghYf'o._d)60Ct@$))Q^!$j.T8QlLANPBP*@iej!9Z(-`^C"S'5,Tt[,,-E)T/E6F4HCl;!ZiY]2X0jf/DA[NNB:"-a%pRGecXE"V[qNS'&)lo4)/jo2XVY/kAJn"VA/.>6!8E0!>SL-?aq[tNOVDmQa8WV$I;JVRW88eJMr(qW'Gc/^,CcS+<SP:u`qm_#S%=h=&X[(+lG.dr#2@\;u8W</92%AF?qLm(hb;j1p_C0^#q;X[3[+.+Dh7@ie\R7:.>f=TJscqa)N0Kq[9I%9=8kgS:r?cNbY=DTQV%GcpXk2j9ThFjPGJp3_=l(dH]fCljXJT'Pd8fmm<k$Vgr`d2K\m'Yrt8O*0."\MM+0Cm+ECSZ+F:AUum'6YC%ee@r"<(6tjdMcG6!%rXC\6GijYs9VkM'aZ7-a\mE[/Fj(@T7b1>H.dD6b&qHD3>E,qj6=aMjDahIm&3f-!$&$=[gNnt`c^M8`F#euM%4'QC7U-TCi+sop%!YdY`<1lcCGo\m1gH@RR2ZT^X+^E?LC=`^hfXhCoZlWiiDc>K6$:>;A5'?\f`R'1H6,9G_g1u'_:'B:oH0C'K.ebapUTn9SNA_j_%=#AWYW*d>]T[=0(,WQu@qIa#lG,o:5.=,:?K@^43f4Zdl.nBrujr-s[b0o*V#9"%`bt+V3/c,N\I>t[u]+En:YL*oGmFPZ!*/i@?%E&JiBil#(c,B#hWK^L0f&[ZlKd+Cis_KG6p98IjoEoZB:[L9=&I<kSeR&_BcSllQar+]XcbX)M_4Z*V_mQ>86=dRH6c#1&g5qC0'%30r,`igVnU0Pe6o9kG<`*f`&.h@p=B_Z64o[m4=L-3:MljkUu<G1#,SHJ)[`!<_(FY$/&`0YS+h0!s1@Sjp0Ymo<'8hQ+u3Nqa[`%SS#3-\I2>OGe]PoDk2ML^pa"+T7;f9iOW%uc.`"CX]6m+i,%H2X.[PBE-!Oai>D@a7Sr10eHCn2CM7PmZ%dQ'g"I?ZCgfuO:+Vq7%3SVf%,c#nupL/oe;R:X@fnNr#$aaL];kbUMfYQk-_o"CCC0dDQJ8Hgm._H1#gNp'2"iVIl]@'BI?HaT;R*2EQ3O`*RblKur@MY@^%#M\Kb.%,)YhV2Nj?@'MRMagak;D&l/'N[=L9N:_ZB=^7PI-6qi]FUB,c:I1b\2s6;mC!1+VJA,2[`@WeH2pG'+.ZJWOWaa_`Rf/c%9_KU'R;>;4j^87"-GnWHgjCVkKM0JF4$q(58#uu_BTWJG<U<kG]bh\X(?-=lC:X.q-SiDRH,=d/"]$C2^S8<MJl)]BE,s.q20<R`%[TYtpWu0R#L<dA^%dW0reBjV,MC[maWs.+VTsLnp;ca?E;aY2'6)X8L[]#n+Y+X6C$Z8g/B3df9;(]:Y%@qVF*Ng155n0B-40c5?%lPd>L_:;N3acXQ.20@CaFP%\AYG'E]8@GHNX8.ZChR<5$Gk4NMh.@H.-lHWCoCa-4&"V6D'm28%`g^E.HLKH.3T)aCqio]9qt6g]%[DnQbDqN^0:.L'XG1G0$au2HAU_p35e\AF`U1i0RXFOIB_f@Y!SEmM^S9$eV?05m%?CVZl[Q[;1Q&dhk.k?jC9'4K&egd,0Uh^=K%XWYdCT(NGh(2Iaj&b_8'D?a6.D/>Lp`[?CUSZcct][fGk3@o@&mY"h(0o.h-k'YpBYu'e![VV^uP3e(^bi;Xf"UC=$/6Hcod=eB?%@7W[cc(M$MFp:XP"cHVkZ0>(LG*S-6FB6#`<mZc$dOabPd,nO\f.&Mo[;QikWt+N,HQ\X%>.3dYXesD1&r4BC<0nq_Df6(Dc#0ap%<AJ^/9WPs.Ss$etbgu0%>fX=\gB52[*FHjirl(p0>+(_SR2<\A]@*a,i;G$q?8JD*7O=Mco4PZ?hXN4M?:gX&1n6e.FaT%6>tp7m%1MD!1,@EU6&=k7#+(gcelN"9SGiodi-<RaQQu/7io0FiED'OpP'>IN?Tc)6qF=QT7ef.S/3V-f`Ek\S_Q7V<Dj1M42]poRc$%V!+%efl&`Gb\S:oZs#'FI+!NHZI&;'C:.3*=$q'!;(UP2ZR911^_I5I&_q-;Rqd!W(#@n(WiL.((4+$AtNUQ=f.ul<LQJj\&.i>20(==%11phbSp3NO8"R4k_CH!Y1-&^pare\X*0=F511J8F?^:<43sMCAi$m=naK9+ro89K#Tf(`C+0.AdGX^I`rNWQKHKcIA1->FEU5eF0%Bp37Mks>\t(0E@;UHqIMNsnQVl_H`r:so]W]bRlH'B9cQleUh!7<)?Vl-JdRlLM\V8^]4H11rQkZfNesn:^NVA7WV95+D,5rFGP.%RuE:UhETaY,6IoI(:uZZ-pu`7,I:9"\:$gNQ(dFt11h9#G4g.)=rA3q4TCh%nf2;]3N,=V"O<U&SSd7O=*5'XBDGePQHf/`4)pSN%e(]u9!Adj0,Yl[0Z]bF79CgfOS"pN&/K(eGe*Ee<D8QhLCAWSiaNUt`CQsm^CgA`r(::-C>C4icl4-g!=6FP;Sn22uWcZab;V4/>%H>\"!PtH@&^89pl^"VaSV!+466RUEsRr(jQ9g'K]AJ]^YXR"ir5C[L5H8q[*d'`=Jf>DH&B<aohSCJ,"h:9E:XS%klkb'!Bi'^Dj%,-K2ViAA0?Ui61CY(tJu4"=4JmCF@ap6:)ueAH!$X;l&agoMPl+,cO=l_$kYm47LbJ_SkL8-#LB'5?T53nY0l2fZ2PdSBN!6[Drq%+GVmHCgW0^iIpT1h]WseFX3h\"Fgitfg-q9b"`/!4n/.`%2IK_-cB'[40.eT1"l*`s#F?;na-:\R0]>pRV$mfm^<]pV>*TH<S1=\%!LVuR1.HT6<",6pVda>uN?`bQ(G?[^g29Xf`c0KB+-V"]J?tG+aF)4"'siU(IO)/>Bj,-'XB1Gc[QP'oS!DQqeeeh!k-.\PRJ"Bk%[K3d@O\5%Y\j8_AB![,D2l]Dcn$O,LOZKR7D=;V;U^V'3rH;)$qY[[hMGs^k(DWpJ?>TLr<!6bK'r_J!ZX]YN+gKG/4tIi=LSh5f%aX@u<B4!0D%pOscXq]/`O6sLm%e&SigsNHd;E2R>fm,%%k'9TO`N3SD2<)b19&\94&E.*.5GT"=+KOu:Pen=$`uN*39e47\XU<S@%-X.<LI@BS(F`J\=efW((D8IKp)nce2eknoa5lqo)1I'Q19cn!/OPt<u(KArK9nuA$<i>P@.Q9,.8h]nWc2,#_B@Gm[oYs2>NZ+8i%7=NXdEFGXA`&YV7>c+Yf9;B+B/+;jW$UoM/rE=$5C5$bGi<RV7Cn/M7ptG68@pt\KPe"e:/fX3?EnT)*\qK!R.[_O=8;jd@ERNEI%)-*6$-qUL;H8;Zc93`i[CA-'k],c$t0%A!U<N#3HU$pVi0rqNgRL`H<DS;EOVaReP[ApJ&>n&F?At?Y=FBXRkW_W5p=NSopQ%d['%].jhg<V^5n>m].i^oH%HN9WIShT'j4D,t)cH+cGto%C+smE)Bnm+]+gDUN3cG'[!PJ+h)Im9AJgGPtq+C#SW^A4k_W0n%P,lh"@b%@>AJ1"BHL"r[%,\dUBa4UNSt)6.;!BXu_0U"D^=cd<&DL"%Vu]MNUlVj[a;dX`DGl[bPU\f[*_;Me7sIFthTDBoi3&<INH:r#Vm\%#:QS&`@R+VgRN#fcU3LpGBoCBdBt2'B<!r4/m7!U[oO:4.IVM>UeN]l4qhsrI=6:*aB@rsF3[Q>QcPSTcfj4E]?<[6NmI^-!QRU;%]4XNUQJ*,Ka#TKQ;W%Br,1Gq^:+r9HcLc!P9t+7HB&.2_UGtNMMfX*mF:QWPfs7'l-mts[QgLj<N,%T8XaDt/VDHB6)t1/kVOC7I%(/\ZQcQCoARa)2'bm>O4<7>\tOk6\31Kp]=D<9'Cl&9BAeFENUWp,IWkoB-Y=ehG2.+^*-^qREq3htBIRGOK8dht/)lFit)WMVJO%V)(,KIZ%sP<Ko\\k+:"ueT=:+WQVd:C-&-c1Y</EAMp#"PjP$Y)cb@Tq3JXpVK5M;D5uiBT_*$Z40#14Lgk.$dok7(mAuc%\@-_8%eT=7\TU-[#di#9Rkk;g\TUO.s4_UVB>u];+XGlMERa0d(m%TroL_u".^8l!0]1T6^<7;`8d[At4[s\5n;$'#-rF0O_h.1tmfBOZI%qR\a-(-_]L#ePidbf&j#S'CE&><utS<dAk:?_+`OiJ^NiOFJiC.9+a^KL@\c[Z6&/(=3aDQrH5<+f.QJW@Dk+]:=%QC*SrS`;lmF%Y$JJ&a`o%aWJ7[NPJsrQ-7T[30l9=#8tO:M&J;_&:Mh^B\'E4>[q/]JFLUp#GH,_e*4k4#>]XP(]A0rl=s\sUgmM/_3@gnHZpDQT%J$O+Bh0*j>C/1>T11Q`KEcfQsD+5*LB'X7#6m'GFU:[P2\J&`8CbE;?[WjVlhn_<So][rA4c.JM/C&IJ7;7(N\D/%To"`UIJkl-j%FHm)::hRE7d#L=f)'''U/MlmV$L+)IBQi'1(n,C&E*Q`U]i])4>[nEbU5isQ:Wpl*DV0Q4]mbAm&NVc!FNd3e6^b(NP\T(p(3XD8%6NL-=lj%aI)[\j`mN6M_)[_*UgX0lOYo2lASQ%dj^D)9;'XTh0>b$4tE#d^$C'6u5Zg23>&r<6_<3dHD$JX1<@pk<(CX)9tckk9i%N)pC&DoTCN'bCE#a[O4:`rK<kb"QZa9M*nk,,O[TY?$"K%p,*>;'k)a%Vj0Xgh[LDIm2XZAVtm+nbSiq.]DWQ=#Uu5MjjGSZ")J%%?0e5"Zdh!Vn_2R^KE/u+=6CK@G&U'(!,('@WWaf6&/q*Y\DCQB>6fijCT[(16O%"EkFdpQ;$ML8)t'Nu9!^VI2@r6.bnZ`)>J8l&%G?0ui>DSukB]9JF41Qfd[[tRn9mPLE'?N2pD(gVZ2r&-5P+:$WCi[FaeU=XbNk=t&\8utr3N@P^^9I>,7r`UoU0#Bh[/eG-c#Ga`%FG.9j2CklZ=$EqEk)W>eiIt]#oQo\*@5o4ic':(/&=f<@F']F'@PM(Hk-_G)+srZ40ba>n]QNMoNJa+QX.i-NKNH)G)6fM7#C.oc%hD^4$9MUJ4r$S]E85s0>S<PaB#AKA`<C"[t@Tpd9$ok7`[g_#&WD!Md8>VLo-ND1imsK$l=$E]c`+6</#i2%b@;4>7$m3D+hCVLa%f/\QiLF#,@Kf^E#;<++'R\)'aig4e+Ug*/r7ncNrJ#p2mUT'],okd2VY"dB?WRgfP3qKb^HaL=40=G;KX%GS;D&<b_T'^;u!@>cd%cW2p+@Km*46oAl;TB,jBMRW.J,<mGpg"=u+hV19,EV]1'Tps'Dj=S<dY>Pg2pD"dAM`o4Tg<0kY#H)`F\RY/rV?lY]['&gr;\/'^%c+S>GRQ=HF]n\2-HYT#!_Ze;Cn7KkQ,cT>9\hZD-d&cr%oBsZb_&'F%]P#\g@4ZcE.;_+HU?$a82=8n#ksRb[mU6JQS][4&$@utD%V<V#aRPso\&!VDDBjI!60Q?kF1@!BN6Nkut3N"=DC[5d9eDrbWY*jCSH%!nJr_:MNl7:jt(7gcb3V-!=fA9#m:@Z#9M6a"c;Vu3E%l5me547c2TL"i>6B,>[%O5>ZR?XaW0o'dp%SUH]FFH/%lVlm3Kh@>_e#7s8EaeGGq8JlN4d6!oi@Z?cBd2L?$7@mU>F:PcS!`@Vn%?4G?<@V3ApdXc6>fI-O4-JJrcGtHHLegaU_&1<qlQ#fjWA7*tGhpot&32(,/1Q0^U;Vl_8Q0Hf#grog?goRgcc)U&(GOjf1<G=?Q%1^,A>SFMe\d;.S.a]WCYGIR8tM^BjSm*a>*MdrKb[7e^)ZU2es:V7`@TInF_Bo2Vdm#BPpX28rC:qLsX=M6M%ZVU^2<u`3.D3KU#%/aVcl`b*0Lm"@_2eOZ"jAZ)RkYD$ggU/bq@=,r6oW7]@>aa1(1X^;GTAsTj&BVHulD%E<t3\/L_?Hb$:=Zn:\+ojCDO(gP4(bDr#%Meh-m@'3pq4,]6U7D4H/FOaSD\20=Y]OGH%I@UQuI@f=[AV]a71X2pR5:[ZYL5FU[reS\P:]?O_o>SQ=$HZ?:Ze48@2X<u4[;)f<%[E^d/Tqn`=l'8>ja0sj7"sqf#I;uYu-+.NS!Y4rFP]EeM\[!Ue[(Fc=B)\$[pKktU:rb:HkjC;d]Ob[a@!9$Cq"<1F(;P#mANPe&%f((dBUitj?98_EZVm@/XWm%dUYa'6;,O\I)fS3CV:29hMT0m'g+QfU,csh41K.9-a21Vb'jE7I&S^me@:H2Uo$IEJr+O4//>Qq'7%'oN>r^CPM$.R9mhJ;@[(<rjfC[+62M)QS"]!1h[@at`HV<IcDEXjd?Nf..#P<_'RrV0pR,AD?6E51Nd7^e=K(Z3l*&V0mGFZL-dP%5+uT,g-OEk;EgGn^an49V0o?<,QA@BnsSBr]ZWtD*8Ou4c)#gQX9(_G1IXn]O^2\*q5o,#T+,qOMmK)shWs@gCoFK)ohu<:#A6Dl%h<VQ,5,D!Bos;B_DkjY4%.<epc3bFZip5LfB?YahB1$NTYFds*n)@Y<l^]2>k%`(drTl#EG*L@]][b?i>:ZC_HEWt6cucgVNUQPh%+L6$ghZc#i(uFRk4WpL?Wghf0B3:1-FfMun_Dn]_2*;7mK7!Qu:]?O/`4*D2cdL2%YSGp/]meOHiO)FRZFJN43n-%B"hhacIR[n3%MWeo$+5[QChUf?jcPd/5oC([F5O/IfQX`#0'Y`l`;E);@cbS(1h<LoPSUoGQ?9att'&$Rg1hV!6?(OC(p\NRo^$arf5O2PPA5;"P%?9d`bf;a_XXmYj\lF2^s;0U=9`qT=4'+fMp41Nng6It9dH:R`"*EkgMHlo!*F`NN2j4ij*58f?PpoI]EZ#[%?7GWU`DVP0%p\J$>%o'"#E?/4aYB#F(<<t[Hmhf@Z#9.PjB@VBthTCmN:Fr/!Wp\JU'XcF5V]oR*F9cE0gna/ShjBMSk^Q6]4&X2&8%BFh5f"6f8?]hqU%]mcEgp<'Ld6H.=Fp\N".;HEOLDLJ^\[@:[C@r'ufB76i<eu(E_p\J`plZ7<ST7a`,*SfsnIB28Zp[N*"Kr`[gX7uI-?4=$KePF`=%<qlHmVNTK=qO*mp[dLhXf%[fY<c$fCrN%q=l#KB8hs4o/0</7TXNuTAI]qYkGtTa.eus?SM(?'Ff2#7K7^r52]R*J!YFd+2W,;Ug%mTr+na&%Ru\%gP@\fb%\aBRQfV]DT4<kfB!bje8*g3`eBSKPb(YrTqKiOs]#I$h&)oi'2tl2lu7FfgLJ)W0jnD&b+-3-SC7/(jff%JU)LIo$OUXNH]d6c^">@:/o`r8pG*Bg9od^Y:Ei,E0J4Mb3D^dA?)eb(NNG`<rn;7N(t)(&@&9"-e%Zb'8]cQW:l4>IsSo3S9[Fs%Qhs2;@2Ke!TmA37r^Eh",m%RPXSXhckh5-%0f=:9YAXpROmer-qi`>K+.!l6cSE[hT%cCHI_DS+CuVC@E,kPLB7GZ\-^QL37[\/R%UA,9_O3Tk([D]^hlbhK+hTZ4Js4QUCZ9NParql\C-HP8_p)<Vq@<-Jf0^526`]pU#O)L=*F-iKqb>\F)*@PpApSUV0\GYt_0pCdL%;NuT7gR5Wigt[1LU"?Z,qY7T/*Rk!E;9YVEM;imVN$rZNp"A\k&'X0mqo[^kb&ui_kG]e0=uJ\pZ,h?XY4?p;g"TSE2Lh<kbN=&Q%:g:W56T"J47uu19TBTZX;*Z^?!K$6.>eZ?7_b@XfAje1D$lJEl!6knbmkGh5Y%S6NrV`2Zm]ho.+4"E8",cnVH:L+o%onda8]@Bp%AU)@&UA\gC@pG5]aV5['+0j_liHW*qdCS[CSbU"IC,o;AS<@ej%1UgU&KOc>mfp.1Ol*A:E\D(^EenA+[7m"f]M?4#VFQ@;m)<-(%rO-]+]_:4Z1M*_9(#h7Q1&kAB5N"%NF"`ff!C4<pOZF%+dL;52@2p">2IFp'<R2)7j^ObUSlFm@oDADcW,VK-7_`?p[8@X'mtQMr%5K,Nn3//VdMZDItcrp]93Q=PedP!A+ZcGD$p_a!h+6*-(]PkG<Ka/u6quH*:dgZ6"7AUNQZ!r9q8-%9t&^#lWb@7,LWK:QgkBEU]%r8EK7.NXi%Hm'#AjABgANfihj,_TO7I);rXIdTUMQ&@'J:t`nD;s?^sVS&SrO$5>IM^q\SnLB^(FE4<B6T;5"I@"t_jd!F?'$*:6%iXeTU*("-F;D7Vp:kb`,M$b4io]`I_riDq2fI`VPJS2qUf#cc9LrB0nbSWkm-BQ5?!%G+%G."@fJeNkKIR*q_DFsa0^!D0]i6Nc3%G&]=6iS-gMPk#lBdG#4S&H*qbc"]X8YrAYK2]t?Z(s0hP`s9_IZ2_7W>[Y9Fg/;>Kd_iKHaYes8W%&<kNcQ$cij#&*Pq's3Y/.H_%24l93e,DO!8bl!I`$9$cjo[(&;hJ!CM$f8H?BLkKD+:CM)gYZVim`+R,+.ad-LT[/7(2PH&2=!PC*a/#T1G)e40MV@Y>?okSMi(u%l7j-/36B'!L)@`Z.K&uQ'>GPO&^mjaL$q'IID;3`nJV%6jV@IRTj,K:nEHHh]D1pTZ"P_":@6R5s/M&^q^8'S2-o<RFUglXESq-5%7O_,DI/WC<FX,M0csn3cg!;%;7;J5.SpDS8s-Y841VFEiKNl+oH?P)#junJahO.gadHmK!OPu0>+<gs,fE&@>3:s9N+nD4$4n?jk%W,RX;&_]Ga5qGc=!;,N(ToB;;;@lD!PQRk;mi/f;33Hf8LI,&j,t-i>:EcfYAA&VlNWmupaF/=FeQV3".'=)4&i'sUfF!3*;pLIq%HjTY$$(qaa+RFYE;UQ^[4H'8CGYK5PcdGqeTeN>BKCobkG0Z5u5EDi;h)#@!Q9RI&&?EAJCkOL%TTD\u1b&4r15+g$9lcON]gbk`%Ii6(E+A:0o9]qfmC[Anfc[gBc&Aqhr]8JZSrO&d&RcfmeQY]dI7":8W.BXG8k453LrbJ7k)s<pj/>P3'(rYt/N=&)83?6S$pe9MP%%[!Ac?Qc94<cbbPk1R9]hiO=0$GP-.,B]l(5Qtf]pdtR,]aA65<<FWkPgr+<gdn=G?p,!)F@i1#:W-&j&Gd-,T>fl(^pW-j+(Qm7%K#/Z4d79V'#Dt`tmZDs^gl<%?[)dj"db1fgK-Fl!qO<_siQ1#/KL6T$O)h!N\tRl2?8SqU-/N2r]"QT]8Q^.hH-$9:6dgf%jd52f%f.Dq(<.n"$5Lh*]7mT[gYF&d@r+[X+K%,r_S3Z9A?(m6GHr%ULFY^t1M?m!6\t_<R6RG)QpXjhX8-%;@8Uq2ol3lPrMH;YIW/k_^%#`i^EkUuL6UjhZ$cp#1^,S9n7:\ncn-<+&/^!&Q8Ff1rqr1Xb=Op"X9pE)M]=93[`L^:>'o>qjlhui:"@kTtP#s?H0ks-T3K8pI!%HPH!)Se<P:S$A+tKEa\_C;c#aq[U/6aIR4'K<g-.2;<-gS[k^j+`6IS(nVbkL/'4j'k2(!e$[bf0`[%?K"P2_U=Psk%c_M8"lM63%1XQ2iG]8,U!Xh(fen07AJEF<BJ1+b]]3:(LT4S"=W[=;c^6H$nLt_US4GFBghM0)I$W@$T*jYu(nncQ\GN19#X?!Ni+RkaELsF59%5p!-FjE%$SZ&N@j2I&9CJ@u=H&C$LCEOEZWfhktYNJ>jIRuhZ53aq^kB;>9:0CdUQ$rr6<:i,N-N0e="V<D2u5g6["%03Wfe);EH%bcttHHG+J];"J<'JB*06H)%dgS^*NZT[Woq_SP??`^0dedkOecE0.J=B/ndD5!.eY.4H!KBk`Db5>FW%;Hn=1*]:m=G>IhnJQL"o%Tn%6))FA]V:?UjTrC&bu*D@cR;o1__+5?gE(;bCt8WsnKiTro>#E9<E!V\]HJ&\8i]'Pc5"bcXZ6K(:K+H/3cPf*8lZl:J2`K>4@%r\,ZHr1<0%]4k:Q=.+RQ2kL?*nL;4dj2<*e&Q6BBL:TuHnN<Opoc!;Bho)n<mYC^l<4s\kJ']l%&(T!D"!+B2-&VFsY<J>Fr$mRQ%!TA$e^f2T&OWmDM?'72,+j6d+o]NV#G3:*'aDrlZM<sZNPOe'q0.'#)h2Rqt\E#[t_!.Fk&9Y-InXJiK%$jp?gWHXd:RK73KL(/g%,GIq%SYhHE01RW:W]6tj8(!C89We1uc(A'"2bHhIhNs_\mMtb2GC3r#@(CN@+WA0q=4THgG[3Ip+_KCrD80G(Gt`TrDO10P_IKc=%TM^hDdMSU"nsU?)W;0'/=ZAl.o_`F9.o"[0OK>,Gf/^2@FWZg7r>o?j?@qAW.C&2%c<O'tO58:[2u:K!+::Wr*;oU\6>Uf7`';E8%njpj:<8<5ndK^CCO0i(?WOMeE?VD7G^K=nq6;jK/@\raom?1[_I`sjd[<6N5j`?O?g,ccucQ9GdDf)'#&h0\QDe8oDaq[_AZoc*d%A2KG,3HqR=*;*rGZba[iljgXf>d6tV,]C`:8TE>M2u<P\j<rdFGCR8E-f)&O9s.AcYk``ldd+N!FQ-M0<oP872_c8K?EDYPaTOWG%^[n:1fip[TkMM,.8sMdX/FBh7isC3aQ,+Gq\ksQlT0@P;<:RsA.*ofpc_b*LKXFIj,r;(k54n"7Zg=t/\u=KOPQjl3n8F<7M9Au1%ch?\hf_jbh<mEh!k9#V+2sJtHQsbOlY#K,dKiRH,#0WWJT(r)D;6mniQMl1Tjp;:ABd#\\]&(%ej1@]4:-F^Jh=H:Q*m.r@=AD9m%M8]QH,cGM/i_$K+P2ro,_49p+<X-\8a%$K?DMaeWiEd4J/ZaC4JS5JlM*rd8rqbnib8:qiaT$lF#:YGH5EgYS-q0l(X>1uUpY4aq%;un*hb+b#E`P?Y2b%P5+jkKIVPgR@4Yf,RHBaXlS]ej<-0SMGjm<!'bBOT'F1L!6;>HB!9X@en`8I:5n`t1r]Uo]oX>e]#F86IT9%Tl#n'=HKgpNe4P&A3n@Abogk[QBsk+*#l%L)6+QWO#aSrfS"+S%->u6@ro<Q16b^!/M("?\d[]M:1Kj-nM6?X74:0p`7)6a16g6V%-uh&eL<ECg(SQNL6^o\q3F.<T`uAp/%-;RC8sP"_?l@,O,*]V!B#A1.Vi+A(h_rYS>GSCP=GCk-#c/Ne^<&-pdmY\HfTo6tTq!`%%3DGGO012kJ,eEe,Pg`&Lqo'APALOI7:pO&<3#g-YTsT[HFdJel/j`u`\a_G>dmYZF0tu$jPg`&LnTrtBH-C.<aoRQ+/42F'K\Dm8%*%aK[o9e>hPg`&LK.R4A/42EDV(%Hc>)%(/#c1gS=a(b+.1XFVD8$G?F:h-@fS7RG:._EjHs(Y2b3:+7G4B/"AZ3!Q?T))BEk2OQ%ZH*t96TN*d0>;88%-;RCb$J:U/OMO(K\CUKg=[[793Ma-=bcK/=GCk-#URESRk@&g?%bNYK>:NQERRCdWl1>a^f@5]<,%7i0rfOC%02g_7WiE_'H53NG%,tqnh/b"c;J"W_4dV$uk3<ZeGRKI7WlCk*m9&V1&2ntFBs?#;KsP7R6r,BN_ML''d8R)6U`af*-q8cqC/i9V%U#XMYcT6WiIhMbFTm;LF*X&_>Bk&+t(SCDr5quftXPgVtWAB7QX!mCic6hbn;?&NKT)7T+=4pHfRkWRr.@-^3S.2>`n'-/p/Vlmc%>ZurmKE@:J4\=ck[g,EA\^1'H1t0O)mtF_Gp?D'Hi87r:6!i#Sd)u3LH?MC#YUTn4())e#\kr$LMVs-(YP-hDOFU8-6WEcA/u)=>%-Etp<"of2_[e%<B\MYNt41pR4nqRk3p7Lj7<rb;q&:UVLZGSSs9!#!I_SZmRar`dPi`I6-0+Q6k[$jgQkSLSh@TPie`bH/AdIf1%%8V6n%(Gb0+^"S%-3M/sdm\h5">V.:O=XJsnA\qT(1jY5l8]rq5fWtFl2g9oth5CkoSJ<!\W@F,IH5)%g\-TfBa=EDY/p0a4MEML.%(mtdGj#;8"=AUV\39QLWL!R^Ah!cm5'c*9;n[ii0D4'R%1@/!BB>&tpC>H`_WquS%&ltW'bm@td2"]siPkW=SKkE_D$d,?).k(#h%PB%ZE93"Ng<>bJ[CJ6@Q&"_SK(X"7B^p^QIO28?[rk1O;O`',B!rbRe`d'L7-/93X_B1=T>4&g$\b>6"flrWGGBN9C[:5QW,!Y9D%#*X%Rp:EDC*^*b-D_$*WdOd@p6/s26!:V.8clCmGdF)&'E,<&jG6\'8iErb*-2d4sMhk7Fch!ZrL_:Cf&.HE')NWpNJQh3AEHPE'%1Gn4="l\"H?%e"h!;RZ73.i;[nE=4s`dQfpH6M',"MaA6Lj1`gVqlHHNO&(6l2HE-M("LZPXcsC`((,gj-=9@$-t=4eJ"+%ne</^%So?OPm^a6uMT-=*#bHT*9U&2g=ljQSaq8V_qb8&Z19;C7!ZEl[hFToR`"T./3>["]nZ6IR<V803Qt0n#)2fT@I"F_<K+;Ueip\am%K16+u.`%><KT>U[a2/KJRNOR"563_`7[+'%-o><]aq@q\[pfUMF[lK?0H7#>0QVnt-O[W7n0lRO3L7ZE;=Q%V-fW.ld&/u>8#Ro`%aCp0X\]7LeKRa/#,k(p2K#a8,ETe#hV)W/,Lu[H>BETSQ0R1MEa.fd$BS+'>7(NAmn;N"/)WE3l'I';j3EF<W'GF2;P\MsMQZ8%E%X.R2go+LMKP><L!*$p2Lkr>n(&S5[5K7kUOP[S5Wcd4AsKSCF[QqLjQne7\.0SKk[^b_:8F.2&9c]hk5D](I9@2m"7B6XbJUGtl]%N8cjKoPkXh8]#RX2?j#739D-(-:";5UhDC-"-T>HS2(MA;u'"TO!\N?Quf6u0ee;,Ks?f4E?HAT%!JFq`kdT8VW\=Z+Yn*iDukmE%,Y46=%nN:$0NJhO*#">'1d[+\Jn.dS#o0@?9L&phO.QtO+s@S\JRQ>Mi2d';FB/3s5\LJM./7"l2StY)_F%T0"(>/sK_RsnAtT,o%d`N5S7n?PV$ulp2=>D#;OsFLUWB5[%=enC7BIV7E/=s_R37%*:-kSDELa`$1)5h^1A0M>27u2g@LCD3L0MuNo35=dBAJ:qm,WX#L%LbFMd1;U#`Lf9\Yj!4%e_]TS361-`E*n28oisF'C$q3QE:2In%\@GUc7Jop-21k\`OBbXb1mM\RPic]X,tmg1^`a"bJAhm1"e[]/%PmAd,R\>H"(UYr1C8=i@=W!aHC7/Wm?GdrU%+pA6P?<++bQRd,VC;t,!.9K7n@Sg/'X+*R&gi_#(_(tVA5np&\IkNj""'%=OH!--%#?X;6lP1.8l=U`VUMmt0BG^lR+\ZHP`?ET@,!cOb!\=qk5Va"+5\2M0!iimYXjAJI>Og@EE,k(gcE!RnF!uLX,LXUu)%n4T<]pK.%97VWi:#-.u!>Qt^Yi:Jo+PjfEP\6Y=ik3oRS>CM4UBEK/-PSjE=HTiik2:^8N*nsXXI"JB*(Q-C;5'(37#hD>i&!nlp,>D$3a-Yl%WigO^c&naF8!F67!KIJ4('b84fbhO]5V^Q(+qp.!&"4++P[oFpaQJ*RiK:D2]$M/4*7%NMIoqPi5Uo%\W1P?.2aB([;P&H1-9+i!%,P<i(lF<co"mAL,_[HO1Q"S/q5ZS9!JY;`dWCK48Ajpc,JM83?62U3Z_(ZP>BP>N'".bQ,5]kt!>-qB?!6>JR'$Mq[Uk&cNWh(C*%cUlI$fp@[Wl@HhK:9q)R/6E(&OsYF]28r6/kMtiq7*he79dtK7paQf86])Ik5;",3FH42$"Zh5ZilVq-7@[C0\Bl^cgbKIg!]aM-%*8DWnTJ6lh>QWA.ScAh%G7H#A7gt('?goI8J^V[SoHOD/6Joo25e6K+,Y0&0*0r"W#Y\J7/KPTbQ91B9\O58ZU/_5I=_.NjIlSDr%!t\P*`dSsX.M6n,oL-h?S2F,$,U5Dr.HG`HB7`r':_[#?iE:bF"L+uKK[;f7Acr&d8#dtiI`19Zq?`79'_)m:#7?V>Kf5/<eY#89%g]mgi3.Z6(E!uXTGs65!`c2LY,RfGP.=ijtCqLlI'J&Z)_ZH;PrfE_fj9"9o/'*c:$"1K1+!@%*0ER$;+'9_Q&bl@"98LlNcp*Ue%d&kYZpu61F<tnSdShYi"OL;X]RAff+1Q%*kSfn0!J<&>d6&8qRQ-9XT!]VhO?NjjiW)BH,n0Lf.iIFnIH'N00dqV)RK,'B%od$t.%ZiHF_f(^1KiuhgXkfNjsZ8Yk5*(dRqT-2u6kpEP5[K3&7AZ0"77>c8o4if(7HMau9*45t/fbq8U.S2i*i!4'qe)dMXVbaqnV9\1?%Ros)`:>Q1;XmBoC8:Q-7fA#<T3n`6Me<mi@IP^[*\bhJ\GMLbaa]ciDY?jJVCAdQ!R_FI_s"U.qf43rUs79a<cqs&'X/p$kN"+7c%?b@E4Eq@F7T>6J^H:=EdT&-s3'1\+B*l]W[ep0H1=Z9L;s+W,9eePZ.W,0h#>!1p=8<e;!:VRFZ/$ld_-k:gR_'rnsBDm;u5chJj%fM(ddmRY!>heQ<bPKkXFrU?&#ke8iroPm$CXY,0#NRnP"+5'J1l^'?\ii.iZL-21!Ve,J^<5nsek5[N^S+cN>9&#"bf:`"WGR2WQ%optlC>SbcFZn$>j:"Pi,T,WLf7G.+0\3-dPgfbdkNRSK@;Y.bGl>'IJ&&Be/02)!3Z/!r)NH[N;:&?(eJX=^qQit]oLU4H7m:(3[%1"drQdAZ'5?iZ;gW;F4DB@-/XX&&H&R`R3m119ut[X'5/CDk.kH/7)4oG9p7qtRF)aeIG6lCV$$D]]hH0;OYSI3W%>r7LK'#7$%?%:Ogb@A)W.;&4W*Pea"#smX9IlX_J-*JVJKn388'2;Y*RV_jpSN)jZ:k6pen-')NkE>"\QWSpMXXOr.:PM(;PY>\&+u=L1I*U>lad%VFaHe0oOJl]Md';S3[ECc:u!j?%%h,LF''tj1+N2n2]-+/alc#&abBJ/N/[&%BWh2rnOqG`Z>n!`ipE>Eb(E!NYH2Fr@kdEGYH^0%DP]N+j$`0EE'IZVkWJ6Vj=4'.3b5Eo]0`L]O*^:,8tmEPYAc\'O+oGi751-mkgHQ4T>E-C_4GG`1?n$*b4=D[gGt+Lm/st'EL*QZ%FPY6OTC5]oS8[:[1=!AIkpXNJMi]._UnCo):3D5=Ff]A%LUDk#Yh*6=0><IPT%5J+Rq<?0r/pghC-([('aq^_:s\sm%I%X81RItc%ej&Th5EjHE]MhSk)l`k$`,6QG+8mK)Hh?)Fqpa7^AVdgZqiVCX6kVFr!32,CH40%:2g&i:%rV=\4466e]R\%:+M@L6;f,foZ;YNe%o!fRd29h6B4l0NdHcHJ7Z,HV:`anRe):Q%6e&]#`Bm*YQ1BV2V832.F8C$^2ne^/+Cgo/N>Xu(Tcpbu"7-D;6njao3<$0l$=`.0P%k;r)/2lL$.B(^TZMc6ma^pD3!L?=eO@ouS:@(r8XY%$>dUt#2'\-c0-L24:_Bh&`Nq9aTmiuJ\%X9MI&5:f\S33?$Df'=60!:.ii%!b3QOT24%3O+PQu1#uEZ[OGtkaURJVE7gK00YDHX(tS1tHe[/)%FY"FH-X2'dXAFIm1KWh[*l#BaC]7$GgLQVIV=Af^)I.FV_MLQ%rfF"Bht8]E6%'kd+f*]8U2"=@l6h\on(>[H2:(^;H26B]oCD4ZN0)sWd?h.5eu*YQhBb\/(\<lF-"Nl1Ra[=%a>f+T3(sb&>5FcZ%Ui_>FCu!$uFIm1Jr@ZU>(d))EYcf*4"NUEC0(r)grYuJA?<?RoiZSg>o6TM:+856bs7t%YhLFc4Wr8;Iq_%d=j2A<kT%j9>"+2<b%[H.04Q7!W^%kW]'L3MUh4..60"N*V.\a/AK<EjB/DX[Ob*t);uOU\pMhOJU?=0%p@iT)q\0J`R-M9-J$ZhiG/35)r\0Apg9j15&\%`n*>NGG:lg+4D%k;7q[\eTM*MPe^]4S?/^Mfn)Q'!$h-KJfbpir?o08%pt1l-iCiHRcgaf]r,*hoC(8>eVHWg/K)Od3U'VL\@3DR%pWdumlX]nT42"s4@3N1t=9W-%8*GQFQQ/ASqdSioe>:Sj2g6=He?p%s1J6Qaj#+.I+<6"V.G7Xu.:9mL2t^Gi63NhM,f[%I)43r8%?A8n>p.Gb'LHbsU;NF$5Zi$KNcX"b0o?X6K%b1Bcg5^iM2/Y5$m@]d*^3!Ohb2UhWkk()N]5HGKon+kBicQpVrM'ku+&DbCRI>SM%fhj*t`GPRA2bI&gD0hdW]K1N<%dpC1BNaIa"K!AcdN-O%e5GR6_V4jcXks[qgaVF4f6;4b83Ds9'4HHfM[47h1?-]1c4fGG6+KgE%3-;F6fm[S+f@3mTePGE.l5,VX/$J4%EXf>d^\#W34:]C4-9t,3+#a(p$$DO1`_"OTcjFK7514u/cSMNOho.e"_C<jpTtfrZcr1;^%O?VuXcugLc#LWkNbi?-O("O`cgrIc3mn)RpERa)&fW1N0?rt4d-NM*HI:Ts]hcKW[YWfA$M#&=>rNTOlh7-=0Q?W'akp"iAl?laI%nm5TMb0nLpL\<jlgZr=AFPEo^Oj>H_jZJ(>*tOYIMKL$P<YO1W-M5`9r2pW2aJUon5&M4X[r%9AFn$YX/q*\<i*cY>WN.@g5Y!e6%n2p,^ks7,kp?UNNf>CMNs3XPF`qnr?ajEi@KX-Ahk^RS]>\j<1iU.)0k7!$;3:/.s=.K\FpVVuWn)o$f](V(Y-Zt"4E-V'Q\oCdG%a1cO5(M/2iUTa:]AG\+,'\g.4CEK7GR71uT;&q^OV6`REfCS>fU=`cN5"Y'#e+9D\ot.t"b1#B"48Y2P3Qkn7IG86Oc=lM`=C=1V%\ggVTDD-4^P>8KO<:E?tIWf3Ns8A]#MnU/&prBZcQ*.U&;&Hq!,tgbtc,XV^W[3c'Q78qIc&C3NN0=PoZYumfTj2.kCT*/>+/c^[%77X4_ha(NWkAn!7YKXl12m=Z?qAf910)ZdKf#/%XY[&>g4)li"+Z?Ds/5P>If4\]hF_/iN5^VLdj8W@dHAEm^=VV>)Zt1(LL`(Ee%;J;R5M6LT%pghE%AudHW$G\D(EhObS:Y(CdV)liH!sm6&_T#"92b8^@?811pIr567C0eB?J<d[b1C&"cpq=lEGEIMpr_Qt'&*NDL%(Y6RPK9Fg6r^'mA`Uo4(h#q8/r"qKUamLW0Q%AT#M_j_P1%^*U8j=DN])mV%J#eEc@JZ.mdFZRM4\j5Tp7.U7+F:iFa/"Np_CH=j%-]b.-:SI6@"$#+trr[o\kUWt`N';X5?5U=FZR;c69A^+_B%8i;GNe)X>f0ojG2XmpLZO^[(-ti1eb!4mR%#&Cq?%(;eqT1Q.EkOo%emnZKQ-`_DJeXmWWY=-aX5M=+gF2g&kf-u=-6aZSOFc/.jas5Xp8cOKo/?&c[<?]lISJG4``r*pQoF$]mJHVlNs9Y?AZdOPo=$W7%S,6T$P-):[A'u)62E'lu%k=o)TVW2q&B3b4kj`KT0!O*Z-h=A;RKG^T++A6/ri9C["#Z+R;NoWHH,qTYeU;'m;M)K1D`Z24Xp4eM%ZNf0\)e(Qp5GW7Blh-bZ3qsAN//T-BHE=(qH`Tko^,Lk0ZQ3Ro*CTGE("$Og0BcZNfpi$+>:n%9``fX`E_CUl=t<l5@Is/365D>"%q,+NilpE*5L=MK,8Y7QK_VSnt1rbP_aW\9mFS>SC]iM[=X/l1-a6qT5q&qgPl0#uI6eDrl-qQ'l+:'R[)(qnBe.L-#(ibi?*V(p9%XQuT?.RCEV:b!/[rQgOY_1]Z0Pk?NV,@f1!7<M(9MGWS!_B\Ym.RO)lqruM(l,aK+$<gplLF:i>0sK`>^1:[pBQRX./O]R]otR/-%U9AZ5ifJmYOAC^XS%\DCW*0POPVc-/ehnskXBD0r?$.Rl5^S"WjaH5*%>%X&":3t2.;W+"^Su/F,&.>#6@?2R^eppbVkF-4Q-;$@%(TIA4oU1!3MfBSTP#^9sN:gKC6LOSJ=:JH>a`3cPjPilqQUF@rJiY:mViT$YeJ&0(ETns5!p9m]mFMm@qPn`[=sq@<('cPRL;]&8%CS;iXVkuX,S:77>c1CJ<EM)tX"`=@eJLEj[]WbTEdMF=+#Kq3S?\5lZPL_fI6p.1rU&W`UMVktsVI)F)RjT]t<jAN2F?d2D(stg#%V@O+`;7aG`D`MaIHBLl?"V*j=LP+NS0!VWTQ[$BR3E:hRA[J%%b"F"PD*J@?!NIqmf5P[n+o(^I"[@%\:P+;&K,^`_Fd97s+AV0,%]NeQiqQt!aQ_3_noY0'@+$nuL@ji"fiJ-.YG^]LW&G)XcrRZdtEbE'>])g)mbjiI/WP7flHHl?^R^HOB9V/a/a-sls-!"X8TlM?_%*P.Nn0]R0V@G)c`U%SZFjKktb9>AY'V*3F;^2L,Smtf=')#9?OShG#+;,@7?N:iI>i,_uS/"D6e0$s\D<ab>7=K9NYI]SkQf[ohs%;[h3'LoN`>/a'Mj:'K/ugB'HJiWda_RX8aV>nBCpEBNMN5M!gpR#L`t(TkH<>XADDKKt)UV&8!DY9OZ7i'Fr+S&U3_\#p=n'hcGq%qAcla1!'Cj)u1\W_jPl$F#TLT7Ch_r1<IMaG"q;[@[,s:0$@c<':)Fa-Be`Gm:A'3S'bCZ]0P3e![CVtoZ?LXoBZZ[m]+P5=a1iY%fd9po"qs%SFe<5!0oTEq_dLVJ,",$/K8I!WLpsu)-5LRVXX+(=WAK.0PI0>QF0h(_(O`9slm-30C0+Vo;O3bq5#Xqpce=*-`0PB&%7M3at<*I$qJ\sJKb>9CSRbJ#i/ad6bOdX,g<r=<!(:I`m2`?J_;gC\7<M4G./FhLC]sK0_9%rkfm:d_2HeOR\4\]bASi/.,V_!:;%fp/HA%Gcjq\Ae4Kh._udQL7-\rBAE%4(\4Z&4f046DO#O>e8C=:#--%gO7tKm_gcJa?R$UI`=d6V)pEtNa'c/\stV3HHM>Pn!g&[%F=1N-f!'nsKZhm+MpS"1Y]QcP$f),MWJS\`GKO#mMK:H,M5sCgc;Sp"'f!gd%G_=TZFD3MmNfBbF`4jT,'IJ\96ZP_*1"CgS\>I_%`#/;&a,ThO'+X'&M_T>QRi'Sh'_fCZISP7?#@PuG)63l)]15`Jr3/;"(Q%XUg_qn&#P'=t]kN5mWcCaenXRb_9gCb1;\T:"cH58p%RGojNp<)8W$pRh4YNjU&o\o\J@os&L.c3t6+A7bA>M8EQ$)`$S5JAeGTLNI^3*3lY$=\H:hD-5P^q?!aQJ9dQi>a57JcIk'E#pdE%!-\@%mHM5Tn/'$mY9LT2*'kI5#eOGk-/W>$L7b*@^W(n.:l=M_pHa:m(]%XRX^d,HYuS,SgHeZI[-i,ZAg[)M"(,tRZ<cm*<Z#sY%p:5L**Pu>J35=BdpNLn#p_Mm8.2S"<%m_:YETEf$M*qc;Ke/I341Ll"ZN1!t"3<kE0iBW7S$5hsm>U+WL#?k6oDA!!'i#T;8e<_t%VSf5AK=[,T,d-%i/l,]h=,7)ebt\VCZ]HF7hfa(N/8UkE"h%FAQ`mM&)`qe?!+FOCB\POHLt"a*R+Kj2m-"U`bF\)@>1iDS'IaRg%=k5k^!<03X3+Hn#&A"puPC8?7kEJ8,13Qm`m/%k7JP7;jH@W*HWif`cEl)ZN(m$^c3;/"rT-`/WXT"(Kl+@:J`-oMnBpFDh\8E1)%&`Vfh]D/HgLU)>QV8i<^-0=D>GNfatSCqqM!ECUER=$Sp^ed`VR=P$1Mo>h9JMDL+=[T<($&8V^3Cg9V1;oCK9=?fpI6A8ff#TZL%L&^sG%oT>?a10BCXRJ`f>&^n/9)mKR0WPfgq[t5=lj,BG"GW`MpUZ+N[A<J3NB5qu,1Qn",FP$)V(5*D*Bo9/$s(Jf,]1i\r6D+[%f:[))K=h.f=^td!If>n_B>;O,'m%i6GrcA]V9Qm>ps+FWlf>9ZQr4lLW0$g("6%3P'.r?8.0[&,+nGtq?i0bj@tCuVJ,I'2T.'%'%=6uh0T7?gWJ,F5)4Nb`1P)f8%#O\099f@r47&u*rH:jbQ?88E,cZqSD;'HA^8LQeg@cqad6g9c;I3I:cFkeo1ig%i,DMU.L$SFLr%4Uo$$TAoJ::'Y=JqLpoHRjXCai$[MYjRB,2\I`3g7)RK&;8QUcc)ef.Ms<%38hjfC3^S\:3HL$]oGKlOM6Ajmq#\]XeLr<SgP6o,%F<\!\Mgh^b.WZ)(nkYrSVT=E8GDoYGH(=brI%*+FL]?sd+PbF_CWD%GB`GJK-YM,s5S:#"1(UX)VG$!(0M7oEUf_;k_:%4gDgd1p%MFI5K&]+/t$[>%mi!_.f#H=<Fi#Ekker$)KHhDmf<#KWk,J$']@I$kfkPPmH)rE.">jRF>X^.ZD]C>d$S$!agReuo'5;H$o>;p)A%lb^ZN@bBNdhGiD/rS@ML>>MmPcflB[')_TGU3p:i.l\O9rR,gok$.I=$iuVKlbJFZriIT!W'[d(E0>768[@CPs7r/A6l>lphiS=7%.7T$/4]`rN?]hlQYgTpIZO&Fj7eZ=m#D%@5fB:T[`RO9^K4T<S0<uN9D?AnD-egj!4+`:,A,&a!IZh7RU#[<9I^nb8.R[pFT0j/d%JfnccdXR"Z4;1136HX&Kf"J41X5S?PVRMXOS54q+Je3j6Tu8>hcpep[a]Hi<O!),Pa>9XT_U.CaL+1YVl4#3'E9PCN2L2qWQeCHb%U>1N5L4u.Y,fG"7cUmq\k5KW\ra2!o+J^WL,4Y2bid^>tZ[E"/`NIPgVT$,7JMTB3Z#OXqcbB8;4pPd4\j!qeH#$iT1es`qE$'kN%o=?DUZ@X&*gQp?,)8bM*"?OIQiD^)Ch=@[g87.&H3d.jM5R?SeJ1`;n]qq+!+$0C)K!3q$/e@cE0Je,=k28]A\N/uXcBC4^pceah%AbS^REt\9K"!@:3QQdf?Y[EFn=V.j45]0\$8XdYi(IH%dj+AfX<J.P;T"ZAW_f<D/@Z"uP*%0W?aCO@e-SjiZj2ZoIn`PT*g9EK5%)C0l68#aG%glOQmq"a?@m$a)R9+43[Y0;FO[M-J_I6,&L@UI";_]GFoG,4RVSpl>'I7J$5C-9[A(E3]?I(cfOfFqRXeE-kq)<%E<%RK>AZh!^'_Hu<"#-"Qm:NE5=*D<9iMLne>52Q>G2OF-9+s'Fb3lp""s`He?T7@`<-[Fa=4[#Z:2JWU\3PC]7$6h0nNNdV92b@F-s%q\3T=F6EYZ'[3+1n&3OQ@e)9:VR?Gdah6Zs-;&4n@+fJ8AMCe6im?NEhajSn52Z@[s/3B!fiRA(YPkk;A-FFQ77(Tp=7bBPEit(,%buinrb&Op%/c$B$"28W03Go279n[1,*-T@DNM2u[)2+%,D5t0a@:E%:-c3=>#uOuFg\gWo@QG*.3DB=;84Xg(H35ZCOGgr+kf#gM%4[ggb\oK;>pgQGs^Xm:*1'dbh*(fKHdV[8"C-)u[=9"dFr&i5Ob)4l6N[r<XU2EDgGp"0Q'6a>cC<[KV.]:%qc^spiJ,R\8PB<Q2%3#hbHL;DnB6-M^li:S,0=+8.0+mHU.Sr@;pc9:$JHYD'Y<>U6-K/:a)&qM?mEEP(i$T[@F2N4qg+UiCXnRm3WX4F3@#<dQbs"s?6%mNBQ8b?P"uNXajFng)Yk/]d5fDTl4i]L1T!#bN`'r-`d"(:%B`C*\M1l%k/fE%d7tdROaA3o?*"0WOr1OjgKfhuehCS6JM@\8&a$%L%JJkA:,Ahr/XmcMF[V@#GL[XDYnch@t36I,0F9:0tR$$a7n<FBVA^GX5!W&SoF)AiLIut^F(r5GD7Oq`H(<Mq=BF]D#6<;_bg*.%-kURe,`DW7+`i,dD!Z*%_;]g1q\ocZ\tgOprN10BNQ]u34NXk,f\[W%p\2O6J)frW02Z+dk@V9Ke%WL5EniA7RPe$K]>)\Jf\QIW%U:K%H?J*odEcS@sXT/YR3S*%6.Vu<ZSG*,cZ<3X%[hl@Dp4gQCB"^1*HH[6YY,/LBDHp\OR'<_s?_YgDrQFtJISZf<[`uKoZ+7+k%UhYn.W'tjEE`dZm6tlCfa6(rKC3F'-Mt*oocJ%%\*1kT\@rj.qWPIWJ[gG`:Ec8Qo!F/<eFk(m.Z+Ic#h&gjM[PhHB>aC8#Zf#iR%Q&/ooab)Z4+M=Y\U:['CfgQ$n5s^@$2T_DSSVQI.1*,#Ql)kEQ2I'\`g98X/&AF5M-h_Nj/Jmc<J7Z_7F/C"CQ9+&kjntWEH@5!=%<\7et/qKn&7):3nLkp*iZU6G`@SaFsEijLcYjbr/"$6Jj4c)i333[X`b[&BL]ta^=kB5J;Vq3[L&s[W2I4J)1deo:Lq7&YSForNJ%R353u4&"<4P!?%Q;sZ_'>OL66D`JF"-n(6$GKX^sP]d"H3K<f$ULIim=KZ!qloLGpEQ'GY5h_SPh0.]CKEAo?P%#$R/pgL5]s360%,rD"WQ`.(J=.bu,V0"G?nf3=>'FGme&gS,8W*Mph0?%"lihiqmN?SQNB-4t'+Re<sSokj3'PbR6$,\2a$6;F]Ni*q$h8]j5&G<pf%jt]7Q&N);nacHKFZgW'(Yh@9;H5G.R8@`S-JW^o*m?_Q58)P7")\s\C!313/FV8u#j`2TRLg93j#"/*4o,7e:5@!T34>BTi@`)K^%R0]XaN?<fo`7up)N$UOso3KX/QJ-N46:?&A+]GR`>bdT-=Plfa0WDRmo4H6%>AZ=f5/.K*J$qu=!\2G3QFU&3Y8tg37=nOA]E:.T%q?G$^rLh>'O?F]a51R?I`q!V33#18tL'aPC"c*<"$dhH<ZN@1;!a_6d!,YLBNm78-PBA[;e([;f$H]un,,Gf<)>4a6D,36#5BiM>%+iKmec-<d1mXr4^=a=:AO:%0Dr4O"WK)PFYYa/Wtp!)j\'71&H@NU,rVK*&PG:C8k`"3[D4#JAl.`iXjTkMBDnorXY27l);D+B2`%'&fk>4*=F$4=HmIIbTO2(>d;l[]lAc<k\1?G-#VUXLC2a)<M1c]@?Fj,t3]3rqU(&,5!^s?f=1+;V;B8+C2*+dCe9V"#<>MMF7_i%S\&]cSpYA_Y7gQ>o0PXZK<OM8qi\(j%uK[K.;[67)tnuE-+gChA9Z75BK^dF`q9gWa`8<.P4u#uhn/0^W`iq-lt]B7Yt*NOasONu%-Zu6$XknPGUaNp[;PAWmP9qJ7aiBGOMfJN<A(M=Wd$IWgkD8[==3T9`$QV\g^ZM94$+\A+rei!(MJ?jV*&*M_6HmJImK0XSZ>NXa%@3LknJ6&s!QO1AJgO2a8)>.?Tlkkd];Jq36f/seJ_E&:DJdBf.X"n*o4fBdVG"c>X7q=k%C*AtM[$gck4PgIo6i9_r$GDpQ:5.Pu%1u.(-e;5sM1hR_<8s=fS%98hD8UO49Uo>J`(6Ke\<O@Pp,m="tCP#_H`2,[Dj@USJ?sl2XN,2jBoJWd1QQ2hQ58H.`iZODNLn>4\%]E6kW^)]u`^]Q0X:KNYp`1BEk5b&F^Z2kX9&m!KI`ma4]2Han3+X/o@;%lmuTW^:$STm<qE]or[%0H@TD+_'<<u!IIgU7_%*$U's%5X$3^UJBWg'tL[FrZE'=omH^Ca7>&/c)Ym@?[Dm,A%G%dLYa28dsCR%9B?2n!ZmOj$<E-t4slt2<4@8k3&snC[KOE<T1c&RKm=(l%4gHlN++e9$2*n$[1N,eOR:?.iWVM/Z7.J#K[ZsHm.P%.PRJ$*[L!]C5Z4thf\=d%?m6VW[35p#<:4&3@"Aq".%3URX6S@!8FOm!;%Wf:8XW,GeCLID"HQJj/"RruW8*3B^`^>rsMNm2`[jY3jlRC4@:A3VRu_OF=>cPi1s[.X':HDnR:o0-ZYd*HkM2TGPRXf1d?hIkOW%'V0@].18.S:KR(?kC3B"aoS@;TEV%?a*R7rd?3gB%tUi-D9"b@lfhnE.3XoCq_],Xk$KTnCI3-fmkki@j)H4$gC$"pB5FS_jeiaY%lB@aEWH+e$$?Chf:?d69RF/a&5n-5Os4T1?/ooY%JPn9!Nd&"noN"7s^Or%6/FWBEO#"g:[Zj>(:TGH8gDIWm;me>R-c#;&DNE?^%l;28iD#&niiO8#f^[8&EFs%<YkMRWaqbaU+<,)Tucg,QR`B's+d,Pg]?<ggh%>bVppp"79)h)W@hX!U&)DBS7L<K\OO]30`.h?MN%=<BQl9^<XtNdA0_aWQ&]>9h+&?$F!TbLr(nhpES@*Ht]-g(>W1If.j&3nWXL/2k=lqV3Lj*Ob?Wg#9YNFfUPBg6Sb2J%+%l-*?,I%b,qj>k,tcjF[R0cs#H5JW'J%%"UdN."dd+7#^(5U-l\JH)e<`*4a@G_^]3YDl\F>$Q,E<0J5g^25)hX(+]e4&]OcV>[b&MF4oDI"%gUIo*pZPl:Om3Qg0?bs1Ng`X?R3HTN7mS3KB"lMILu9@TYB4oKE1N3Il`T*sGN/$T.HX\o>9/;q,-KnuYu3):RQe(7$a>k\ZZj%F%FEokX&`15BYC@ZF.1PLJRA_q)f,K&^YWC3tp(3"hgk@SU96lau&XH<c(C#N%dED#%a]KhYfBeEJofb]NrP@:Fm`af9X]&XuFKqGQ%fJ3hYbaWQ7I9Z17rM91jLoTXm<BN+'I=GNt8UBd@a'jgI'o>THlc<,"p3rX-,]DPM]s"^oZC\EH@im=>SY8.-d<`a%h2OMQ+m&9d%$_.=dm8\bnI]%ObMjq9i(9U8MhiQK\N5LB-\NK;Y^>uRf=?d2(S=]cNA&G8-([j&_l?o#mFG^;X-PNH+?XeM=)F[QTa%Y=a3PmSY%C"78S2QaQ#q07(2*(9WNC9(n!NlVM#ZR2Papg7s`7`'KJAWl#@Y^s#H%VPF8X6,(0ZXkc2c+%3:4hCkc7XmJirZH2Qh`n#.1$AO6%m$$/3pYGmu>jUX(L2jOc*iSbm0pq;$f/1_M[S6ksiDSDXOAq-9D(@$#/3sCJ_1%n8A<S:k2!^KmX5WbS8@-4po5E^M+0:spM%:Pp%jd.[ImC&u8_@^o,NDD?1HUIYmGA/KO3ugQ"J:-/'I[#(F[=p(l'eNRk&$#Z^=%.07f+0*E[M>DOZ?\]%JN2\cHAM!RZE@X/ieO_l%ZbD*8Ks,>s)TX'bB@P7P7(GF^/iu<)B&<]4#q0D3pC`@=dVOS=@;g<Gq;%<+TK4`JHiT:QY1`3FMA,^G[c*\\e+pO,.d",(1$%;E%KM!'lG!Uj,4'j:Tnof^rJ+t:nGDUF@')#(!q2C)do\n;;+j_m4)&CfsMbtGOfoHO+7YnK-&W0Y[U%f/b93$2#!5.,jjY%OuG'kMk%9>?!$nDi<O>Ct?=MP\$4NFj;S^j1Lc'd`%QHjN^\]/b0[8ckG+/FHYep/spYml5d.kZ3DBnSjSf`;IWF$hNn%l8j'0lfJ4HnFS38%jJ!XXNg6P!W>5ZGM(ZhR(&aWCLD'a7C;Vq5/TB4t&;DI&D\UgeD\&"\bV+C`^/K.i%5+cG<(':1ON4bhiT*ZFAkpHf1Z6/e+'/8+%(3K-a"m+im!'?ga.G$dC%"F+<Oh<@_cr`O]W?CaU%sQ3pmRl)J9W:?$/o7K==E>dQUQrEP&(cTr,aas#YO[se4&N$(F1H[)aCVNi%$Oa`-$e&Om4["h)m2b=tVB'b#A\Uis/B[r;$J+!N`uoL_T!Y&ZI9Wb[_0/db'Y7!,U\]";md$nPPAti1NVGh0NR/]p0RUPgqo@::%@mE>sm6%:uK*R"F2A8?()n5c8inEr=%c?3)W3YpUG-:Ka,AtJT>df2Bj;qj)n)rXoT:_h`NDEQFf3c\6nP8*R`OCIt;\'u>;C"Pm%@lk:cm&0p)lRJ_s:Y,l.b$f$uF,o#O$0t$1=#.=QOI(JiXFjd(\-.K>,!kI9eb!7mUE\b[2ru@RPIlOrDE30,McBZprg_,/UaW*#%^[4Q!d"TA.8@s=<c5PXf+Wn9Kl>U@u$%MnU@lH(bQb9KS-$<Qc[WZMF'P"%K4Yh$&$aG!I3+3kiegC\;[\T,#XM[`R6D_UN^IIL/%!UIut"VjKE]BcIb&EDQdDB^[B;kH94%'<SFjkEf%jZ6Dh7_%d<P>l%3SM8nm]]W4H#a*!8>TU%UKn6Wi[5Na?j)Koq^Z1DU?L__G%`-JK"3P2;jKG-sDk[^P5g.tF=HUDeAiJ6u+.V3-/[j#&6bo4R'PQ3I1V)Ae$@l_E!E=og4G\=3f`EA"';:=Q)WG!%VKYM<l@Rp@p%Hpke6<4#)<4YCE>Nf]=>Z?>QN)@s,gOq&;8S@TiaQ,A\!ijg%Hm<R*c)tuE*mA:X5ftX=3Wq<\oC@Ot1p=HQ`$;P3'R*Y^/506D.%T,8^=porWFFE(oBXj;qVEq-W"MlVN,HEKd6c0H77Ea$Dj3NNM.lR!g81sff[COK"-?>6%=N[PrReQN]UaOYVZqo2lBjTml+:s"Hf%8NU;3M8dnbQ#b13NY6d6,_%X2,cp?XD_P0*;I-mQDe09o*I8fJ!%hILf=5Zu4H;S&20VKRaLluEf?3#iD=jY,Es..!E@I#!K`OGj%\9@X6JsO6$'0@1Kh;h<ji`*\j#TY2GF_`A-X3,oPQ6#/epZ(ZP.ANlP%tHhaF6qM=78Q`MP>K-Z%='Oj_(>s=dQ4=V0eq*;#k+)h%!ss:rm@<PQ\]c>ppp"8P)sZaK\`=i.GDIuJhr64Of7n\Nf\SKiY92L8[A]A%^3VnW8"Sc3cMr=*rh+_%eoDemV1.L6PQn01<8gGh%A6Z=[ds\jXO3C0ng4!$ZZ$*)gPh.s?j[5<-e'^D;YE#io[>L)$\*G)<SPYpP<QBBWgK=jRM@.CP\_Ps88YY3C2r,_1&L^u.#M;u0%VJ>VSq>Lh;kASKJUNEH+qGKN>aA(ck,<B"oo!'E,q#L#P+3MWoQ)T/H$l(:';a.,e,rmfIO"A'D(*4]a90BOTpRp;DgFpZD)d=OG%O\PFLf[)`OrB![+1_7_K\GO(i4N*qAmS3;'c7=6`C*'CReET]u=G&do%p"U5/OT2u^nuH0Ca^C,h>=`@jeMi\n5P_E!<kP,qr'WB%gQl/3L?K9Xb"t:CM*0L@&Y>\Cj5/#p_Hlscb^RLIXaH3sf^<&B.+((u=$Ojrc@++XMbBQlr<%B<O`p\U)UrEUP`8JpVf"GsX%KD(%#.>aD"^0L)5mh3#>2F?4O;bjATnD^!FccPclQE4>Q8ceA@t2h$K^_.,SXU7t^2PJDN.Uj69*m$n[d@$\MR',*9a_iX5^+eJ-2P'+%%D\BA,-5-JMX(ahD.k)6LT[]3>)h*"(:(</KafUZZBU[gU69KkXb<WdBlMV(KOcQHV/t*P`,\*">"BP!eu=?W.^e\J81A/"m90d;%mT[`dcpA)O<n*/'Ke-bK+U]5maHAhV^Yh8Y4c6`qS?Ao5AGRr:jP-s6cY<aMQ#PiGig7Y!rZt*$9n])&_87*0>Z[9bJ7P_J3Sa,L%UpVpHi'usL<EcS%:3UW&+bs=o0C6n-S)N"0#Y>H0Z5n6DJ8&cBMCPPQk#Lu$B8V[-@MUUBJibVZ6i$DpS7K+#5$Ul@N<mLD:lUpQ%gK!E9([[iHWL(fjZ2.EWI5;5]<@Vdtru=$6[CdJYj=7,,b'$dC0`6=g*KgBhj2VPV0RUPg%i.qOou#h3.pPSnc,BVH@j]@3=MJi'%q,5$aNa26)>^:,h1]N`>?gDmdYITEC-,D\[kiIt.*cuJ$PaG[Gg7mm#P&7F$62HFR<cem5_.q>)(&h5h8?nf1REF;"dP$Xg`_f6Q%*<I?Rd*D"SI3Gc7p;/F0ngbmuj9rLok6i$N^o'i1qFbR&9d&EU$)X't\^WOiHYnjR_3tJR;/Ol5?HL-PlnN3?`b;-B+B;a#s"c;P%alJ6_Sbh3dI27&.'ufoq_7p?6!3%k^EAe8&[@8Ho6InW^&[6SRkDJ.Gg\M8cX-6_`)r>1:N%3LkS!<MIr_@U:Hd7'26Q\Gb7JNQ3%]s/!t@NGFB[QCNgDO+XV7u#[KYu/;]a!17[6)H73b'Weklg<<$\D!T>c`>8-S.YkRp@4X-^t%>^n*)=L]^G_iQkR*ei\oehl$ctb%V0mX:L4iq2Kak;l@h&mJVb]=#drO]l4P#GIomBI;LW<]o4!bkEh<[$`R0nC(C#"mfXP9uVU>Z8S8rMl-pQW5KU[IaNl).9EA>_3f%9cAKm'n0kJhe)\D!ZC(dPrlX,hAFds`RH0Mh.r1"#ujEUXI4SY_7D':0J`(bNLAi(eBmK'<R+*]5KO<BIP8oqMD^bPq(>YJ(c>-d%^Haa*;.b]8I,F,EI.Ns\TeTLr8Z(9n8NhB.U)nm8HiFk(<Nj_U)tQVQ@+/;4&:tb5;Ff*`5BP4hn34L?5`WpuH5bWtm<:<EAL""b%OJ!Y3fVBS%0\Zftl!]M6*Nn^n+ef;Mf:`$:WbZPS7f4'Kk]#/YodHf9g7T"fs!%nfQtUf/H;pH=Ub.kg*g,`5Q0R[P:YLo'*c9Q*%*ka7g(/M..5,.=qEkY(pl;W&B'AATXTeZ,Po5rBj8NkdhAU3X01sk;AoGdI:6RMJ>_^>%i_d[blV[)m.!K29r_W6PY+#>4mBXkXs%[Q,(lCr>U"O'S4VGp:mOKkj2u0sb@U4aLO#B%GFd7%Y.$aaLOi>'G+/:=qU>`ff,;)3OPu8h;gqZ?)(+K]Ph@*G\qHaKMqR#/bFF%+"%]^UDGg\r9TdUCHd-;(%VmC"+P-trP60sbD];F;n@TTp5t#*Npr@f7oP3QX(RW;;gFeP,ThH$OFQb+?<9st<ds:f%8E+bQ-Zf&%S1&26!2l13=Z,$C]m!tG@s@=[E5X<HF@RNVDo7lOgbDIAp%0\cju[CBWk'tTl`(i";C3b^3!*^+V`mu'me(q,P518[0^$H(6_`Ei%3O`;e\@qV0H^H&PDnd*JN:r/Vn_5\!4)1\8<>@]-$=]nM"JqG_TZ'U:O^>')](]WG7&60Ln4n(Z<-B]jm%tC?%t`M'\LZf90*NlD%h&GUT)`H/<2_<BMKnrDcdS'7\Ka(V1l2&Xq0EjG.j4P+YRfE13QjKWBAR6SJn>Xg_9!#G2oI+N4=)f3'pZ8"/qkBpfhXOJH+@t(G%+R.`2)_r2r_UbI;0e]9ooW]Cf401kDQbcSRIapuXR*4bT,)phOHr#XXf=EGkY9$Jk`cmaC-@tN-5P9G)H6rU(OE$dDC`V\#k(nPd%KUZN!/(Em49nfUKmjIjrb!fT_W\8n&@SS\C&FnFTH7;rEYE</&O?qITOI9FdYWC6+?e@(SF^.-.lnO8VX^no+?HV>^ULIPP\39(;%f&d+dR9h@ZVN=!5pN%TjqBWSS8A\Q`V5aVDGKRuZ<OHqt'-b%fh:o6@K4];+MHQ6.Ei,]X;V.IFME"P$Lb64Qb_\P7]6%I3]6(q_%FB!Qo6T?#5]&u3DCURf@cFtVM]2[cF]kffAj&=hn*pFJ]b\X2\1-f/l&6U2+F=Nd73tgeS05T"VFt?6oc)4&]kOoBAi=i:tHbu[E%qUc,+N)[9]Y*U1t7H1(Kqc/lS4^V!J.Id0o*&UfD?_`d4S,Ti>UYFgh%5hh>4BD(4F!=_2a",&lf=Z-M:BW80jUk^@?;YiRH<'au%I+_*SEm5a$ji+DsS>Da7%+>ZR)5c<ARX\@jeASO3S*Y-+0\%#njH2M#mc=^Rf`1af3R["Z"U/+i;N>ORNPPg"F4ERm<e&e-*&7g-%[Q7qZ`AHf/ZY.jb@"Uk]etc]+W;tI<_,a#!RNdWe(^\:BLPLC5,P>e,YecKj0YtP"4-A4dXH&ZUZH0O@9';Y-h$:@\hJ'YIX7)j#%hcFT<"Qre-e64D4qB)'9rj?aMW<')(n/DTO/FlXCF89OM1U\KPcnMY"Sq6tPH1MAh;Oeb,D_9^882CYZ_&!8Zjmg[*S^/jR[bl2;%9\t.NN@E9jG-uf?80sbf/#n]_q4-b$5ZG+*j'SiTSYpArY@e`Y3H?6c;NB.)+mCf(o:n\_V52:uhH.72_0EP+s6#jE3>ZkX34YbA%<C=s?NX:4m,*>1-(?VnWAjsHe;Gbj08Bq\7(Pc<Q.G2KccT!B+gH3AS6I$]aR=r6_6Em[O`)l"nLkX*lW5[?-_?TUG2U!AFQX(Zj%&-p\kX@M-s:bNR\a;2[9@>fj<_I.8!5d7JHA9/*0Ke;L@)[i-Z:m7@41fY"Pp:R?=[,jn);A@nnYTg+I\s&"LTuH4dGTjo?IUR5D%^+^R?gXF&Lhqhe1oo,mH-#H^P`Ph.8WR&l215bX.a5Kp>S%eQos3#Eo4@:.B]Ei76g3.3ja>(h0.(6W1_csfa_8:Y05!RZJL]=q1%cdg>8<#h%f]h\fonGCq;iZsF2Y6.`p$Nbe(Yh.8\B\47:2!b[^=&$]lO2O7&Thni?oXOG82XDJr(mDQS9t$FXj$fJ#BP-OlGXT)n%TUDdOV=r<JYp4Hr/@,LRP1bF6a)$Od(i9sQS163`f-'WZ0jChA).qX4"N,'QhYF)Z$&7.-Onuu:_Q:;.i'e[O-FI:$INC?dI3SJh%8]U*,V%#AF%ojPW_L5g!Y$<C'lFJd`8?!.k1,%]d`UaP=/t)A)`p1N/!@%!?>4^Nue>"r.i)>%EdefKuibEe"qfH+=9Gi<Go;V-#%FqJj7cFcAt,+JCUrL02,mM>n;CX!+OLampk#^VpHS%l2.<;1`!dq]HO3k+gS"5J?8FN5BVm]EqRM$G.Q50/-(&CQd8UkqWNrd#eK%RT1W<7!U@]-!lCuNA!i%CjOA=Hpq&J@fjlZ>^SuB_A8$CRX/[gYC!%)W2#NJ1^PN$I0`XC\;E':7taK7FG0e'*K=tVKh#'T8&T7_%Q'Y4_TF;%HL<RI%L-9/J;8VrbnjpEfkoXaXXM<"(&aGo&0b-Xi<SmF_)\7qS;d%8&XJQFQqWGGIi;$cOYsQt<mu3Wr!rLd)_Nl)T%A`g!7?EI)t;g6V?bU"oX%IZnk>H2c`YBd(F0f5c=OmpmpEF]:]nM2fW@U4]CY5<8E0Pf%:V*]1g[@AVA#et8i2HJf5YlO\J/bn08%i;Sff8+XM]8r`")<s-O$?leZTj5R!QbuAqec-7$mo@OmoC[k:MjN=7kCFI8LbZo<UdRc$#`qs*"-u!#7f?iT,'d`_JE#D8,9Z-YH%0';JKTB.VdnuD]:<2#Vl3XSSta@-3Y^Kd6gTP.?/`h@U@Gu4e])I(95[]7"08nKI[FeQSCA9Ea(Wm*S\8ASe93SNtK`'n8%*K"2p%>jDMYmt_%uH$C[5gmL[`i=:M[En]1Ar0tUl%u6p)7*14`"NN0<juf6J@9G.[UFtq;%;V6[W[^m/BOYb[<4a-F"`^R.33"F9)U/2-%0Kd1K;POd[aB5jQ*%PXK[4PV?('0.l\0,iA>>1uGfp*@?h:=4Vaq7\ql6W"O:p+]'.ar^E;Kt^fN:>IYQO]07jjWt'@*a/JM-Lfi%0-k:D0.>JmlfSIpC6lkNQ&:Caq^,p_A_e/FI^Wko"8YAPV97&h9%TC`<'!;mG,*4P[f%`W\`6X@Z,PlCLF/eLHa^GQVHDtLM`=S`%fY*a(7X%^@Z%s5S]W!%::b>1-@@1^hf?af.'Ngk`qA1oRE$-8"ZE>f/o!Mu\2'"q+n)94HHQa*@3W0F>FH@EkUXcSNq1>?[+@%@L%Q6R:<E.Jt447Dg</B6JYAX2PM76;?B[o#5Yh*e?NraLOZ2=7S[HZ>Ef466g_[T'DBkT">#4VBTT-TZ:5Tjf(<&T;a6D\ml8>`#q]%&[kT"+7>'9IFOc*ja(QZ3484?k@\<6\8$%&27Be8*ai,"lRJMX!O*`u<4K,r-r3F6o+)Sr%\7@S)cWKBKo8qSC(P#I9`l6DcLHq'%KCt9rqc.=+pC(:\RPnr9+5#m_4f'L&,2ROu]ZsK?Y,,t)ph8HR?5M]hPaW,7Ie-gJT;*>"W2k0QTXL;?Y*UashfaDd]]ks/ql7!9%Ir.Pb?g\A%*9-:Dfo065T?A3YDj]GUC%F4N.PP3JKXs\Nf;M+1ZO)TCc,U__&W,"\D*_TYIkBkFgc&EOjf!4(RY3XdDh^QoU`9i?%15h[;a#s//T)tKLC4>[7l=O/*>1T6Y-qD6HjpR"ok_;OUqWj+i$7_k=--XrYYGgMe0'f71EPK/dV7OY6mYZ/;bEjSWofMpF3..!P%2d`QH&5iV8BM%BYXod%SCObk8%>XW9Q%ZNX0U%TF%g94I_ZYgIng6P"G7P-FdF8[*Xb3Si)C^c1hbcc@"<5IWG+$&U\I/'Y75SAg%`_+,4oJ-fI.hG?B3/%r<FW1FEoCA*jck9b%hT,&1mGiI`i*G$M?BCjc5M%b,M9#oONr,k1@i^dGs'-PjqgohYiF%dqrJ`0!a+dBS%N)s$WaV4]NHLN7s9HPebGXaldL!;rQ:Q!I?)`E(LobkYh3")9i7tG]@3k(TOeFJFA>:"%OSS5-opeQ;a7+$7$(j*KJol9H^a_B$=%`Q0FO/b>#uo1^QSdJ$TDpLf*$L/>/",'[N.P+p4%eZ\$\P?FCiESSje%%]B`:UKE>nWK3*_sWjMYJ&@[e;SR\L#]0gapj+2pA<(Y%Ftg"\45O:`mp@$R+K<29fHlRpOO@49gk\g6l%s$DfE&"?Z*#;+OTu!ODQ?!RQ?fF>W!bN*7mMV6592NCg"9dRE_QpY@1hp,@timo%p24QQ]517g`qb&5)MJh#lF1d/DmrH87\hH3UcZDsppFO/-nJm3HYE6BUjtRM0!I;h'L`%!c]E:n&41m:4>Y3[ZBt:^&uLsClb;[&%_4RBk]F^Y6ITBj_k2m&XCgKmZnpA'fP4I3\CA!Od`k.:1L=2?dD+>1*Yb*AYMT#@<In]b,pu&U8mHiG):dr[f.G6\/c4LqQP`gJ;%Zl0H/!D8TSBC$Y(c".M'&k@TC1H#MJ=\P<X^E..\!DBDHFe]_m+$X)act;]-ZC"(L,iWc-6]2En$UejqV]Ec96\u3>Xc5s0_7@NP%Bn+EI@LQ!.;nZYDq[-W@Wl8d\*mVsdSAU[Q4Ik1si_?SF"[Z0pDR-8%&Y\%^DQD^ugb4P?4&,SU>d2jEI_;o+"FFQXXOk@FniP`:%Buj(m'BJPTnm>JS+%$^o[+.G4'\bX^Y/4%>do+O1h<S?E:igT_/c*FY]VkGTeA7JBCh1>^-9:f@,;FW!U%a@[PAL@?J$&9M8U9FP%SN:Sr%'.\>@S!tgfHT%>%<m_l/[RojX<;.+?;DbaZPf=/]Mb`Z;;=),G#]N!':Ej):ub^S>ARmC*a2YU(G^g=)rbjP)%P)H#W%Kb%fNUB,r\].NLG[.-Bp%qWqb$e5-[-I+.Xq`dkk;Tm77gK[VjsbK17%*`NTI]\<e],Ra3(.tTFTCeaZrX#o#nVEY'QLBHcXA*lr]qq%bC/rp?Zim5g3V23bhMSl:BW?FWra/7g6'HUHsmqKY;bUkg(BAokJ^HipKS]#8$UCZ)<$u@(NCQmPAp\ZK4>q;_nE:9iaB`[X?bgT%K6uZ!D9F\L"8q`#AG>!f?F%A$e&qbeW5Xo1"0mrr8ia)$B(_t?BhSoFU)^/O6"%fgRs<B;L5UF!'9UhNCttNO-n<aqT7bB1'U^rD%oq#6\576qHZ?p:k<J#]SXGF:+L@Gj[E?)!9\ZF1_>0KBd0CnotA,P6,E@PpLHnru\mtQPN[/XKH#U<X]P(lYh8>CL%f0(2N,qPp4%hKcZ^g5Pa>&4_(+BL[>UR%h9?p_iU/`E'HLQiU<n@Ndt>HGUgc,-XM;TQ?"kJ#W[c.;\=M*47!RPGji.37I^eMA4T(j=KB&bPn:H%;8dZGB#OFt.H7s&HOM95Mgh9([BVjBCEf^)G!G/=-VY/io.>1ZL.'+,6R(Ug64!AgR(P7B0/(6eh\RQiZ(@/RT8aO/&D%t/+^^P0%M;fc@bA=&?[[KX=3hrOcN4OIUL\l-uFY(7hUGPr[<JBooj9qM6?b7QU_'HVGk2p$l$Mc;jKR>5!(`&#3J?XNfKX`5?]Mq_6,36q*%HbTt^]B_Z>dpM7IQMHq-':j^F5rD!C+AmN8L4!.dBAQ"iCZ1>A01\[d-@e:%?gn22cr\jU.X%L)QVdp*`,df2iED&102N^-YB`u_%iCTE_$"Sd=f5b#&h\W/oY7TrU&`m:_2oE@Ums/.tmL+3+JeJuW\gku2RLo5TR"8V(PmtqCr0B,W>gI\&96^VhMi,L-],Hl\Kg0oP%FBR/#)bS%s=WF3?8R.M>3>(pq6!6Zp@Gg6fDq#NqKbbG@4rj6d^^U'7AAik@MNqhpI#CUZ%Q9,+$G;E5NCM9]=2(;:.nlc+HH/L6%TJ)r;``V10_%#-i6JHL2)>2P4*jtFAB:`B@p>(fJpAKI*rNl*u:dct'=4e<?@P33H)V*F&bbMC\Tri<m[%n!)Jj&iLp+:@qp)t&W%hkC*tGkWEK$g(]Y&bZA7Kdiaq+C/r(X4I"_)s^PG>ofuRX@RIF$>/)&Ufm,4`dP\'M\61?Um3P"/#5Q^8V__FaqYY-i^G4-@G_m\%YjVcbfQ[;JYg>\i&WL#3&pn'<?e0W;p>)<'_nM)H,:;sgqeBX_X!S2N$BTg$c3#64-XL6=28l3:BWgES*WCe15%iYPo6qs7Yq/V2%A#R"sqm(Yj0jAX)<o+7H/#LMTFR>J:M)@EU^)Juj^)Ii-?Qo.)7GN)SB&"3HHYV3f+SYAW..1<f%)C,t0CKqd>Snn4p8<k*0&JcY%A.eP>RjFQaWYT@EM#1rD-Pb>&PCBsNbO(HDl&II=:cq";N6O2;$7rIq*@DTr/bp7K=i>_SY-=G5"US^*)BL/Sk6MT]]_R8Yi-t6U%qgt4N^Z)t8%XJQ$m"Iu9d=#&YBAAh\4Kk\m'6.AfmQq_0?bZ!b9*$;__:-m;1S9)$"f&T/-n>C9md,hLC2.&lPAIK\/ECh8dEm#=%jFp3pF\gs#EHGYRM9;Od#kQ();=/C+aEjhl74lXWhWLQMD-ofXdG:,h&>$'#CE!nKh\R&jh\W02ms=b2kIa*+B@lHZ>Z0ZiRat"6%=Ei&!#s3SZ/,$S`1\eRj1]"_f&cNM#fSRR#Ig9b5RDrXnE=WKl,fj`Z-Kfa@9\m.0I=:j1Y_1J-fM07@b[m?90-oPl)`H`k02)k!%4alP@P*p+ZQd:"1RW[.D3m`QO]VnWuhW=ee$BZj](e"Rpjm=7,o1k=!4l.]o1L'3*!Xoj8CU^@9Zq#WmLt[[PNWXh2@XEG`&G$=]%PF`B.SIo86S3s,P";nrd8p*OPL"t'u,9jp2XrKVL^i+lkk3GSN!=!U.rY5GLAu-\\^qA4rUb)d%UchQm0U,&2,JmcE!@)l]B9*(G%7-=@T![EV81fltN&0GQ&&$q;^D;!3eECGGn.u&OM,cPE;m+EfEg/i$=T@*P!1-csg;"HrpAOt!U)afQ(^:S[@$p/-E6!W`ONWQ@K%Zd'FG*ss:Y&e\3P=[Ao1NXDps/I0%'?<-#Z[a#@:Rk;QmbAHq)b)koONpsS0E$dtu,ccNthGU9DW6Qk\Nj0TZ1N?E6eY#$ERgZa/%YoB&AVaNoRf,#&'>_Ui6N+7.Xb:);kI(C9Y.c=JYa*[.V>`8C)jkPUuU>E6(>l/r'\:+!mn5YQL7Y&R42j%+XFi-P2j[j?a12=<7%#ljSS641Bg28WB]]r';]Q.5:Ho#8oiD+`u>F4d7BX4E2sXC69J@+B5PYc-MAkA$fl17IpjX:h\K;kt-<3L6krmV=dHo"FnI$l95\%&T8IW3EIJ*ndf8sLQ*4T@/$V;@0Zs963iiH2-_$h,Dc1n_A+Ka!mD:[@!+m+AU/k17jF1"6"3f*$!4?XoMV2\4m+5rUd<Xq.,haG%j#es#e5;HL(%S*eE8QCA:quG)*FJ@cj$-2HDXTSY\E\G/3!LqFf,)G,6B8`!XP^]4cfQk_R=5g7E+L6Q9UuS*/bMCUUJqFZX,Zd]%-].,d7P&t4;W]$+=4QgB;8RHCAdR&uM\<089pCf<_j+l4#_PMO=!3:d7gW7'b&QuL_Gqf=$EA<7E96Dg81r<Xe"G@X&f"Z>QnTRn%"]qod.E.An$H0Rq!D?F3h2kdUFi0r*lR%1;+-g<bVV<_AleIWgWj[/5MWT=Oq>RpVlWS61DJn"(4/jo\ZbQh>F2q$SA:Et@#57^K%chdgn+/T;]*"=8u43jLm[*j`0O!t]?6,Z/g!<?-^am(7"qN?W*8Ij!Y!B(X^3W_N6GX8nQE@Z]A:gKO`6ocKd/H&aS+(U(sjF73P%@Q*,Q1U072;q'ZBd-M07oaD+BWB5F$ap&=-$&?VAh5FhHK-?=MTkc,$iN,E#U_,_'`''f>4fA14!i5[[&u#$jNS5D.o([LC,VkbP%g[bb-HU5g!ICC[j#Y=LFEDAD!.Yo'6:`Zia;s>MiVqM%OaWk7tSIFC(RIj_o?]1c^Ord&4Mdt9HJQ^Eo#JK<q%r6cWLTLG<.g4=d%r;h\)P80$35oR_lpH!iM>f[I;0L=3fRK89sa@<fQM#rATq*&&dbUoCBLtt#/(E`0QBYoPVYs$'Hm\eWm4JRm\0E#e&1mG:W^eC,j%'%!D_8Ck('!P#F#Y,a\t?<()CbhRguErC:\P?qhXLZ+l71=IITDSpsG57[^RWCGG%qG"W/^C;LN$3l39m7h$)VJW'##/GMRd`Ccb%)h@UTbaN<-At"TaAi$2'FQKC`>1pgD5Z\^mi,F=[-=:4>aicb[\Glj.h^5Td;(3#s)AO909aQHMOR-cHYbZ"u0]E?npMCFp_+_'O%4/ZEI"G!.A!8OK>K9quD9n""eg1\d$%-8u(jm<-b7&<r[PY>Y.&G\YF%&YBPG)6Zim(!8`-[D$Q;?BZ.LU,u,:sf>`Z0S2g:]a[M%Zl8RopC.(973!olcr[Fjq>HJ@K`'IjE&N,qMLJiND`+"p!$ZIl6j(Y'.A?ud4@)@p/9=uhY!rdc`4u@hiPE>DP"ce)DQ>Q,"-NJ0%6`:ld"E]jP[(I0k#7Sk>8bE"4DQN3'.k7?FS7hCR9(=<E9Q;K%i4eu7'dYYQe-h2'e(&`j&2IsYg6D*R<4RR95[n=Kl*G#rlOo6E%esL3KLk(AB#uJ_Ck64Ur/musu<`rG2)`\b"0]g:81XLcGa31YI[h7u"2'bO3OqGG^rYjfrFhEs5<ad%U02c]*KfFo@qRIht#JSg/%+4_%0>l+rY'DL98m>a]7D,IQ\A\##e=k1[IDLQ(UPZu.,AVit6B/D:h:1jeA&hB?^5+5"o[tS@.8?_oRm;QJb+O)JJHB;?8"pGX)%:^Hop=k8mVGn:%VTLXfN?3No&V,0ELFab=X!iVM=8$t9h_D8E$=2`V8%H=jK)boJ!L,Q(`(6UK0-<,HmR&'8,V\dA5-rJf>G8FpJ%lVVaEE)NEf4R3`66^=o>-!YW3b@KDkjXfjb=MJ$MgD3rY?r#mM:T9gH)j22MepUUNbT(7&DYP-WACr#a[-7ttfXD%ULBY\V81)DJ%HCNc^]U0Dn0fp6P5C8Q<TCUpnD\<C+]@8u>P%P:n$glF?p.VA<eJJud>t5G3Jt.Xu2D.6Nf`9k0np!F17B^bDRCEY_TnW=6B)Wk_%Mj!SP_>2DV:F,2V%U6"W-+$bGos:bZWoN.e][P44.)%;s,)&odW^h4Z:o"%q\$2+^&O)b/((29sO\+T/':#p=Eo:>42YFL?S[EHk%l?H>GLW_/,Epa2V(ml$7IF'hX=bFi_cD01"&/a"-SMfG+R`-/ni^l,!$VW=$C9,qc#IERhlheQodmD3;Ho:[L7I,ajn"etEamoNo%Ts6N>!#u""2X!j:q#%CoBO!p7:"n]V$sJ/kEG-Q@$r:mXPG(lMB*`)$D]i2Y@1r8jNVdRTd`Sabr?h\GU5!R"/WuZiD:MECcNOV2%eaHcmJ^pYZ&n[NLqXc_>67loF`<[beaC==0GbdTB.kNWK_a)Pcmu8UWFrW>NElP='ksDPoO%Ea[%#iN57/=8='f/sF3-hniA[L\*%S0)j@Kar-#e.b=3dYW40g`-CMI?.C/nSI>^%\idQ:>A\1.55'db5kcaDE>URE3q=@)nfWhDm^]:[I\Jkq+F5.q!:^,L(Q_m?O.oN%B,CDnqJ-Q>Tp6QMKf[IEg<Vkrld]YmLs(VnErWNj9(@2^0q+!gdSQB*bB<07[Su6L4OqPS'F,-Jo2+=UEjL\Lrg]`0DKasJQ-8%b%+srgZU8GrRf`@7*.VWqDQ@iLmkW^q^+bH5@-WQG(45F09Gc^>tfcNH0X36XacG52;#O(PQTm62.^=M@VlZ8&s%5eLBQ[=+"\_4RT%`JVaS9$doASoGL<1O?]aHhlAM0O@]&I,XYd.:!h*KQMY?ed"iRMe9[[CLgQ4WF+rr8!@u45O%Wcpf\tk:A<Z@2T("mhom3,dOLCd%'#2p8qP&[fK68?'#`qfT7QcD8/ja;);C[\,HrlUrEHCEgiHlU&V7Q?o7=AamDs_.Z]uIkH%B`mine60AoU11"ag<N\V0NV49Q"dK%a@*oRFk+l.=08<f4Ns.]_g2im/JFD.Bls4t.pGn`52<KWBa$DA[(_39bN`DKnqIj:fBp:G*4X!9X">CFU%[ZoV\ctE;X[i'[rL_b%KG/m]l3T'jo@?['rhXru,FkH+o$)6R\4FrRXn_F7Z,<j]bj)u"LgHIr47_?2f^EPSB>MtiYPp$(5OEH5`*^A"o*f62&RMJ-^8rQZ%,!tZ\liJsN%:@qRX8Q'*i?7S0l"!Lpi@7*/KB^JJD-gL-MCX6GY!VomX&t=4W-^N'T`0X=m>6<^b7o.$jGBLTELGrK.MBA\X()`S%ChR;AHX(\uqE4!P7c&deLI%\k-MDl:_0fqCT'UQEad%a]*OcX;&s/ScdX=Q9X[Q5[+>IVn@e*]Qa:S^K<+o'<oe]gR@JY%PZTB3q%?d(><2<Mm)G@?S''d$uM99*6ME1Z+g3(.^N(t"9I&'8f&fR''eZN,*"6Xrj-=2)Oo=s*M<7XaB3LJ11)6\nu/:R#LdPk-KY%YF->%$RAd$.I9m[+0&/D0/Pu(KI1Rt<-4tK\cI*kGF%-b&>>1qbMJgh/Y5!g(lJ'jB1cZN?1Jj[1F#1"@$:+K[J-<B`CHDb`Gsf(oD?k>%Q6C%)PY_s;:9B:+Yf@J0"O;p\",hSdCRRUZ%Y"&ODJ],.N"`6U$ACZ)CF]WpI1E<kOrm3G#OBX/EA^d3+jq%.P$DtRDrnLq(oXq_%B`NuX5#WQp8f;1sIS8b9<[q7b2g=cucpI$JX=PK/V<1i!?M/E\nBg:5o&Z1F2gZQ1bn&<3]DlH<80M#dj)3LkXB6]AZ;biVdSGk&%cE$a+!TY-p<24+U\J8bd3ld'"h`"]WT6b9H*`q'p>+#:Ie;_Tt3B22f#Q/"oU(L=\nb^i76.$mY+<`i[22\0&I,C-c%b9'.*;L#+%"(nH79ejee>rM9/#>>;&=Ue=_ZO#Y3PcWWXcR]!pDE.89;2XkiQQPKNJT[/RLd1N,h.GiE_t*Xs=N997l6$#8iHJuA?iHgdeNarb%:VlWu2/Ot-WA(SPe0L-2B`tt+:mcTb)5']8;81Sc)!V+)Fh9n#D5/12&N(5u8>r&Qe.3%DC.')Xotc[oJc=L][8M63eYUtX.nbMt%'0NS?!%WKi6VC=8KTf3'OtU5n\;=*]PFBXp_JT`g"?h=u#K"Y5cfeY_SU:q.6FEO1R3Ti(U'QR%=77Zu:VE&k%3G0;kg)Mtji_L4%S'hLc-?M@2heIQd7OV]]+>8f!]GF$coL;skDNfNr0sC_T]]i#!"q#cu%=;c9%?%&YNAC+\$b9+0S]Oi<;^$@mh-CE%AluAr4(=oU%Q0qetY-u5_;PS7!AD?pS;lTY:4]9Z?<9pMZFhd?CBrkO_m[c&Nqg;8K/h^DRk@u=b&tl6%Y,'M5$B)3HWK+*`jMY7?WZ93mT7Bb_%)>/.hbGbU?#t"Et1p_EXcn1=>$3D;eem>CfE%.fsX,caVhTAO[LQ_OX2nIO@e:'eK\!8QhAOtt$jf['HSiAJR[;-k_j0UJ++`I*`%__Ie+BM,LtBR8<A+),!0a!hB^e,I(YricT8ZaPX!UUj1j0D4_8fL924Dc`]NF=8DM\^]\!HZaA_FGo"(5dTQM=.?g,U9,=04'n@J%@NLfqBbB_[5B^gk\tsAf9h1U6Z*PBjjZJm_5V$;W/0J]_nYn.DWEpA.:&TssME-lla>q_%qI"(s`/sfAa/Nf<,M#VVlH_F/Z;4o:%YlhNr0UNB)U:="(M!6,YoWuh^0#W[>mR&BUafY:!LJ)d\%de8\IH4)&nQlVX9\n4-'amUfK&,1;i)^XMO7r,MQ2F_n8=+Pm!IpIk%:p3%E+$U9dEpPt9B&lF^W,*iXgrDGW3D[XI6(k2G"!#Nt<hSGm9U>":K:qfjlY9RfPkon@Lc!sY[+-FiGo,]UrG%7Td&*_,Oi3LF%Cq_.UL&5sS<PhqmXZ75c)s)V6C_o>T]$tsR+rb8brqd'%_ht@Jqsf?(U<;UOQ`\=&cY5_#btg4f:lo3moi%D!U`^cr3@'*c+j:rj%2bBP<Z9uoqF+7A[-T@#RJ$.[>')M!5NAKF.>t6(5>@,>FZn+/V\c:m+.UMN.Dnbh("`Dgsn-K1&<bs*"qFeeuM^[^U6^u8`bF^8a%J&</FiH/.B30,:VEC[`l;/G04I:LZ)`=tE'(S;9M(J?:3XY-jc.2m\F<qTI<X:&$jY[198';oqL)4aEcZ;PZ+$aGo^lHLd5T*5ne%`nQrVSf^L$&RH%6$l!8r3/MjoYL:m+:WN/]U?(6MjcF5+:im#f+q<ks<#n\1Q52,j_2?/2j436&/==]W62R^T;5C&8\`@`Ze'kCU%U*(D_/-#s[K!\bTni&sr76]=?[p8a</lEr47/fRcj]`(;>S.<H2!SCu;B]s6-SG5@"hF^l1tDX?A0ukZ2pW8#Kq9$eq9?6e>ROgQ%BP7_sItnTp#!6eP=o:X@rC+],*-b&gjRO0'b,\bhVb6h:Z4EVd-]!T:<RpMC1&J>uXt&>sE(9n>Z;bSnbF;2.,Ff.'&L]l=>Srh8%UL_kXBEqhHoYJLm("j@UC#m7&BmURi3^1]i2l8q(;,i[mqd*f>/shBqBCme<"YRP_'pG0q88.WEY"J]Mb>teXP8BWaI2,j-#NVd:%74dcG$h9[K/PtQ:_kg'!K<5TWG*X75'qfKu)N-stPqY598'1G(e#bg7/G_au<"E-S="UFFXP.PF9Qd72F%g3js%=*@[B05Hl/7AU%Ke#,_m?O?UE0T^mEh8KKO7pIo;BbY>W#ctDP=ibo'skmqXHX@5A#U*O7'],T=n74SaAd6!k`m!SgU(9:mEi4(]_LpD2.RRV4OrVo%@k9us@'*i_EJ@$sGCp6nXHZ$CCQ::n*,P3:c[HHefFH),:Hd5^Wjra4O_=q30p1;s*eJAOlEnq'\:YP1D+e99km]C+*LYA6hFTkq%B6+eOY"KRFTQiatBnCSX:A"u.9oaihTm<HmWT!Vj[GK<4CLMF/45`YoRS`D)VO<_7?t&3lI;le)>a$Z^q#lP?DpW-sR!-k,9?lLs%BRT.e_m2SuUOQ@6Xl9ClKr`PPL.J/i)^OJR:$68=np#p*q<$uP@!Y]_B6KgJa`\-R;1.$,%f"KgY*l)ejU/8DVH\qX<%(G;-dcBr%d[=Z!,r$Qn;<]S;Yj+e+U.N+QXBF:SctKYk.sXl(>FNg6WiDP_ENr"'n+B9>6?h7@>IW0+Fb@JpY>dX&/&omW-d.$:hW#)7n9FFi%obAj#a:"):J)*R/=;R=`fajZqYX77fjA(@5'fs!eFRa>W&R4#aM&6c#*!/"LJg"F!3\0qe=r7/u&;A.h65)_5*8$UhKdjA3G'$GI%c*X8c+FrM[UE>_*op$(SN78SZKW7!e9Y/YC3/^DmVW,Fu5N/8:gZ>25D(UNq.dD'^[@iE+c]F2'\m;dCZDj=e.Uf!5>bXFIU)Tdl%kNn`'UtdS=Y^DnU'Fe48e-bLgP?P*a@%7kc4^(j\6=M$?V@]loHrt4/gGhE*IJ@<bn4;BO=TG1*ZW4Pj)O5-2*D!rr4iW6DKN1CH%St<DC,D&MVOnAp4'4mj]Y91gCe<Q8b_Z,.YMY<u@Pco>Q0)@ua57Rof<DKU,ReANalSsR(_9B]s7X+!F]Ef;:)U]#Y3>3m*.bSd@%S](bDP2+CI%4JAo##'CEcZH"/:tKsBa*#EB65rX'X.4;hj+Je/,MZ6[!3[lJ"<Dl3EH2d2@JIINeEI`:"u_9B^-Z5rJX#.@j846?%_]XZH"rfg;N\%9RpW:SVgg6Pe'd_hh:)=.A<HFo$G.Lag76&7L;#U<t(3\+:OFF[e+1m\J##eF!'_J2oCV/W0]H%19\2N61].PTs%;"4k"d`!#+Sk'.Vcaa_ie6H<kc:c!iYMR<pBm3F&U%ZF;/F7=Gpb>VDN.cfB2U-9R(+?;pi71=841X.k]HAk9dCm?FU,/c.,oNQ+%]G59_Z4-2N[h7?pF")[P\ao(p;$lC:I?>MY4h]Rdgti$b-CuJIMibh.f!-\1D3[3J`N!Qk,52'A2=-R<&5_F4j<j4=%rbp+6I'X'%TL5,AimpI*&EAV[RphS4-pCRk[+QT3();"?6+bRDO53mq/Dan2.JEh^<kI1t>`MgCVg?kVNXXIJZm`C06.2,`?DOOsQS>./'6Dpq%L4Cf>hTWM_Fmu[?=\JCd<kP+km'uDp)mWDpn[Ok[XjtLT*AUIM('"XRDCb,t:`pXn?f/"Ql-/o$TJX>@6_5'Ik75[`EB4L*0-ooN%\6`--2%H5=QEZatip3pU\d<s+9qB`!?KYM&Kd+6l-,NoGYe?e0\NIQZ,4(*]4(Akc`XJ];Gl=RI$2-(YEiRabH0'(>?4E8DEdUK%%<S1))IoP8F\LV,:WYm&\*+aLGqG6C.eq(t/8)%RcllEPkC>==[HH$UY2S!!_:u=rZJD$V!L,XPW)h`/=K.&MM6<_)n=3cY&FW0,/%<6fa7Vqo(!oQ';cWpqK!O:so#;Qo4V*"bM&)UVuVMH[]@A1DZr;'sR758P1OcgA)$\c:8PA_?N-IG/.s0Qju3OZQ=7"`cF1]p-Wa%==`rZIKe$e,9!["ZCqOTeEl_-b"3n<!)rdT`uD'Of2Vdu/5Hgo/G\;!d])k-'9[cWX*@$R*)O$XO^*`g32J8Y<e)Qt)^J!,R?dRJ%+pk]Woji6h09<AXhlL306DNS:"d%Giq,"p!E$!$#\NJAq]6p53hgY<RiEAA),n!/KWc[OVj@"AHHGT#BrV[6#E5]\WDZ`DT4@N/;%/)-%ACg[]m$T=Mu39F,j?V`QI'*6oQ<RVrXAO%K(;5L"u0_hqIh+L6rXm`&Y9j?s_NV-9)Z\me&:Q4R%EE=d"AJ0Pj+k\beMauhR%kp><L@^%a'H"8#[j&t1Oq:n/0.=<Vq0:BMHE.t6P=VV*=4_kOo,ca!(c,qE8-QeA)Tf2;7+]K0]_&&?1kYSCKXt&_\<Kcfap[Zf2%PZLVPVcFkhI_cS#QpRP3i)W]q7296mXH56<87Q3obrI-_p>j4?l&Jl9RW>.?U$e]nEg8,imZVk_;`tmrK5d9EX91?'W&h%kHK#IU%*=R;+Q=6VJ8V^_Y:nTc.1c=<IkYpJ)9U)Q_h<mP\Rb[Ab?I/'JR&-@<4bOWL7VT5:_K<"<n1ZM+llMaSkIbUA?^GRul6++tS@7pe%lCsp-Q7?tddLFCb[bg,fRU`=<TBZVuc2\1!3e-)%S8jgMUMT+_rlu2IG4$`NNT>jkV>T4FK799EWF7fI4:UONmphk>5Z7*ZBB<PA%YDIILIYB.JUi3tS3XGW'%Mft"W8o2A!<ii[7dl9sprRP(6(>P_4*4J$%u[a^D>RT"dAS%,ao/f*B==h,<d5E6-_F+lVlO<iN63^'%AWF86KJM"2e[ZCQJUshNjOKN-L(,[)=e@'B0:=/r/!*Ic#*#s&lC'5'b=\[ib45stnS<I`kE)ce11Fdr&\fQ-(8S@5D,-IYgm2b[%EegkT>XPm)c^C\D-,aa:4QM%=*Gh(cNQjQJ@CrP-&-%'3HejJ+K=m2U'eT=AFWh2__us=V"_Vc\U(hIoT.FVeEbM&2BMNs\PLka1%&M$KSlG5U&jsC#f9J^H<Q'u&dVX\WmWQ2cGRaics&ONE>3?HfKo'Br<ORUqsA>6)9=`/EJBG%t3Hp:rAEl_<^2c:=FU)`uCZJ3cD%5?eIUg.u-`)BG#YjoBpu*Z>#qfB(ePXfiq,CQ7lRE@eY%p2h7P;g#?4693DOA"NjN)p+'!%uk`bc'Tmr?W&09\'2si60;(9nj$^n%/WUO<h]R/;+56@k9TL(O`6ZNn6t0q3rlH%HTj@;Y'(Oq<;Os(F?M,K9fPg(KMb^YsE@8*3%jfVs,2;u`YQZg`^*kIJiULkCn=c:N%3#Hi\C*pkZB#3G+r3Ji[s5NWD=r?PLFJd]O-[m#%.Sd4h`BRHWQb1o%UM%3O.guBg2-YKoSB_%<qM!aS;:VL6:UJ[4@kM@gY%VAK%Uf28601E!!WFiUA3\#qh(#FhHiCsSnL.+;eAJ^gLc]"B,NYYd_'(3llc*1XO![p`*])u-^U0Nft/tLkWF@uNn5#:Fi5,h*Ad>q9L%3;=#?<`BfL%<!jLWJXYT4R6<M+Qo+>HQN?!H<#.ni"Xl(P1lF45;nkIR2tc%Ol(XP#QI"u9b=@Y;GV]\>]IoPOm`ma$H[q3F#5-1%7HgR>l>so,$DHThFtK;=s#=+V7/-1f(*0L81NYLJI]fQ4VZE:J#Ej6nrJDdV,2;9r%c<CU>q;d-3S2a2#9Qh0!m=FqBEeAfF$_Ll%=E8&jL2=:F`>f*hn'6n3<5<q6lSU1_1t5)(NLg2>WLZ+QZl0[_A.scD3&*gEC8ZR<V@R*4M9M_SbJsCmf%Z!p;G`QnID.S-\6i#-%eVKSeVj?_:*+QJRMI25YC!NSCD2$c;4%e>H#9t5-ZosFDkSM?"ePp!DWa0^faB$5Y]f>6e"EnkW0G1QeWB&7Mosu6#*M0eof<RfH%-pP\1(@E&N#]F"_Rmi_0V1Y]p2mZE\H)E/'GW&i&POMG\]ZT>h?_5&+q;<C3lh'16AV957>Ws*9>"AA"h^dLJ*p+&QItb"4O^+$N%GbN'@R;NE?_IE"K'>],K='iW3L^r@glDi;*f7m9!M:'LRe7-Cq8i_(k5m42m;(<cH9hRJEMRL,>3mR6!NJNPY,[f-6c9p.]&FEt^%q:Q.YS&=2=r%Dg:EQN^n7Ee+R#isAXGt4G9eKcB^F%/]t7"m*#N)OBEj%N]?O'*P5j%2@n40i("l*8n2aiZia_H*MOngJe9nPXMe%'67F14f[fd'_1aX@`_FWM0m<>HUh%BagL^\f!Z_\+M$D1\K*4U^.4b/78`$1M>hHnT2[9o;d:YZ\."VO`S;je.!:j0021GT=<l>3%=B)=[SIpQR%C;d<Y]g5D>,"3=1.[6l.&>'<.q3c@#r2f6iajdtjUHnCo>%c)j>0'\6GphkqgAoX_]?HFP*H<#r6efJOo_^L2,d`9%.Y<CWq%A>l_f-O:%J[KNC8Kd18P;oI#qtT-ERrCtK2!0p=K8LYo$p5*?F5]E:BMJp+YeB6A>TqN<Pjq>TI)ok\g%)Pr`6/oa,RHa%WZAS-hB>9nj=mG3hCuJX.0V</nmW`Y>j"(4jMT?u]>A4!.MKujS(&ss\u5qVNIDZX*_cb%<mANS@oUVdfa$MaOKaZ(&<.Iu=kOn0%6FaP%g0i+GaY!&q*#H`mZ!?@55Q[nCP<7tL25iKF5G58+e@kRtri"A-0ZQoO^W&Bar0Yn'Jq'Sq@\rFgFP=V_5,4((-D"7?bZ"2S%iu=78Qmr9?-75RFJi+ZRM$aNIVV4FY8ds6SHs<1K9DDna<\\2pD1?t@^fo;"7QLbc[KUZS?U(F8#BhVmEPB*6f*Kp^;.<Yh>smd_%n#@SGlitGGWso=Lk)0eb*J.adg<kA]/1?Udf,QZZ<Tm+u3I[TZF8WX_2$J*)@1!*]>](@+_Cqu/*7G>9GHA2cGGfg?@.t]0:<1`N%HXC5V'`6AKTEd\h\4gkJMkl8MmRr\#Re?Qc>_pZI?Aj'7#k/YsDDfD$)?pWPQ#qIE*=Ba$B_@Cpj&1sa@MJBVOOTu.#s2[;c<B<-%D+l97HbO5kWDr[%@Db9nH)Y(;_%'4_hFRn6#qX^>52C1XGD/7ln7#A):;7>83o+p>`pF6sV7dEDa+dj:6lf&bKuYW-KC$Vsc4b'_%W'pHO"C%]6V)o#h,?qo7ec/B72(4mJTKH'k71*l2EY1uj+q%WCM+Z7Vc^!e,),tBpTU:tkb;HiV*-(E[]a1V#mc5Dp&O`'9'sA8g%QV<apm`(J[oRJ;%-*V:=Ocff9,ooIG)-e\ofLL>p\PcClU<4L#d%cDC61(MkK1'TW$aAC)G(L]jk>NB[>U;gt7$3%*-/j`Z6\XG#%8Y]=\#]<B,8mQ=#%2b=;`-tU8!;r'R0Y1QFT`ss7("_N>G)IBtrQB*oXK[>Eho_r*&nPN?)TrIEWkaVh&D,m6l.;!L"UE@+d80G1%U8"7S6dQIqgkH0M3/qj?rRK&Bp*C-*lW##U?AYmHY%d1hh\7NBMSE6eLd:jVl,I[WTb85OFNdKX=k/Hq#4JdalmhZ[-cR9/.9$q?%k8^mi`<#&l[&]+mUkIs3E]*Tj>5_1s"6&$;Dl=]fY544@AS)sc'CP1\a)jo<DU@j'25mp9*n;<U!,AZ(_L$LWm88Ed)g>@O)=eH[%aH\3?U*iJ@O7'e?Zq-:HL:3C1QM0jYmnEA$YHg2+8Fj]u6n6=t^0rlrn>`.@<Jdn@,>^_nUr^MIOoX$gEethBns&(?WG.<fq3*a*%A(7&*#QkY/7$1nMj>Bl<\QQ:F-'hs"?fG*3of,l.`Mo.9UFJGioBPO$P!SF4If(/_R'P5,4/_:&0q_%DHCT+e-1SAY-ns"Mh.hKG%D$3%1f2g^5ak#h$-WKn&AH\Z#WXU;l:eMFV)J5J-&NVN6^1Sf[*23%cl7Dk#M->QCna!D)*2C'B=g$V0EqZ3sX7ti<E\^WH_m1fE%M0=*T&knPT'.rke#IXC_M20-)4GShkeN7e!Kt&sI,d^gZTS4)m&#H9ohZhUnUUhWu3E!rsHRd]CqUAZB]Gmaf)/_'$(iMeLRbYBT%PU8&S9%OcdgiE'.Eof\"k*''%Uesb.oaBg!Rp)JXq't0H43K1d\2Mt7-1aC]gguRHT8&Vpdc"q!Z72K1b,Cl=KTq5UFqKtXd*j@3%*>CN,5Xb.d9&Va'A8tT`=Wi[*1b8uQW%>kjCU5;,NV:S%UPt/"[Eu5r;I!C8Q<.LOW0!#-o1?fl'4oe!.D^h:Oc&IQR,Y2Xi$]6?%o1GiH%_I%"BcE.$S^m#HJn5%Mg$MmQEeLFF.?3TbF\6/ImWP[h<qFud.\:+`p7jr`B=+Q0?@(,s7qGdBal>fi:6%pu3`&8MFZVB/%Mn'<j3'M&:m6iL,\0C?+c#-!9Nk/"De5gJd=odZgbC`2/VbcC.-ae!JZBX)PB0jM-87P55>KnD9IAA`X]Zi0'p0L_j;j*5#7Inhr%3*/9oE`hU0*<p]/7ufTR:*U\)ZAT%Fcn:P:69-@Eo=%U6P%3?Z3F5I@T#!=.>aK@pL<!,/C>[I@[(<g[/-t"g1SV!\9rb1F]@lX0%l4f3`Lpm6AbtCe\Gn_NPori:_]#E[r*%sKEc8lFGWD!4Q'p/SkAG*iIpMq/W;c^I#l3$EY]QZlr<>loE"HrNGl^:8\dJ-*9STRqh%DQ)km)cF_=)GO\.).s8saaAF.<;o/'EuQ9L5<D:oo:2S7,Kbl&jZ+!tCh>r56>4Z293<YjH`3+20Tcgu@;#TM.!#5Pg**$KKcqgN%J3poMhP\Ns+\>hL=loI;$,Hd'hG<5<q!1>9;9kGIJeW/pO836O=SO#]Dk=L.+=Z;i@+(jd<9Pl%ULPHlTN==o5X(\e-!H*[Fn6X/%#0U2qFL\K3mD,-?4Y+O+KG7$J]Y`Xe.6tF3##OlcQ"RtkMU2B'k?KHLPPo%fMgcS.oT:s.ED"Tr_Ge&66lBP381@un!H`tA1%WEq%4sf8t[tCW+S.Nn9-)[DR*Kd2d1`Gg,Pnps%a(#MB#]:28<0\^pPdG6KUVc;*UZ1>/Bc[WX<,qP3Nh$kQ'u=e<<!.E'&_)mY:lENO%m?g<?lTl/-`EaV]4-XPlR6%#"RZ-=:j=4BDEC8TRY$ijDDfnem7\fO`0#b$ehNoLi&?5p$^nkj0!.1"Bdn`2NQWfk-@1>SD^FeE4%'7^HVY-l<l<6>;B_AqA.gHnLaU2e:tnK-SKeu<1Bk1oDW[96dkZKMcTg-FYL<>>^;l]#^u,F(V!gi6Q4/Ko:2XYa@??%DgIPqQc9%VBZ;SW(M%`^(T6u)=&m%*EcLS(R38-K0dUg<6C!!4<p9(S[t9TPb-'DPAR8fn?HLG9J2i?($W!?Y<)/@,TdF`FjEYQRIt&8>,I,h%MdJdi88V2Gkl`&m)_&onMsM<2>U;==;26lgj"sU@).AAQfYcYr`$riP;G:'C%Nt%0-LT/Fj?Oqu5F2_mi8KC`IcBPM.]QM,GfVih%Q"\+pNd[U[#/@(!_.<19.pcQbNE#&8hk8[,-53Gk.MQ)GbG9O@GDWSgT8M3KC+=h%#="WFJ**Xt9[6e(fX^o)P9=b*XKLl/S5*ga%dU9+355!+@S`7q"9oB[c8%kt%FYUe^mRhUcTaXI4;`?-G'M)[F\)Aaj`QErm?o;c1Y*#+:1t5c)o0>L\F>d!\dWP1sP(/FDGe<KF%*TAhb9d<.eGS"R;3Ch[j4Xc`3LYl%JP&!TLITQ&i*!P"T/nKXo7_918%Od$Tnl7/mK&RX(:&IbR;e4-<hnoPb*`p?4dFq$*g&/?d%Tj?Q[CrnY(Fk//a^um2=[k8k<eug,-CT!6In+]!AG`9)anlW0#ARf.kaUZ)kWcj6*`Am:*nJ4>p*?>4pY@pk+-=tc!OK9L8f3cF(%<^^#J1?U6Zp=7\s<Dp:eNi8"=`9&eB?@f(OH+iRg]q\GXb-3?<ECWH(N%i6##Y,%kD:Ab9#&9pB*G/dmoK<JZ:Lf5hEP8HMWnS7V%@$S^A?&d9-[Nff4Ab9qPlKjHB[^47'XAl_$+APNlJmpub7L^Z45u^hbMmL"KZ5AiZa[g.";7/ks+IfLPcP?>D_,RfYqoLId,MXi7%OAnd(\MU`g8dj7?4B8CjR=g2P<#?2DI0SZLQB8+P<W'!>@N^]tb<@S.;U3)o&i6'TEd.\".aaWs;M$S[\U,g*=NoT:QVYp?4J&R1%a,dF0IT2%4V3K>jkq[7upJkj.^^&m.bB=D_71]Q@Fu5P]UW'I)o637:!h`^:o@Y7$`A`92[]<;AoA^8\@]r@P9ISYWmHZ*B\[-l!%/KZreEZ#9_^h>q-HN+uQ_XlP9U-SJkf'j9NAsufh]<&nMOc#i(Piujf;3haKpI)$L)Rt&C*)TK=NZ7TmWi61[Vmn;U&4U-t\3DD-%?56N"'0W1:k:*F(744N.V<?rX3bM266Hjn':9L[uj,l*q"g#[aNT<o6^RAG0<u[V#m<(g&DEBsNl;s:<c'Lul=SB]D\ju(E4+*]V%)EYH1`.d3Hgp=o;)5_b?B<d$GU\HFA/1OiCg6`c#[N!Di'd^7@X,c@P3]F\\Bi=t.HX&T-<$jlD8<8l*Phr3d4?A+@9NQLujmRqP%;p?[f2-9l7bWlkm4ec\u&:9qs`YMJe!NG-J2$h2o<,*84PlI[ZZasa73%<o[K.,fann];F0]UP#ooeS1k<@aWgPZ<o)WVZ&MEomh%1(!SB/#-CY"--=j'L;r,JJ?@!JSF!*9^r>/V46!5)!aY5*gO%(DLutRpruqf7c.;WKh/A92^26jM#0B0`Hi+9&b$f(V\r554u@AI%ilObO^<]d9UUU`NCd"qdU@K4eMSKfsFXC`Vo"d4kadeTE+SH]p!]CbT>Z$Usg^#A[FcN(m:qit#g$+>j!N[cs$V0t(RaJKVmB0ML%^0*OK[47L["N3s\Eq1qQ8]5M,^7[tqqld=$ZaEl^HE+QeWo\5X8iS87jE`1!q&WOhkB'hH)$:]ZLNZLOTu15ho)#-*TctoV]_UeM%eFHQa17,>:-]UGY$8"W?22Ik0<=Z5Ee<knJc-ZjpN`sRSq&i`SbiA0`ki"uB,PW7=<:u3(Pp;#2jTLDkfF,WIW$1-`&$(rNp:0c;%`\]^[JZ._0KdL#6+9G)klDt8<l*\o8=RWAFVq]VL3&aI:q.@^DS=o.:(K,(ls1bg[fs)O-Y36\O5P1b,&f?";BI@?+5QUSoF/+jM%a9JXiUF!:@^\;#LT*R3a"A-KnGtA3mAAic[ZaVfKjU+0_=$17$Rin:!WtbD/@H6O0nuPS$OkXT(P)t5XHuY7_Y0?SD+oLEf3T:gK%C]MpaX5pYF.K4J@I&1)@"^..e!4EFhb`sBqCgB$Xpgiu]9Vo[+3_>(\o?C\98EB0$QcM<G35bJU%jd5`#Kd:=8egLnQ>5ure'o$/%6=0bSS-74bJta@6lNp/5(s;<Uc#!"-hEViW2E6.q+Vq4FhtR`&FVfEXfh'J2nMr:t&:Lham)@8T,[->fOF4>H_q4"[/P0s^q]K61%f"D]A(.UabQAkYqQZNlL9+V?u==Wcg7/h(dA!lU"E6._96&p1Pdd2!^/i[Wf&YLioU7O&AScoCJs!r!l]M,gN.3oc5^Rk<]D+jFs%j\k$bl=-oJ50.5V:4=p@HY?r/Qp]BPWI(SbgY/OsN%u)1)@6.(YM1&_*6aX/)5.7Vl6%qCMj's%\7\W6/;h_1+[nDiMl!MT[/dm$%M@E'0c]ZlgjoDkTKO8,:?W(#bKX1,Va<D&jdX+q)fUGrBJ$'K1P3>6+@Ie;/cN#Yb:<'nl##Yes,.hC&D\]i^T-n\>R./dEZRkB&%i[i8kZp./5Jn<$CX]s\dWaGc(Y<:#kiYpB[)+jO=L34-,DJEBr5$Ds\R?"SMed8>X`WFZDOrbM#*2"]TQ7Y^MWSc&)]I77lo^PVM%;UJA2Yi>Fq7k.-2aB5$WGgtCpqmfAJ7^MJF_Y-iCZCsp-?d8bol"tm!Ik6=l#kCT(?%Bfs:\JiJ=iI@6FYfg49L#74C^?oj8QEiY%4^>*b2C'uM,/?4dJU9u;8uku/H[t#60"G"8>HafGcX`.FF:W74!=@`^hL2ZYQ3l@_drA=DIO[S+#+Ss41;^EH@Z.S^=s)a(iA+$$%7gLpl.B_:2"fa!Jqt8^NRU"6,rMh=72quo0[E%rB=P/KJ;[]108o.ENG6B6uS>d9E:W#1u)Q@T"S8$`<G_dXeof2j"6dl$GOqDLJ%dP;na&;uU.Ruqqq<F$iIEPjaC0WP[VS;.f@=@`URfdG2\(LHEi1PLhR#f1qn$PaQr#<eCFJh28OqqXp>O$]rk$FnY;YX8G!ha/4>%;CV<reg+Xj!n0_%CpJBf/6lE_jm=QfKjtU5p9J$,:^ij8/tN\F9HafH-"j)8":jkipA8cT\5J7l$5,:Ac,%s'3isG'R"SY,$Be?i%XNrZZb]i$iE-:&fS"pLX$g)2)CN&_;ZKPOGPO)Q$cgF4)]H1'"jg_^O<*ec8?!--;!f8f3K#N2i<S5J76B7s\Z^?=rhsQ#odn5Nl%);CLkIRq\N=/H1cA@jB+]F_;N*64KEHQ<hZ$l+kkK&&_TGg"srq'3uPfo&AMbq=+(@,!5,]KZFX=el^HnE"Nrj;V]s@ZZ=\`:MqM%iK.$Uc11nU<L3afD>G?*7L8q+.8]..:s^/h([oV3HoBs57(A1e[u$NMOV>#-'^^Q_FDAD]HS3F2=[nXBAM]fVaDpW$4Cc>%/c7_)%YjEc=)P9"U8-ZsJr\$:>+Z.C,:5_eq#rYA9SJ2.=3W2G1[U4/-_("C$adUGW2HuiWXQ.$(F&D_boG4TsF:7-mKgfOQ?I$)>`k`0P%cu=(JPB'L@s"o8rK+GnhX<J*Zg3,.o]m]/f)((c\6P*.RFP/i]fMhe/Y@_i+MnDfY8U7F6a4T;EM5#!k:M8*/K6;pfn*%Nl3oI$/%7['S++T>JF<SfofYXqmq<N6QIl%qa&'U9SOhh(cJM6KDP`0r6(=)goM;/cO2l'=bf6'gc_epCB]#to3_V,q*;*pd61>0M$t'Du;Q%M4r@m)jjuT=D?W#:3<=*g=>4Io*2)%3a7K1!pJmK)@=)D'L?O>?ET78d\PB)bL&CU<\WXfXL3J\KKSP.PUl93d(jL%6?5NBU]l4O%Kef`R2ASA?%LX&7790&,YteLGP>_^oqjn.N\3a^MOe.ek<=Jk7;+gXmfn*W1E#b.drMlGHS>NXbc>E'T;''o;n=PXEF4q.k.55'l%Q`)ms13ZKIZeCHs+<KXo!-$bi1"e(:h!nORiW,R]KmMnKe(nuAgV$kb\dArP&?26_06Ik)fF%d9`'1:FDRXP'M@8o*@$0nFI*4D_%jjhd,DCU+0,LM3Q<udO2R,:#VHhH4REZ;/mh:ae.o/$7Ea%8#m,kY9+XFM)jSIa``=u5%m)(oIr6CmsL)Q^_`cM2TDm$rbT!XtR)%EgNWPoH_VK7$_[q3S1,!fY\X\9>(.`Ork^u2p8A.-!W[o,0lFb'dBM$`J,Bq(ZK.[-hM+NmnssQhV`P%@HFCTQ]CKdgX<+HD-.qO%?a?,]F$Zm&_-Y;3&U`Qa+3/5De2a](!nLn7An,:-iEgl38j1+WNk?__3=\$BGcrR-/i/J5FC)kQCt`_qBo1/7(B#$F[2#lS$%$tH%)V;[Dl0UQ\SRA=hEi@L<Ec-p'iYu_"j=Foc8nZmr(at^'opra4r!M"o"Lc5lqSc?ZC.l8jabVsbg#;*e"uX;'\9FuN$rd#i6"rBX%`c;9??8;kteV2VPJcc7%AC%i\'l<bm&D>o5'osfO/2`2n"JKc![HOSZ@kC?&O_]l2O+:R#7?@]oRQI7J!Ne5ZYNPW<1N+fb=X!O<%Wj\\Z(qq(1J=B8s?E6'Z?AIoJA//GYB2DNNNS10Pp%>\\9X;It."(BY[bIsn@=G#Idq#R*HV,Y*lr>V_EpLuh_f8#4%nF1h>[oe+%5`5,#&sVc*Q>C[,XnDSDG_qo<h$%MZS#p[/HSl?KK5G,CPof+Q*jUW5-0E)OIdLId7NlJ<M?rr^/KQ@e7^E*[1O3d0;L(]4VC5Te%_Un/0[MskH,#qDr#"k"D\"`H=[d?#]$A7,$D:>u4VR!BUkT"Nf-RZsRj)VS+Xq+!m"t8=0;eLX>9G5SQfsg-bHuZe7d[Qq-1^8Im%ZAS59fdTbDoQS(-P"bHE1t>p,i\l7=P"lT'9jRa0W46i7mlkJV>Nh5h*\?l$EWo?[0OD"T.2'`t8W.0%1nD=@"[tdf9ST^G-l-J.%&@.IY#+nECR_oI]]NNj8?+8Ma.HS^VbZTBW/mRQ:M?^ZNA20WJk?r;%k5(7\VW"H0T.(-i2K&p+Ut8VlS#OB+@gClQO:T*,MlE&^%_)!$=Z+N^%fmPF%gb,/8d3pgZ,/P-"P[L\=/*W=gpBSD?flHOuRT),>(n5j'3!$f2F*C96a&,C]VDL8(3r6!7OqIjVaMojR"Ss$Y%l5^VJVOioaCYkXCe48`pJr=&;gTNJ+,#R?IX><h%j;si@k=]-hlujp+Xfs?bTkS9(>..Or@:YcdJm94f"j<)B8V?H,M4C&5-CM!!%Zn@+kiYF,p&rXV-9s8)":_XKo:)*Pb.qB.a=pRb/`Jp_pn7fG4"<*_sK+rM<Y*tp'JkaR54#B8>oV)X"Me0-7)dB*W9%Q")[a.pF%79q`SU8N1@1?9[!qsWSPpY%<h]KZ7:%d-@cQarK\i;*0k/EN-5F!F/=dc::/;OqW&(CO/PNe#j?"$YqD<?ZcpUM"0p6PC5t:M26s%<0D'q3b2Hn9Ser_2I]4cQ4+^8U,Q01<mVNmqH7:1H!P;O$a+F)Q?7];:V;9oc]D$Y.*_\tPT4BAek6n<Z,kbCMeYipnr>PMpPhWU%?pA8TAPW]t'.dqRWr>-f2<COaQSreNTA@S`lbLYgc)U2kP8+)>D^C^lO'k!;ZH0KkUCoq$[jaacRtFu2=&2#V.?bc+Z3P#\hss@T%b<eCKAZMdf0F'Pk?u8sR:C&7"?[@uBeR8G#Z)!<]O*DrZj(`P%r8Ncjd;_;Qm1F@pH6;s]Fqk">1tGX0duch8%^Yhm&M-Oi5]M>W%pIft38-YV-X.kGPF`c=pbRuC0&t-XYn!gaW_lGWC,:kd/(P?Vk?X33PhNSsIOVo8I/<Nsh@)G6$CgZm$].-a1UM[J+f1o.B92,5U%3MFuOQ!/DaiSSo;2j?m>0+/`cYGu0Y/\/a7c18"SP]W6ZK41kX!k_+sFYP?tV*%2$E!\'X%$O%bL@\4F5tXUWk[QW@BkN8r6[a#D%"`]A95BS\)NeFWg.)Q'Y-CF1GC#Na@Y[-jGQS>XG,p,+M=#<UbJca[,@sulS[H,R^L0NRC9)B(J7kA<Jcf^GSg+';Lp1/>lgF?[/%^h?3Z-N>O4[+-IX=_==#DP0<^BA6=AO0ffe2u%:;%R0(2n1+cHdo9_4.0OP)>=?Q!JEj5;@55(8/j[<s:fYhnh+VAI5m#;mXIB*O%)J"jn;Umd0#(4um8\Mj<^`[ddLXO_AraB/d0Kk;+Q_PEao<oq-/Z]QY+FFt$S*AjLV1Cn&;1<QiBXoM;S)KNa1OBiN:@u8B7CWX5%HJ6Z>f`eaiOLGjpc*l@_!-\@i8aMCY!+lDXN5V]SXC7Isn&q>W_O#sG/o.%)$mQB/D'=3?\_\3e#(S['aT<`#CtNm>d_DL!"mR3*%6D/&nb!)pr,QG!UoX;ij$X)<>X&5aE=R&0;8topd8E<G,`%CDW[YL2nR>qhBL&G!Wn.c0*/Au=47Gl"Q:$E2(mP`2d;aM6R8'J*6%cp*h33rVJ!f4bbg`&6tPZEGXs?S]^+:Ro2O<BC#Z@KDrPKD[Q+RCFTX3GB%."e'Af*&sY]*d4JeCCme2N@Y>O49`>dcN;oF)p#`2%0hq^95j72W->%hs%5n\9,HIg<EUa"\WWSh;:!VC=jftd\jKGE^)C`PJR3iq/3\cqKXluE$Jg^&"1&fn-23C=M>nUciEsl-c.M&rM%o7jS$:6Vb&gp8jPCp3;AEFSPIZ(/fT>GrT41-RKFo@qV'd%rI]lXYOjp?!g=.Ht=an[`RuPFn].0c.YMDLpJ#R6[&@doT)S2^sY*%A9[sed(Dj>_tPgF>U'pr/L6f3>*WkkZ<C64&hq])T`>m?"-PM'_WMQ/`3QLlQZ?m*b`)<!p4anAA3UYhMb@>NH%7ht7j3B"pA%du%X5qi(eT$7eS:A'^"j5/fLubhrKF[ICmN%Ha];]332fNQ%''FV;!;BVSh>5Bc];UYK3;HWWnB(SEFT]f2i3Dti)j8nNDEaV&!bM!*%7eZ_Kl+Bh9FH5+ZVWqufhMu>MB<u=D)6hAj[V$)/?J-nKMBFtL4uORMlt">0aD)_`8kl@rHkgm1[S>\r7os-BFupuh4!Z"E:$tZY%7I(hWl+V)92@,@pIXuO_E&5tu2EUsq[RDZ;n-[4'fHo'b.5anEOe6'BdDDAhP&marA_K0nMX&X-dS0*n$q4BfMq*Zaf'BNhmA?%j%;9ZP26OGk,hR7#(`Fb8R9*B&M8N*okof,0@O2Too0i-CESIkJg\lu5%q1s?2CFM=U)cH_J",hUfdpuA&lN&&I1?\9(0J,cmmImc/%.N8CO:W3gPOlf@N3H?5DHV&B*DR9,08<dR]Gs0T6IFM+IgVU[@c,H^/2?ePA48cDanGOl/(Oo=hKDMhm,d6sV4=\4%g`8d8ZI/:[%6;klce#S_jR:!`J8;F47E,AJ%9Q(bW6op_q$(`)#Lhp5.s3RR*6&X[](+(<>T#FmGc%f4'J]'gf.n^fKIq6jNW>6;eF3`i%J4a=m%Q1gN6lar(Q#phJ%p)9i$ojG>SOO!>5lRYW/'fV1+"VNRu\R,0Ol7?1KQ!;ZS0[$G#&XnRVGb`8\4XQWL+q>[qY6BHaiZD)tDkG$B%/L$T+`+qU3o-j#sgbDjN.4An;[dTgNho25gr=V)nHodDD2_fT(d"`WVC7&CMs2QHN&#_HZ0sTXRoo>^EG9OsiraZOB2[2A#J4@1V%_uoXOmijg1Fa^3a#;hUD)^ss'$4/fi_m60[`c8n>VE*UTVCR$qj)V7cO.a]P,R=D"/fUR'`N_5eX;caq1jT)qObs2:j$^8<!XEsV%%K^QPEUGRScDGsD\)k?9gXbQG5#\)OEP9D/!rFtn9gZB.VJ&(C-9[&o*q^JbZ+!M,/s'AlXgi7l`'W=Vgo#7V2#WQmAJa.\fggC$%:e^4F6`mgl0q4Q=n6Tq!3\2Uj^OHRi[[a@WI<81C49D9rT16/Z[`p_+.?m%=/GF#/fD0$fPTlhq^\!MX5E5*0@Jfn8ZnMsD+Mki;%2)QsL<Xb$;0QHjQQ%K"_>*te`LfcaeRa@Xl2:Na/Y&%<i]>p?5OS.LtK>DB9HJak+pOcF'hVLD7$>ga/fPu8o;R@D/o)'*mnbL(Z%VI26QQNKkd_q@1$J9<+^mXa8]qt=o3T7m)8A"rhm*jZ.mI*Vp'Xi2Ijr?71,:o[f79.[5FD^)Z-<o445%Xm!'pj,L(*-P+k3IIW>%mPs\^]GH@!a0onfVNomj),RP]&hi%IS/k^J^cf7YkJM?&_om&)bu7#mmk[8UYSTMoY#cbApKR7^^ummc-m'uM*4GU6K1TMLrVgM-%J)%g'8tYj'86*Hgq7)elP1L1eO,-OfVIU+H)]j2]9RH3s50]IhENR8L[T[4/DQBgsZ)2k>o@)X-`%of#pf7G&4Pr0@J.NH6)Q%f+%T^AZ7NJSD.FG>#d9$h!gk3o868CUM0r#ODq47)]7cei'/3l[@H!M<m-bm1u^RjfIa98@BP17hV?5d716].5qNDAE!J1GBsa4<pE?%mIeTfkWGrd(Qr":<`J(nl2$ZV4U%e1C'LsVGM>WG66"82(Af`Vs$TS_9/'Im54\"+X8T5W:5oG%STX#I\oXnfpqB5B6g#AXbAPH-%S-kN@._.W+jstPiG`2@$qi]D!&EMT^[Me6K((iGV<C]o,#j%%O`&01BBm8"&AN%kL-)H&H(X"L;!CdUoY9Zt_Yq/Om!FB-MG$Efe%IBY<m;La^dP1Qr"]sJ8.Cj`n`K8a+d;n?nq=@/YVRC3+-H&7TJ+urlY;HIHoB:C:54GR4.=^TYEK)7b/r9D\67F9u6do2!5Xnp"3%,&C:B'q9%XfF4+`!i:p=^S;!k7?>5h,],US[=[l>AVgM@$)hMrBis!"@MZ^C=RMqpOa8';7/#SX<q$#k^=hg[Dp5pq_"%5qbpJ[\%Z1honjfcLe!hd'P@Gj$Jm#KZW*T."Odm\Ff%KgOFO0U0^7Mh,Yk/4NhnA77*?gLj2p@++2H6MAsm8X,Zl-$QLCfoO]U;l$G^H1+t%-I_R=%?Ba[HYANm]H-p-5.ET]EI'YBARTA'>$tX^l?h9G=sNJlSZ,;BlQ&k<`m=+Kda(.RKWC5F0t\V&2_9'**,-+:r2OAt5*NK;%c[B.2M*)T@0rh"WBh(q`o3o2un$_ml\BiZ;WaG3TT:Kb')sU9jnX!WC!FZFHcJ9,+;Ufs!"=1mcr>Or%\/TY-qhUTl-KTfY)Tp3G%(3WHuRWQ5]7?YQX(;dKHaQBtdQG_R=h@/Ag%fX#(o=]jmP1MZe5$Jb[30VLk1jBUjEOe*`%t%[9jUA/tFRVq1\jIB1Hr&djmJ;)-%D;N0P[FBDB'Z3ge&L?IR^]t)XrLc6fbIR9*gV(e9i%E0PP8Rf`"oggN>)"=2DJZ\M/Z8AXJnk%`DGt+sTP0[:O]M-^q[.7#b<#'K%I.1L\Fjl@DS!5fuk2oK89_IU"eU`>_rjHoG)'ACB)YtGI"!86fPN]]8V.JZq*DG.tAG8(4]LMkf^)kgX3HZjpmC_<]\T9Q2[-l1b%Pn`$Ij.<tnaZ_(rro7(2XZ]G/dKKC)E[;=YT^5?4adYs]E,PGZ)7T@EQ.L8Q8W!4fHX-$2:8t,`Ce4[8"hY2lpinKmH/)3a9s/:%%mlk<uj:N\UN+P&0V+U*Y>.T;c#!#eL\d(81'D,50+p_[CHkjenV(e_Of'mo+QJiV:[P80M9\mCrY;^iJ2*ooULSHL$*\`Ap]ZD:1%Ctiu7JmbH;r;I9KHXmE%Gu-ah$l$_#!r.&$#V=;5SC!t3_t(=HgX^"FS8$3q\D1RH8]orrN"F1XVO=*[LLEg!:),E#XM&nLWb[Zg%N_HD@\O.7+2:_-;RZA$-3jOmpeD!:1Qf8_8Z)73fX!JlGKkIuVb)AXPG!$4Lr5]jY2YD.R+!)djdbT:Xm>dt[\^E/VhDQ%Zqqb=H%5&(Id^g1XC1-^8qoN-+(Lfmu4FZG+X><OOs+tRaXNkkU%\SprF<T*j9;[)U`p$Tq,X%>(W&gEeTBf;RbdVdiF);_HaW$BheT7*+#%qMu?9b6I*f_Gj<=;$q&(ZmEmQVlBl5c:$<iV.fSV+I:09V(i#erl%rMWF@p8\C4F((6%.g19ts3)k@FG`pY^KioGO$3uc8^.E7i4%AB#d?D_=4pOMbV:"ageQEo/7`S&__`Ct&-8J1XJ;01LR<m/csCk^=Ae[^^<]m[Lh*I1#BuXehpPY4n=-0dp`d.^^p%@!Hnim<)(e%PZ\Ob?_&V_CJhKAKt'`F]03f0/)BI;)ZJ<#+eCUFG.6gR9ZP%nS!B1i,+uS1%!&^<>emnJ+blbJ`MW(^9Kk#Fja>_'V1+r6SC_bo%LPn4qs*GBo]O]D>B6ba;*\R-@9'u!E'eA6J:3Oq4E@&rsWPs<L*.9@F$4iL"@Cbjq[e3e5cdZU-?gg"II8hGQ)'aX,6[kR_),dsE%W=Ml.FB.:ZI^AQAo_Z?O,@rB;UJ5dd.TOC3.V>*i:Z:J\AO)Ij_fkE>@%=)3p9"*NDF_$;T$F7I6&3`KF=E:_%,2u8NB-SCrfUYb%l=(`o/,jH7cSLX-6pV>,)\Cl7rPkX'XX9*q]841]`Q1>*#3,0k2bF^uCV(>L)ZP:9G.5_6b1Sa_?L=JjcZl@f!CTtk1CD)(`8W+b%*!EuLPSH-PK[ZhQ-dj0G&6`UZf5o>l*AZ"/(=]h_Fic7n`J1ud\,c93?^6[1Oi+_R\cS9#).e#SB`t=Yg?<H@Yn"W<dGG"']#jdB%[m8M3+?5Fk?jI.$[fA&#d$4H<YCWIL%ShAMc![emMSSgWlQ#UjG4q30@C%J[1:'=Thr!\t;.,4B*D''uf[s4s`b$t.F7nUh9g?Q#%g9.4Rf76)Qi2G@No#'-kFSZ-_L`VU+(P/ftHc?4+!d5P>rr%'8G70A%s7t-)s7EMLJ,\jHs7Q2c^O5kQ2o#1\j,a6>e*k'La3R!K%cdsg7J,9,9Ier0L%mU$O%tFNK:OiB7^T[\8nGAimr9;OWr;"MHJ,8UurZ@HX+oURgrqO*Tqj1+Y%s8"])#~>%AI9_PrivateDataEnd